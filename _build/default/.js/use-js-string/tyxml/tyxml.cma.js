// Generated by js_of_ocaml
//# buildInfo:effects=false, kind=cma, use-js-string=true, version=5.6.0

//# unitInfo: Provides: Tyxml_xml
//# unitInfo: Requires: Re, Stdlib__Format, Stdlib__Printf, Xml_iter, Xml_print, Xml_stream, Xml_wrap
(function
  (globalThis){
   "use strict";
   var runtime = globalThis.jsoo_runtime, cst$4 = "]]>";
   function caml_call1(f, a0){
    return (f.l >= 0 ? f.l : f.l = f.length) == 1
            ? f(a0)
            : runtime.caml_call_gen(f, [a0]);
   }
   function caml_call3(f, a0, a1, a2){
    return (f.l >= 0 ? f.l : f.l = f.length) == 3
            ? f(a0, a1, a2)
            : runtime.caml_call_gen(f, [a0, a1, a2]);
   }
   function caml_call4(f, a0, a1, a2, a3){
    return (f.l >= 0 ? f.l : f.l = f.length) == 4
            ? f(a0, a1, a2, a3)
            : runtime.caml_call_gen(f, [a0, a1, a2, a3]);
   }
   function caml_call6(f, a0, a1, a2, a3, a4, a5){
    return (f.l >= 0 ? f.l : f.l = f.length) == 6
            ? f(a0, a1, a2, a3, a4, a5)
            : runtime.caml_call_gen(f, [a0, a1, a2, a3, a4, a5]);
   }
   var
    global_data = runtime.caml_get_global_data(),
    cst$0 = "",
    cst = cst$4,
    cst$1 = cst$4,
    cst$2 = "//]]>",
    cst$3 = "/* ]]> */",
    Stdlib_Format = global_data.Stdlib__Format,
    Re = global_data.Re,
    Stdlib_Printf = global_data.Stdlib__Printf,
    Xml_wrap = global_data.Xml_wrap,
    Xml_print = global_data.Xml_print,
    Xml_iter = global_data.Xml_iter,
    Xml_stream = global_data.Xml_stream,
    _b_ = [0, 1],
    _c_ =
      [0,
       [12, 10, [2, 0, [12, 10, [2, 0, [12, 10, [2, 0, [12, 10, 0]]]]]]],
       "\n%s\n%s\n%s\n"],
    cst_CDATA = "<![CDATA[",
    cst_CDATA$0 = "//<![CDATA[",
    cst_CDATA$1 = "/* <![CDATA[ */";
   function uri_of_string(s){return s;}
   function string_of_uri(s){return s;}
   function acontent(param){var a = param[2]; return a;}
   function aname(param){var name = param[1]; return name;}
   function float_attrib(name, value){return [0, name, [0, value]];}
   function int_attrib(name, value){return [0, name, [1, value]];}
   function string_attrib(name, value){return [0, name, [2, value]];}
   function space_sep_attrib(name, values){return [0, name, [3, 0, values]];}
   function comma_sep_attrib(name, values){return [0, name, [3, 1, values]];}
   function event_handler_attrib(name, value){return [0, name, [2, value]];}
   function mouse_event_handler_attrib(name, value){return [0, name, [2, value]];
   }
   function keyboard_event_handler_attrib(name, value){return [0, name, [2, value]];
   }
   function touch_event_handler_attrib(name, value){return [0, name, [2, value]];
   }
   function uri_attrib(name, value){return [0, name, [2, value]];}
   function uris_attrib(name, values){return [0, name, [3, 0, values]];}
   function content(elt){return elt;}
   function empty(param){return 0;}
   function comment(c){return [0, c];}
   function pcdata(d){return [2, d];}
   function encodedpcdata(d){return [1, d];}
   function entity(e){return [3, e];}
   var _a_ = caml_call1(Re[26], cst), re_end_cdata = caml_call1(Re[2], _a_);
   function encoded_cdata(s1, s2, s){
    var _g_ = caml_call6(Re[25], 0, 0, _b_, re_end_cdata, cst$0, s);
    return [1, caml_call4(Stdlib_Printf[4], _c_, s1, _g_, s2)];
   }
   function cdata(_f_){return encoded_cdata(cst_CDATA, cst$1, _f_);}
   function cdata_script(_e_){return encoded_cdata(cst_CDATA$0, cst$2, _e_);}
   function cdata_style(_d_){return encoded_cdata(cst_CDATA$1, cst$3, _d_);}
   function leaf(opt, name){
    if(opt) var sth = opt[1], a = sth; else var a = 0;
    return [4, name, a];
   }
   function node(opt, name, children){
    if(opt) var sth = opt[1], a = sth; else var a = 0;
    return [5, name, a, children];
   }
   var
    print_list =
      caml_call1
        (caml_call1
          (Xml_print[12],
           [0,
            Xml_wrap[1],
            string_of_uri,
            uri_of_string,
            float_attrib,
            int_attrib,
            string_attrib,
            space_sep_attrib,
            comma_sep_attrib,
            event_handler_attrib,
            mouse_event_handler_attrib,
            keyboard_event_handler_attrib,
            touch_event_handler_attrib,
            uri_attrib,
            uris_attrib,
            empty,
            comment,
            pcdata,
            encodedpcdata,
            entity,
            leaf,
            node,
            cdata,
            cdata_script,
            cdata_style,
            aname,
            acontent,
            content]),
         [0, 0])
       [1],
    include =
      caml_call1
       (Xml_iter[1],
        [0,
         Xml_wrap[1],
         string_of_uri,
         uri_of_string,
         float_attrib,
         int_attrib,
         string_attrib,
         space_sep_attrib,
         comma_sep_attrib,
         event_handler_attrib,
         mouse_event_handler_attrib,
         keyboard_event_handler_attrib,
         touch_event_handler_attrib,
         uri_attrib,
         uris_attrib,
         empty,
         comment,
         pcdata,
         encodedpcdata,
         entity,
         leaf,
         node,
         cdata,
         cdata_script,
         cdata_style,
         aname,
         acontent,
         content]),
    amap = include[1],
    amap1 = include[2],
    rm_attrib = include[3],
    rm_attrib_from_list = include[4],
    map_int_attrib = include[5],
    map_string_attrib = include[7],
    map_string_attrib_in_list = include[8],
    add_int_attrib = include[9],
    add_string_attrib = include[11],
    add_comma_sep_attrib = include[12],
    add_space_sep_attrib = include[13],
    fold = include[14],
    all_entities = include[15],
    translate = include[16],
    pp =
      caml_call1
        (caml_call1
          (Xml_print[9],
           [0,
            Xml_wrap[1],
            string_of_uri,
            uri_of_string,
            float_attrib,
            int_attrib,
            string_attrib,
            space_sep_attrib,
            comma_sep_attrib,
            event_handler_attrib,
            mouse_event_handler_attrib,
            keyboard_event_handler_attrib,
            touch_event_handler_attrib,
            uri_attrib,
            uris_attrib,
            empty,
            comment,
            pcdata,
            encodedpcdata,
            entity,
            leaf,
            node,
            cdata,
            cdata_script,
            cdata_style,
            aname,
            acontent,
            content]),
         [0, 0])
       [1],
    include$0 =
      caml_call1
       (Xml_stream[2],
        [0,
         Xml_wrap[1],
         string_of_uri,
         uri_of_string,
         float_attrib,
         int_attrib,
         string_attrib,
         space_sep_attrib,
         comma_sep_attrib,
         event_handler_attrib,
         mouse_event_handler_attrib,
         keyboard_event_handler_attrib,
         touch_event_handler_attrib,
         uri_attrib,
         uris_attrib,
         empty,
         comment,
         pcdata,
         encodedpcdata,
         entity,
         leaf,
         node,
         cdata,
         cdata_script,
         cdata_style]),
    of_seq = include$0[1];
   function print(fmt, x){
    return caml_call3
            (print_list, caml_call1(Stdlib_Format[13], fmt), 0, [0, x, 0]);
   }
   var
    Tyxml_xml =
      [0,
       Xml_wrap[1],
       string_of_uri,
       uri_of_string,
       float_attrib,
       int_attrib,
       string_attrib,
       space_sep_attrib,
       comma_sep_attrib,
       event_handler_attrib,
       mouse_event_handler_attrib,
       keyboard_event_handler_attrib,
       touch_event_handler_attrib,
       uri_attrib,
       uris_attrib,
       empty,
       comment,
       pcdata,
       encodedpcdata,
       entity,
       leaf,
       node,
       cdata,
       cdata_script,
       cdata_style,
       aname,
       acontent,
       content,
       pp,
       of_seq,
       amap,
       amap1,
       rm_attrib,
       rm_attrib_from_list,
       map_int_attrib,
       map_string_attrib,
       map_string_attrib_in_list,
       add_int_attrib,
       add_string_attrib,
       add_comma_sep_attrib,
       add_space_sep_attrib,
       fold,
       all_entities,
       translate,
       print_list,
       print];
   runtime.caml_register_global(17, Tyxml_xml, "Tyxml_xml");
   return;
  }
  (globalThis));

//# unitInfo: Provides: Tyxml_svg
//# unitInfo: Requires: Svg_f, Tyxml_xml, Xml_print
(function
  (globalThis){
   "use strict";
   var runtime = globalThis.jsoo_runtime;
   function caml_call1(f, a0){
    return (f.l >= 0 ? f.l : f.l = f.length) == 1
            ? f(a0)
            : runtime.caml_call_gen(f, [a0]);
   }
   function caml_call3(f, a0, a1, a2){
    return (f.l >= 0 ? f.l : f.l = f.length) == 3
            ? f(a0, a1, a2)
            : runtime.caml_call_gen(f, [a0, a1, a2]);
   }
   function caml_call4(f, a0, a1, a2, a3){
    return (f.l >= 0 ? f.l : f.l = f.length) == 4
            ? f(a0, a1, a2, a3)
            : runtime.caml_call_gen(f, [a0, a1, a2, a3]);
   }
   var
    global_data = runtime.caml_get_global_data(),
    Tyxml_xml = global_data.Tyxml_xml,
    Svg_f = global_data.Svg_f,
    Xml_print = global_data.Xml_print,
    M =
      caml_call1
       (Svg_f[1],
        [0,
         Tyxml_xml[1],
         Tyxml_xml[2],
         Tyxml_xml[3],
         Tyxml_xml[4],
         Tyxml_xml[5],
         Tyxml_xml[6],
         Tyxml_xml[7],
         Tyxml_xml[8],
         Tyxml_xml[9],
         Tyxml_xml[10],
         Tyxml_xml[11],
         Tyxml_xml[12],
         Tyxml_xml[13],
         Tyxml_xml[14],
         Tyxml_xml[15],
         Tyxml_xml[16],
         Tyxml_xml[17],
         Tyxml_xml[18],
         Tyxml_xml[19],
         Tyxml_xml[20],
         Tyxml_xml[21],
         Tyxml_xml[22],
         Tyxml_xml[23],
         Tyxml_xml[24]]),
    _a_ = [0, M[2], M[325], M[327]],
    P =
      caml_call1
       (caml_call1
         (Xml_print[8],
          [0,
           Tyxml_xml[1],
           Tyxml_xml[2],
           Tyxml_xml[3],
           Tyxml_xml[4],
           Tyxml_xml[5],
           Tyxml_xml[6],
           Tyxml_xml[7],
           Tyxml_xml[8],
           Tyxml_xml[9],
           Tyxml_xml[10],
           Tyxml_xml[11],
           Tyxml_xml[12],
           Tyxml_xml[13],
           Tyxml_xml[14],
           Tyxml_xml[15],
           Tyxml_xml[16],
           Tyxml_xml[17],
           Tyxml_xml[18],
           Tyxml_xml[19],
           Tyxml_xml[20],
           Tyxml_xml[21],
           Tyxml_xml[22],
           Tyxml_xml[23],
           Tyxml_xml[24],
           Tyxml_xml[25],
           Tyxml_xml[26],
           Tyxml_xml[27]]),
        _a_),
    _b_ = [0, M[2], M[325], M[327]],
    Make_printer =
      caml_call1
       (caml_call1
         (Xml_print[11],
          [0,
           Tyxml_xml[1],
           Tyxml_xml[2],
           Tyxml_xml[3],
           Tyxml_xml[4],
           Tyxml_xml[5],
           Tyxml_xml[6],
           Tyxml_xml[7],
           Tyxml_xml[8],
           Tyxml_xml[9],
           Tyxml_xml[10],
           Tyxml_xml[11],
           Tyxml_xml[12],
           Tyxml_xml[13],
           Tyxml_xml[14],
           Tyxml_xml[15],
           Tyxml_xml[16],
           Tyxml_xml[17],
           Tyxml_xml[18],
           Tyxml_xml[19],
           Tyxml_xml[20],
           Tyxml_xml[21],
           Tyxml_xml[22],
           Tyxml_xml[23],
           Tyxml_xml[24],
           Tyxml_xml[25],
           Tyxml_xml[26],
           Tyxml_xml[27]]),
        _b_),
    Xml = M[1],
    Info = M[2],
    string_of_uri = M[3],
    uri_of_string = M[4],
    a_version = M[5],
    a_baseProfile = M[6],
    a_x = M[7],
    a_y = M[8],
    a_width = M[9],
    a_height = M[10],
    a_preserveAspectRatio = M[11],
    a_contentScriptType = M[12],
    a_contentStyleType = M[13],
    a_zoomAndPan = M[14],
    a_href = M[15],
    a_xlink_href = M[16],
    a_requiredFeatures = M[17],
    a_requiredExtensions = M[18],
    a_systemLanguage = M[19],
    a_externalRessourcesRequired = M[20],
    a_id = M[21],
    a_user_data = M[22],
    a_xml_base = M[23],
    a_xml_lang = M[24],
    a_xml_space = M[25],
    a_type = M[26],
    a_media = M[27],
    a_xlink_title = M[28],
    a_class = M[29],
    a_style = M[30],
    a_transform = M[31],
    a_viewBox = M[32],
    a_d = M[33],
    a_pathLength = M[34],
    a_rx = M[35],
    a_ry = M[36],
    a_cx = M[37],
    a_cy = M[38],
    a_r = M[39],
    a_x1 = M[40],
    a_y1 = M[41],
    a_x2 = M[42],
    a_y2 = M[43],
    a_points = M[44],
    a_x_list = M[45],
    a_y_list = M[46],
    a_dx = M[47],
    a_dy = M[48],
    a_dx_list = M[49],
    a_dy_list = M[50],
    a_lengthAdjust = M[51],
    a_textLength = M[52],
    a_text_anchor = M[53],
    a_text_decoration = M[54],
    a_text_rendering = M[55],
    a_rotate = M[56],
    a_startOffset = M[57],
    a_method = M[58],
    a_spacing = M[59],
    a_glyphRef = M[60],
    a_format = M[61],
    a_markerUnits = M[62],
    a_refX = M[63],
    a_refY = M[64],
    a_markerWidth = M[65],
    a_markerHeight = M[66],
    a_orient = M[67],
    a_local = M[68],
    a_rendering_intent = M[69],
    a_gradientUnits = M[70],
    a_gradientTransform = M[71],
    a_spreadMethod = M[72],
    a_fx = M[73],
    a_fy = M[74],
    a_offset = M[75],
    a_patternUnits = M[76],
    a_patternContentUnits = M[77],
    a_patternTransform = M[78],
    a_clipPathUnits = M[79],
    a_maskUnits = M[80],
    a_maskContentUnits = M[81],
    a_primitiveUnits = M[82],
    a_filterRes = M[83],
    a_result = M[84],
    a_in = M[85],
    a_in2 = M[86],
    a_azimuth = M[87],
    a_elevation = M[88],
    a_pointsAtX = M[89],
    a_pointsAtY = M[90],
    a_pointsAtZ = M[91],
    a_specularExponent = M[92],
    a_specularConstant = M[93],
    a_limitingConeAngle = M[94],
    a_mode = M[95],
    a_feColorMatrix_type = M[96],
    a_values = M[97],
    a_transfer_type = M[98],
    a_tableValues = M[99],
    a_intercept = M[100],
    a_amplitude = M[101],
    a_exponent = M[102],
    a_transfer_offset = M[103],
    a_feComposite_operator = M[104],
    a_k1 = M[105],
    a_k2 = M[106],
    a_k3 = M[107],
    a_k4 = M[108],
    a_order = M[109],
    a_kernelMatrix = M[110],
    a_divisor = M[111],
    a_bias = M[112],
    a_kernelUnitLength = M[113],
    a_targetX = M[114],
    a_targetY = M[115],
    a_edgeMode = M[116],
    a_preserveAlpha = M[117],
    a_surfaceScale = M[118],
    a_diffuseConstant = M[119],
    a_scale = M[120],
    a_xChannelSelector = M[121],
    a_yChannelSelector = M[122],
    a_stdDeviation = M[123],
    a_feMorphology_operator = M[124],
    a_radius = M[125],
    a_baseFrenquency = M[126],
    a_numOctaves = M[127],
    a_seed = M[128],
    a_stitchTiles = M[129],
    a_feTurbulence_type = M[130],
    a_xlink_show = M[131],
    a_xlink_actuate = M[132],
    a_target = M[133],
    a_viewTarget = M[134],
    a_attributeName = M[135],
    a_attributeType = M[136],
    a_begin = M[137],
    a_dur = M[138],
    a_min = M[139],
    a_max = M[140],
    a_restart = M[141],
    a_repeatCount = M[142],
    a_repeatDur = M[143],
    a_fill = M[144],
    a_animation_fill = M[145],
    a_calcMode = M[146],
    a_animation_values = M[147],
    a_keyTimes = M[148],
    a_keySplines = M[149],
    a_from = M[150],
    a_to = M[151],
    a_by = M[152],
    a_additive = M[153],
    a_accumulate = M[154],
    a_keyPoints = M[155],
    a_path = M[156],
    a_animateTransform_type = M[157],
    a_horiz_origin_x = M[158],
    a_horiz_origin_y = M[159],
    a_horiz_adv_x = M[160],
    a_vert_origin_x = M[161],
    a_vert_origin_y = M[162],
    a_vert_adv_y = M[163],
    a_unicode = M[164],
    a_glyph_name = M[165],
    a_orientation = M[166],
    a_arabic_form = M[167],
    a_lang = M[168],
    a_u1 = M[169],
    a_u2 = M[170],
    a_g1 = M[171],
    a_g2 = M[172],
    a_k = M[173],
    a_font_family = M[174],
    a_font_style = M[175],
    a_font_variant = M[176],
    a_font_weight = M[177],
    a_font_stretch = M[178],
    a_font_size = M[179],
    a_unicode_range = M[180],
    a_units_per_em = M[181],
    a_stemv = M[182],
    a_stemh = M[183],
    a_slope = M[184],
    a_cap_height = M[185],
    a_x_height = M[186],
    a_accent_height = M[187],
    a_ascent = M[188],
    a_widths = M[189],
    a_bbox = M[190],
    a_ideographic = M[191],
    a_alphabetic = M[192],
    a_mathematical = M[193],
    a_hanging = M[194],
    a_videographic = M[195],
    a_v_alphabetic = M[196],
    a_v_mathematical = M[197],
    a_v_hanging = M[198],
    a_underline_position = M[199],
    a_underline_thickness = M[200],
    a_strikethrough_position = M[201],
    a_strikethrough_thickness = M[202],
    a_overline_position = M[203],
    a_overline_thickness = M[204],
    a_string = M[205],
    a_name = M[206],
    a_alignment_baseline = M[207],
    a_dominant_baseline = M[208],
    a_stop_color = M[209],
    a_stop_opacity = M[210],
    a_stroke = M[211],
    a_stroke_width = M[212],
    a_stroke_linecap = M[213],
    a_stroke_linejoin = M[214],
    a_stroke_miterlimit = M[215],
    a_stroke_dasharray = M[216],
    a_stroke_dashoffset = M[217],
    a_stroke_opacity = M[218],
    a_onabort = M[219],
    a_onactivate = M[220],
    a_onbegin = M[221],
    a_onend = M[222],
    a_onerror = M[223],
    a_onfocusin = M[224],
    a_onfocusout = M[225],
    a_onload = M[226],
    a_onrepeat = M[227],
    a_onresize = M[228],
    a_onscroll = M[229],
    a_onunload = M[230],
    a_onzoom = M[231],
    a_onclick = M[232],
    a_onmousedown = M[233],
    a_onmouseup = M[234],
    a_onmouseover = M[235],
    a_onmouseout = M[236],
    a_onmousemove = M[237],
    a_ontouchstart = M[238],
    a_ontouchend = M[239],
    a_ontouchmove = M[240],
    a_ontouchcancel = M[241],
    txt = M[242],
    svg = M[243],
    g = M[244],
    defs = M[245],
    desc = M[246],
    title = M[247],
    symbol = M[248],
    use = M[249],
    image = M[250],
    switch$0 = M[251],
    style = M[252],
    path = M[253],
    rect = M[254],
    circle = M[255],
    ellipse = M[256],
    line = M[257],
    polyline = M[258],
    polygon = M[259],
    text = M[260],
    tspan = M[261],
    tref = M[262],
    textPath = M[263],
    altGlyph = M[264],
    altGlyphDef = M[265],
    altGlyphItem = M[266],
    glyphRef = M[267],
    marker = M[268],
    color_profile = M[269],
    linearGradient = M[270],
    radialGradient = M[271],
    stop = M[272],
    pattern = M[273],
    clipPath = M[274],
    filter = M[275],
    feDistantLight = M[276],
    fePointLight = M[277],
    feSpotLight = M[278],
    feBlend = M[279],
    feColorMatrix = M[280],
    feComponentTransfer = M[281],
    feFuncA = M[282],
    feFuncG = M[283],
    feFuncB = M[284],
    feFuncR = M[285],
    feComposite = M[286],
    feConvolveMatrix = M[287],
    feDiffuseLighting = M[288],
    feDisplacementMap = M[289],
    feFlood = M[290],
    feGaussianBlur = M[291],
    feImage = M[292],
    feMerge = M[293],
    feMorphology = M[294],
    feOffset = M[295],
    feSpecularLighting = M[296],
    feTile = M[297],
    feTurbulence = M[298],
    cursor = M[299],
    a = M[300],
    view = M[301],
    script = M[302],
    animation = M[303],
    set = M[304],
    animateMotion = M[305],
    mpath = M[306],
    animateColor = M[307],
    animateTransform = M[308],
    font = M[309],
    glyph = M[310],
    missing_glyph = M[311],
    hkern = M[312],
    vkern = M[313],
    font_face = M[314],
    font_face_src = M[315],
    font_face_uri = M[316],
    font_face_format = M[317],
    font_face_name = M[318],
    metadata = M[319],
    foreignObject = M[320],
    pcdata = M[321],
    of_seq = M[322],
    tot = M[323],
    totl = M[324],
    toelt = M[325],
    toeltl = M[326],
    doc_toelt = M[327],
    to_xmlattribs = M[328],
    to_attrib = M[329],
    Unsafe = M[330],
    pp_elt = P[1],
    pp = P[2],
    pp$0 = caml_call4(pp, 0, 0, 0, 0),
    pp_elt$0 = caml_call3(pp_elt, 0, 0, 0),
    Tyxml_svg =
      [0,
       Xml,
       Info,
       string_of_uri,
       uri_of_string,
       a_version,
       a_baseProfile,
       a_x,
       a_y,
       a_width,
       a_height,
       a_preserveAspectRatio,
       a_contentScriptType,
       a_contentStyleType,
       a_zoomAndPan,
       a_href,
       a_xlink_href,
       a_requiredFeatures,
       a_requiredExtensions,
       a_systemLanguage,
       a_externalRessourcesRequired,
       a_id,
       a_user_data,
       a_xml_base,
       a_xml_lang,
       a_xml_space,
       a_type,
       a_media,
       a_xlink_title,
       a_class,
       a_style,
       a_transform,
       a_viewBox,
       a_d,
       a_pathLength,
       a_rx,
       a_ry,
       a_cx,
       a_cy,
       a_r,
       a_x1,
       a_y1,
       a_x2,
       a_y2,
       a_points,
       a_x_list,
       a_y_list,
       a_dx,
       a_dy,
       a_dx_list,
       a_dy_list,
       a_lengthAdjust,
       a_textLength,
       a_text_anchor,
       a_text_decoration,
       a_text_rendering,
       a_rotate,
       a_startOffset,
       a_method,
       a_spacing,
       a_glyphRef,
       a_format,
       a_markerUnits,
       a_refX,
       a_refY,
       a_markerWidth,
       a_markerHeight,
       a_orient,
       a_local,
       a_rendering_intent,
       a_gradientUnits,
       a_gradientTransform,
       a_spreadMethod,
       a_fx,
       a_fy,
       a_offset,
       a_patternUnits,
       a_patternContentUnits,
       a_patternTransform,
       a_clipPathUnits,
       a_maskUnits,
       a_maskContentUnits,
       a_primitiveUnits,
       a_filterRes,
       a_result,
       a_in,
       a_in2,
       a_azimuth,
       a_elevation,
       a_pointsAtX,
       a_pointsAtY,
       a_pointsAtZ,
       a_specularExponent,
       a_specularConstant,
       a_limitingConeAngle,
       a_mode,
       a_feColorMatrix_type,
       a_values,
       a_transfer_type,
       a_tableValues,
       a_intercept,
       a_amplitude,
       a_exponent,
       a_transfer_offset,
       a_feComposite_operator,
       a_k1,
       a_k2,
       a_k3,
       a_k4,
       a_order,
       a_kernelMatrix,
       a_divisor,
       a_bias,
       a_kernelUnitLength,
       a_targetX,
       a_targetY,
       a_edgeMode,
       a_preserveAlpha,
       a_surfaceScale,
       a_diffuseConstant,
       a_scale,
       a_xChannelSelector,
       a_yChannelSelector,
       a_stdDeviation,
       a_feMorphology_operator,
       a_radius,
       a_baseFrenquency,
       a_numOctaves,
       a_seed,
       a_stitchTiles,
       a_feTurbulence_type,
       a_xlink_show,
       a_xlink_actuate,
       a_target,
       a_viewTarget,
       a_attributeName,
       a_attributeType,
       a_begin,
       a_dur,
       a_min,
       a_max,
       a_restart,
       a_repeatCount,
       a_repeatDur,
       a_fill,
       a_animation_fill,
       a_calcMode,
       a_animation_values,
       a_keyTimes,
       a_keySplines,
       a_from,
       a_to,
       a_by,
       a_additive,
       a_accumulate,
       a_keyPoints,
       a_path,
       a_animateTransform_type,
       a_horiz_origin_x,
       a_horiz_origin_y,
       a_horiz_adv_x,
       a_vert_origin_x,
       a_vert_origin_y,
       a_vert_adv_y,
       a_unicode,
       a_glyph_name,
       a_orientation,
       a_arabic_form,
       a_lang,
       a_u1,
       a_u2,
       a_g1,
       a_g2,
       a_k,
       a_font_family,
       a_font_style,
       a_font_variant,
       a_font_weight,
       a_font_stretch,
       a_font_size,
       a_unicode_range,
       a_units_per_em,
       a_stemv,
       a_stemh,
       a_slope,
       a_cap_height,
       a_x_height,
       a_accent_height,
       a_ascent,
       a_widths,
       a_bbox,
       a_ideographic,
       a_alphabetic,
       a_mathematical,
       a_hanging,
       a_videographic,
       a_v_alphabetic,
       a_v_mathematical,
       a_v_hanging,
       a_underline_position,
       a_underline_thickness,
       a_strikethrough_position,
       a_strikethrough_thickness,
       a_overline_position,
       a_overline_thickness,
       a_string,
       a_name,
       a_alignment_baseline,
       a_dominant_baseline,
       a_stop_color,
       a_stop_opacity,
       a_stroke,
       a_stroke_width,
       a_stroke_linecap,
       a_stroke_linejoin,
       a_stroke_miterlimit,
       a_stroke_dasharray,
       a_stroke_dashoffset,
       a_stroke_opacity,
       a_onabort,
       a_onactivate,
       a_onbegin,
       a_onend,
       a_onerror,
       a_onfocusin,
       a_onfocusout,
       a_onload,
       a_onrepeat,
       a_onresize,
       a_onscroll,
       a_onunload,
       a_onzoom,
       a_onclick,
       a_onmousedown,
       a_onmouseup,
       a_onmouseover,
       a_onmouseout,
       a_onmousemove,
       a_ontouchstart,
       a_ontouchend,
       a_ontouchmove,
       a_ontouchcancel,
       txt,
       svg,
       g,
       defs,
       desc,
       title,
       symbol,
       use,
       image,
       switch$0,
       style,
       path,
       rect,
       circle,
       ellipse,
       line,
       polyline,
       polygon,
       text,
       tspan,
       tref,
       textPath,
       altGlyph,
       altGlyphDef,
       altGlyphItem,
       glyphRef,
       marker,
       color_profile,
       linearGradient,
       radialGradient,
       stop,
       pattern,
       clipPath,
       filter,
       feDistantLight,
       fePointLight,
       feSpotLight,
       feBlend,
       feColorMatrix,
       feComponentTransfer,
       feFuncA,
       feFuncG,
       feFuncB,
       feFuncR,
       feComposite,
       feConvolveMatrix,
       feDiffuseLighting,
       feDisplacementMap,
       feFlood,
       feGaussianBlur,
       feImage,
       feMerge,
       feMorphology,
       feOffset,
       feSpecularLighting,
       feTile,
       feTurbulence,
       cursor,
       a,
       view,
       script,
       animation,
       set,
       animateMotion,
       mpath,
       animateColor,
       animateTransform,
       font,
       glyph,
       missing_glyph,
       hkern,
       vkern,
       font_face,
       font_face_src,
       font_face_uri,
       font_face_format,
       font_face_name,
       metadata,
       foreignObject,
       pcdata,
       of_seq,
       tot,
       totl,
       toelt,
       toeltl,
       doc_toelt,
       to_xmlattribs,
       to_attrib,
       Unsafe,
       pp,
       pp_elt,
       Make_printer,
       pp$0,
       pp_elt$0];
   runtime.caml_register_global(3, Tyxml_svg, "Tyxml_svg");
   return;
  }
  (globalThis));

//# unitInfo: Provides: Tyxml_html
//# unitInfo: Requires: Html_f, Tyxml_svg, Tyxml_xml, Xml_print
(function
  (globalThis){
   "use strict";
   var runtime = globalThis.jsoo_runtime;
   function caml_call1(f, a0){
    return (f.l >= 0 ? f.l : f.l = f.length) == 1
            ? f(a0)
            : runtime.caml_call_gen(f, [a0]);
   }
   function caml_call3(f, a0, a1, a2){
    return (f.l >= 0 ? f.l : f.l = f.length) == 3
            ? f(a0, a1, a2)
            : runtime.caml_call_gen(f, [a0, a1, a2]);
   }
   function caml_call4(f, a0, a1, a2, a3){
    return (f.l >= 0 ? f.l : f.l = f.length) == 4
            ? f(a0, a1, a2, a3)
            : runtime.caml_call_gen(f, [a0, a1, a2, a3]);
   }
   var
    global_data = runtime.caml_get_global_data(),
    Tyxml_svg = global_data.Tyxml_svg,
    Tyxml_xml = global_data.Tyxml_xml,
    Html_f = global_data.Html_f,
    Xml_print = global_data.Xml_print,
    _a_ =
      [0,
       Tyxml_svg[2],
       Tyxml_svg[3],
       Tyxml_svg[4],
       Tyxml_svg[5],
       Tyxml_svg[6],
       Tyxml_svg[7],
       Tyxml_svg[8],
       Tyxml_svg[9],
       Tyxml_svg[10],
       Tyxml_svg[11],
       Tyxml_svg[12],
       Tyxml_svg[13],
       Tyxml_svg[14],
       Tyxml_svg[15],
       Tyxml_svg[16],
       Tyxml_svg[17],
       Tyxml_svg[18],
       Tyxml_svg[19],
       Tyxml_svg[20],
       Tyxml_svg[21],
       Tyxml_svg[22],
       Tyxml_svg[23],
       Tyxml_svg[24],
       Tyxml_svg[25],
       Tyxml_svg[26],
       Tyxml_svg[27],
       Tyxml_svg[28],
       Tyxml_svg[29],
       Tyxml_svg[30],
       Tyxml_svg[31],
       Tyxml_svg[32],
       Tyxml_svg[33],
       Tyxml_svg[34],
       Tyxml_svg[35],
       Tyxml_svg[36],
       Tyxml_svg[37],
       Tyxml_svg[38],
       Tyxml_svg[39],
       Tyxml_svg[40],
       Tyxml_svg[41],
       Tyxml_svg[42],
       Tyxml_svg[43],
       Tyxml_svg[44],
       Tyxml_svg[45],
       Tyxml_svg[46],
       Tyxml_svg[47],
       Tyxml_svg[48],
       Tyxml_svg[49],
       Tyxml_svg[50],
       Tyxml_svg[51],
       Tyxml_svg[52],
       Tyxml_svg[53],
       Tyxml_svg[54],
       Tyxml_svg[55],
       Tyxml_svg[56],
       Tyxml_svg[57],
       Tyxml_svg[58],
       Tyxml_svg[59],
       Tyxml_svg[60],
       Tyxml_svg[61],
       Tyxml_svg[62],
       Tyxml_svg[63],
       Tyxml_svg[64],
       Tyxml_svg[65],
       Tyxml_svg[66],
       Tyxml_svg[67],
       Tyxml_svg[68],
       Tyxml_svg[69],
       Tyxml_svg[70],
       Tyxml_svg[71],
       Tyxml_svg[72],
       Tyxml_svg[73],
       Tyxml_svg[74],
       Tyxml_svg[75],
       Tyxml_svg[76],
       Tyxml_svg[77],
       Tyxml_svg[78],
       Tyxml_svg[79],
       Tyxml_svg[80],
       Tyxml_svg[81],
       Tyxml_svg[82],
       Tyxml_svg[83],
       Tyxml_svg[84],
       Tyxml_svg[85],
       Tyxml_svg[86],
       Tyxml_svg[87],
       Tyxml_svg[88],
       Tyxml_svg[89],
       Tyxml_svg[90],
       Tyxml_svg[91],
       Tyxml_svg[92],
       Tyxml_svg[93],
       Tyxml_svg[94],
       Tyxml_svg[95],
       Tyxml_svg[96],
       Tyxml_svg[97],
       Tyxml_svg[98],
       Tyxml_svg[99],
       Tyxml_svg[100],
       Tyxml_svg[101],
       Tyxml_svg[102],
       Tyxml_svg[103],
       Tyxml_svg[104],
       Tyxml_svg[105],
       Tyxml_svg[106],
       Tyxml_svg[107],
       Tyxml_svg[108],
       Tyxml_svg[109],
       Tyxml_svg[110],
       Tyxml_svg[111],
       Tyxml_svg[112],
       Tyxml_svg[113],
       Tyxml_svg[114],
       Tyxml_svg[115],
       Tyxml_svg[116],
       Tyxml_svg[117],
       Tyxml_svg[118],
       Tyxml_svg[119],
       Tyxml_svg[120],
       Tyxml_svg[121],
       Tyxml_svg[122],
       Tyxml_svg[123],
       Tyxml_svg[124],
       Tyxml_svg[125],
       Tyxml_svg[126],
       Tyxml_svg[127],
       Tyxml_svg[128],
       Tyxml_svg[129],
       Tyxml_svg[130],
       Tyxml_svg[131],
       Tyxml_svg[132],
       Tyxml_svg[133],
       Tyxml_svg[134],
       Tyxml_svg[135],
       Tyxml_svg[136],
       Tyxml_svg[137],
       Tyxml_svg[138],
       Tyxml_svg[139],
       Tyxml_svg[140],
       Tyxml_svg[141],
       Tyxml_svg[142],
       Tyxml_svg[143],
       Tyxml_svg[144],
       Tyxml_svg[145],
       Tyxml_svg[146],
       Tyxml_svg[147],
       Tyxml_svg[148],
       Tyxml_svg[149],
       Tyxml_svg[150],
       Tyxml_svg[151],
       Tyxml_svg[152],
       Tyxml_svg[153],
       Tyxml_svg[154],
       Tyxml_svg[155],
       Tyxml_svg[156],
       Tyxml_svg[157],
       Tyxml_svg[158],
       Tyxml_svg[159],
       Tyxml_svg[160],
       Tyxml_svg[161],
       Tyxml_svg[162],
       Tyxml_svg[163],
       Tyxml_svg[164],
       Tyxml_svg[165],
       Tyxml_svg[166],
       Tyxml_svg[167],
       Tyxml_svg[168],
       Tyxml_svg[169],
       Tyxml_svg[170],
       Tyxml_svg[171],
       Tyxml_svg[172],
       Tyxml_svg[173],
       Tyxml_svg[174],
       Tyxml_svg[175],
       Tyxml_svg[176],
       Tyxml_svg[177],
       Tyxml_svg[178],
       Tyxml_svg[179],
       Tyxml_svg[180],
       Tyxml_svg[181],
       Tyxml_svg[182],
       Tyxml_svg[183],
       Tyxml_svg[184],
       Tyxml_svg[185],
       Tyxml_svg[186],
       Tyxml_svg[187],
       Tyxml_svg[188],
       Tyxml_svg[189],
       Tyxml_svg[190],
       Tyxml_svg[191],
       Tyxml_svg[192],
       Tyxml_svg[193],
       Tyxml_svg[194],
       Tyxml_svg[195],
       Tyxml_svg[196],
       Tyxml_svg[197],
       Tyxml_svg[198],
       Tyxml_svg[199],
       Tyxml_svg[200],
       Tyxml_svg[201],
       Tyxml_svg[202],
       Tyxml_svg[203],
       Tyxml_svg[204],
       Tyxml_svg[205],
       Tyxml_svg[206],
       Tyxml_svg[207],
       Tyxml_svg[208],
       Tyxml_svg[209],
       Tyxml_svg[210],
       Tyxml_svg[211],
       Tyxml_svg[212],
       Tyxml_svg[213],
       Tyxml_svg[214],
       Tyxml_svg[215],
       Tyxml_svg[216],
       Tyxml_svg[217],
       Tyxml_svg[218],
       Tyxml_svg[219],
       Tyxml_svg[220],
       Tyxml_svg[221],
       Tyxml_svg[222],
       Tyxml_svg[223],
       Tyxml_svg[224],
       Tyxml_svg[225],
       Tyxml_svg[226],
       Tyxml_svg[227],
       Tyxml_svg[228],
       Tyxml_svg[229],
       Tyxml_svg[230],
       Tyxml_svg[231],
       Tyxml_svg[232],
       Tyxml_svg[233],
       Tyxml_svg[234],
       Tyxml_svg[235],
       Tyxml_svg[236],
       Tyxml_svg[237],
       Tyxml_svg[238],
       Tyxml_svg[239],
       Tyxml_svg[240],
       Tyxml_svg[241],
       Tyxml_svg[242],
       Tyxml_svg[243],
       Tyxml_svg[244],
       Tyxml_svg[245],
       Tyxml_svg[246],
       Tyxml_svg[247],
       Tyxml_svg[248],
       Tyxml_svg[249],
       Tyxml_svg[250],
       Tyxml_svg[251],
       Tyxml_svg[252],
       Tyxml_svg[253],
       Tyxml_svg[254],
       Tyxml_svg[255],
       Tyxml_svg[256],
       Tyxml_svg[257],
       Tyxml_svg[258],
       Tyxml_svg[259],
       Tyxml_svg[260],
       Tyxml_svg[261],
       Tyxml_svg[262],
       Tyxml_svg[263],
       Tyxml_svg[264],
       Tyxml_svg[265],
       Tyxml_svg[266],
       Tyxml_svg[267],
       Tyxml_svg[268],
       Tyxml_svg[269],
       Tyxml_svg[270],
       Tyxml_svg[271],
       Tyxml_svg[272],
       Tyxml_svg[273],
       Tyxml_svg[274],
       Tyxml_svg[275],
       Tyxml_svg[276],
       Tyxml_svg[277],
       Tyxml_svg[278],
       Tyxml_svg[279],
       Tyxml_svg[280],
       Tyxml_svg[281],
       Tyxml_svg[282],
       Tyxml_svg[283],
       Tyxml_svg[284],
       Tyxml_svg[285],
       Tyxml_svg[286],
       Tyxml_svg[287],
       Tyxml_svg[288],
       Tyxml_svg[289],
       Tyxml_svg[290],
       Tyxml_svg[291],
       Tyxml_svg[292],
       Tyxml_svg[293],
       Tyxml_svg[294],
       Tyxml_svg[295],
       Tyxml_svg[296],
       Tyxml_svg[297],
       Tyxml_svg[298],
       Tyxml_svg[299],
       Tyxml_svg[300],
       Tyxml_svg[301],
       Tyxml_svg[302],
       Tyxml_svg[303],
       Tyxml_svg[304],
       Tyxml_svg[305],
       Tyxml_svg[306],
       Tyxml_svg[307],
       Tyxml_svg[308],
       Tyxml_svg[309],
       Tyxml_svg[310],
       Tyxml_svg[311],
       Tyxml_svg[312],
       Tyxml_svg[313],
       Tyxml_svg[314],
       Tyxml_svg[315],
       Tyxml_svg[316],
       Tyxml_svg[317],
       Tyxml_svg[318],
       Tyxml_svg[319],
       Tyxml_svg[320],
       Tyxml_svg[321],
       Tyxml_svg[322],
       Tyxml_svg[323],
       Tyxml_svg[324],
       Tyxml_svg[325],
       Tyxml_svg[326],
       Tyxml_svg[327],
       Tyxml_svg[328],
       Tyxml_svg[329],
       Tyxml_svg[330]],
    M =
      caml_call1
       (caml_call1
         (Html_f[1],
          [0,
           Tyxml_xml[1],
           Tyxml_xml[2],
           Tyxml_xml[3],
           Tyxml_xml[4],
           Tyxml_xml[5],
           Tyxml_xml[6],
           Tyxml_xml[7],
           Tyxml_xml[8],
           Tyxml_xml[9],
           Tyxml_xml[10],
           Tyxml_xml[11],
           Tyxml_xml[12],
           Tyxml_xml[13],
           Tyxml_xml[14],
           Tyxml_xml[15],
           Tyxml_xml[16],
           Tyxml_xml[17],
           Tyxml_xml[18],
           Tyxml_xml[19],
           Tyxml_xml[20],
           Tyxml_xml[21],
           Tyxml_xml[22],
           Tyxml_xml[23],
           Tyxml_xml[24]]),
        _a_),
    _b_ = [0, M[2], M[337], M[339]],
    P =
      caml_call1
       (caml_call1
         (Xml_print[8],
          [0,
           Tyxml_xml[1],
           Tyxml_xml[2],
           Tyxml_xml[3],
           Tyxml_xml[4],
           Tyxml_xml[5],
           Tyxml_xml[6],
           Tyxml_xml[7],
           Tyxml_xml[8],
           Tyxml_xml[9],
           Tyxml_xml[10],
           Tyxml_xml[11],
           Tyxml_xml[12],
           Tyxml_xml[13],
           Tyxml_xml[14],
           Tyxml_xml[15],
           Tyxml_xml[16],
           Tyxml_xml[17],
           Tyxml_xml[18],
           Tyxml_xml[19],
           Tyxml_xml[20],
           Tyxml_xml[21],
           Tyxml_xml[22],
           Tyxml_xml[23],
           Tyxml_xml[24],
           Tyxml_xml[25],
           Tyxml_xml[26],
           Tyxml_xml[27]]),
        _b_),
    _c_ = [0, M[2], M[337], M[339]],
    Make_printer =
      caml_call1
       (caml_call1
         (Xml_print[11],
          [0,
           Tyxml_xml[1],
           Tyxml_xml[2],
           Tyxml_xml[3],
           Tyxml_xml[4],
           Tyxml_xml[5],
           Tyxml_xml[6],
           Tyxml_xml[7],
           Tyxml_xml[8],
           Tyxml_xml[9],
           Tyxml_xml[10],
           Tyxml_xml[11],
           Tyxml_xml[12],
           Tyxml_xml[13],
           Tyxml_xml[14],
           Tyxml_xml[15],
           Tyxml_xml[16],
           Tyxml_xml[17],
           Tyxml_xml[18],
           Tyxml_xml[19],
           Tyxml_xml[20],
           Tyxml_xml[21],
           Tyxml_xml[22],
           Tyxml_xml[23],
           Tyxml_xml[24],
           Tyxml_xml[25],
           Tyxml_xml[26],
           Tyxml_xml[27]]),
        _c_),
    Xml = M[1],
    Info = M[2],
    string_of_uri = M[3],
    uri_of_string = M[4],
    a_class = M[5],
    a_user_data = M[6],
    a_id = M[7],
    a_title = M[8],
    a_xml_lang = M[9],
    a_lang = M[10],
    a_onabort = M[11],
    a_onafterprint = M[12],
    a_onbeforeprint = M[13],
    a_onbeforeunload = M[14],
    a_onblur = M[15],
    a_oncanplay = M[16],
    a_oncanplaythrough = M[17],
    a_onchange = M[18],
    a_ondurationchange = M[19],
    a_onemptied = M[20],
    a_onended = M[21],
    a_onerror = M[22],
    a_onfocus = M[23],
    a_onformchange = M[24],
    a_onforminput = M[25],
    a_onhashchange = M[26],
    a_oninput = M[27],
    a_oninvalid = M[28],
    a_onmousewheel = M[29],
    a_onoffline = M[30],
    a_ononline = M[31],
    a_onpause = M[32],
    a_onplay = M[33],
    a_onplaying = M[34],
    a_onpagehide = M[35],
    a_onpageshow = M[36],
    a_onpopstate = M[37],
    a_onprogress = M[38],
    a_onratechange = M[39],
    a_onreadystatechange = M[40],
    a_onredo = M[41],
    a_onresize = M[42],
    a_onscroll = M[43],
    a_onseeked = M[44],
    a_onseeking = M[45],
    a_onselect = M[46],
    a_onshow = M[47],
    a_onstalled = M[48],
    a_onstorage = M[49],
    a_onsubmit = M[50],
    a_onsuspend = M[51],
    a_ontimeupdate = M[52],
    a_onundo = M[53],
    a_onunload = M[54],
    a_onvolumechange = M[55],
    a_onwaiting = M[56],
    a_onload = M[57],
    a_onloadeddata = M[58],
    a_onloadedmetadata = M[59],
    a_onloadstart = M[60],
    a_onmessage = M[61],
    a_onclick = M[62],
    a_oncontextmenu = M[63],
    a_ondblclick = M[64],
    a_ondrag = M[65],
    a_ondragend = M[66],
    a_ondragenter = M[67],
    a_ondragleave = M[68],
    a_ondragover = M[69],
    a_ondragstart = M[70],
    a_ondrop = M[71],
    a_onmousedown = M[72],
    a_onmouseup = M[73],
    a_onmouseover = M[74],
    a_onmousemove = M[75],
    a_onmouseout = M[76],
    a_ontouchstart = M[77],
    a_ontouchend = M[78],
    a_ontouchmove = M[79],
    a_ontouchcancel = M[80],
    a_onkeypress = M[81],
    a_onkeydown = M[82],
    a_onkeyup = M[83],
    a_allowfullscreen = M[84],
    a_allowpaymentrequest = M[85],
    a_autocomplete = M[86],
    a_async = M[87],
    a_autofocus = M[88],
    a_autoplay = M[89],
    a_muted = M[90],
    a_crossorigin = M[91],
    a_integrity = M[92],
    a_mediagroup = M[93],
    a_challenge = M[94],
    a_contenteditable = M[95],
    a_contextmenu = M[96],
    a_controls = M[97],
    a_dir = M[98],
    a_draggable = M[99],
    a_form = M[100],
    a_formaction = M[101],
    a_formenctype = M[102],
    a_formnovalidate = M[103],
    a_formtarget = M[104],
    a_hidden = M[105],
    a_high = M[106],
    a_icon = M[107],
    a_ismap = M[108],
    a_keytype = M[109],
    a_list = M[110],
    a_loop = M[111],
    a_low = M[112],
    a_max = M[113],
    a_input_max = M[114],
    a_min = M[115],
    a_input_min = M[116],
    a_inputmode = M[117],
    a_novalidate = M[118],
    a_open = M[119],
    a_optimum = M[120],
    a_pattern = M[121],
    a_placeholder = M[122],
    a_poster = M[123],
    a_preload = M[124],
    a_pubdate = M[125],
    a_radiogroup = M[126],
    a_referrerpolicy = M[127],
    a_required = M[128],
    a_reversed = M[129],
    a_sandbox = M[130],
    a_spellcheck = M[131],
    a_scoped = M[132],
    a_seamless = M[133],
    a_sizes = M[134],
    a_span = M[135],
    a_srclang = M[136],
    a_srcset = M[137],
    a_img_sizes = M[138],
    a_start = M[139],
    a_step = M[140],
    a_wrap = M[141],
    a_version = M[142],
    a_xmlns = M[143],
    a_manifest = M[144],
    a_cite = M[145],
    a_xml_space = M[146],
    a_accesskey = M[147],
    a_charset = M[148],
    a_accept_charset = M[149],
    a_accept = M[150],
    a_href = M[151],
    a_hreflang = M[152],
    a_download = M[153],
    a_rel = M[154],
    a_tabindex = M[155],
    a_mime_type = M[156],
    a_datetime = M[157],
    a_action = M[158],
    a_checked = M[159],
    a_cols = M[160],
    a_enctype = M[161],
    a_label_for = M[162],
    a_for = M[163],
    a_output_for = M[164],
    a_for_list = M[165],
    a_maxlength = M[166],
    a_minlength = M[167],
    a_method = M[168],
    a_formmethod = M[169],
    a_multiple = M[170],
    a_name = M[171],
    a_rows = M[172],
    a_selected = M[173],
    a_size = M[174],
    a_src = M[175],
    a_input_type = M[176],
    a_text_value = M[177],
    a_int_value = M[178],
    a_value = M[179],
    a_float_value = M[180],
    a_disabled = M[181],
    a_readonly = M[182],
    a_button_type = M[183],
    a_command_type = M[184],
    a_menu_type = M[185],
    a_label = M[186],
    a_align = M[187],
    a_axis = M[188],
    a_colspan = M[189],
    a_headers = M[190],
    a_rowspan = M[191],
    a_scope = M[192],
    a_summary = M[193],
    a_border = M[194],
    a_rules = M[195],
    a_char = M[196],
    a_alt = M[197],
    a_height = M[198],
    a_width = M[199],
    a_shape = M[200],
    a_coords = M[201],
    a_usemap = M[202],
    a_data = M[203],
    a_codetype = M[204],
    a_frameborder = M[205],
    a_marginheight = M[206],
    a_marginwidth = M[207],
    a_scrolling = M[208],
    a_target = M[209],
    a_content = M[210],
    a_http_equiv = M[211],
    a_defer = M[212],
    a_media = M[213],
    a_style = M[214],
    a_property = M[215],
    a_role = M[216],
    a_aria = M[217],
    txt = M[218],
    html = M[219],
    head = M[220],
    base = M[221],
    title = M[222],
    body = M[223],
    svg = M[224],
    footer = M[225],
    header = M[226],
    section = M[227],
    nav = M[228],
    h1 = M[229],
    h2 = M[230],
    h3 = M[231],
    h4 = M[232],
    h5 = M[233],
    h6 = M[234],
    hgroup = M[235],
    address = M[236],
    article = M[237],
    aside = M[238],
    main = M[239],
    p = M[240],
    pre = M[241],
    blockquote = M[242],
    div = M[243],
    dl = M[244],
    ol = M[245],
    ul = M[246],
    dd = M[247],
    dt = M[248],
    li = M[249],
    figcaption = M[250],
    figure = M[251],
    hr = M[252],
    b = M[253],
    i = M[254],
    u = M[255],
    small = M[256],
    sub = M[257],
    sup = M[258],
    mark = M[259],
    wbr = M[260],
    bdo = M[261],
    abbr = M[262],
    br = M[263],
    cite = M[264],
    code = M[265],
    dfn = M[266],
    em = M[267],
    kbd = M[268],
    q = M[269],
    samp = M[270],
    span = M[271],
    strong = M[272],
    time = M[273],
    var$0 = M[274],
    a = M[275],
    del = M[276],
    ins = M[277],
    img = M[278],
    iframe = M[279],
    object = M[280],
    embed = M[282],
    audio = M[283],
    video = M[284],
    canvas = M[285],
    source = M[286],
    area = M[287],
    map = M[288],
    caption = M[289],
    table = M[290],
    tablex = M[291],
    colgroup = M[292],
    col = M[293],
    thead = M[294],
    tbody = M[295],
    tfoot = M[296],
    td = M[297],
    th = M[298],
    tr = M[299],
    form = M[300],
    fieldset = M[301],
    legend = M[302],
    label = M[303],
    input = M[304],
    button = M[305],
    select = M[306],
    datalist = M[307],
    optgroup = M[308],
    option = M[309],
    textarea = M[310],
    keygen = M[311],
    progress = M[312],
    meter = M[313],
    output_elt = M[314],
    entity = M[315],
    space = M[316],
    cdata = M[317],
    cdata_script = M[318],
    cdata_style = M[319],
    details = M[320],
    summary = M[321],
    command = M[322],
    menu = M[323],
    script = M[324],
    noscript = M[325],
    template = M[326],
    meta = M[327],
    style = M[328],
    link = M[329],
    rt = M[330],
    rp = M[331],
    ruby = M[332],
    pcdata = M[333],
    of_seq = M[334],
    tot = M[335],
    totl = M[336],
    toelt = M[337],
    toeltl = M[338],
    doc_toelt = M[339],
    to_xmlattribs = M[340],
    to_attrib = M[341],
    Unsafe = M[342],
    pp_elt = P[1],
    pp = P[2],
    param = M[281],
    pp$0 = caml_call4(pp, 0, 0, 0, 0),
    pp_elt$0 = caml_call3(pp_elt, 0, 0, 0),
    Tyxml_html =
      [0,
       Xml,
       Info,
       string_of_uri,
       uri_of_string,
       a_class,
       a_user_data,
       a_id,
       a_title,
       a_xml_lang,
       a_lang,
       a_onabort,
       a_onafterprint,
       a_onbeforeprint,
       a_onbeforeunload,
       a_onblur,
       a_oncanplay,
       a_oncanplaythrough,
       a_onchange,
       a_ondurationchange,
       a_onemptied,
       a_onended,
       a_onerror,
       a_onfocus,
       a_onformchange,
       a_onforminput,
       a_onhashchange,
       a_oninput,
       a_oninvalid,
       a_onmousewheel,
       a_onoffline,
       a_ononline,
       a_onpause,
       a_onplay,
       a_onplaying,
       a_onpagehide,
       a_onpageshow,
       a_onpopstate,
       a_onprogress,
       a_onratechange,
       a_onreadystatechange,
       a_onredo,
       a_onresize,
       a_onscroll,
       a_onseeked,
       a_onseeking,
       a_onselect,
       a_onshow,
       a_onstalled,
       a_onstorage,
       a_onsubmit,
       a_onsuspend,
       a_ontimeupdate,
       a_onundo,
       a_onunload,
       a_onvolumechange,
       a_onwaiting,
       a_onload,
       a_onloadeddata,
       a_onloadedmetadata,
       a_onloadstart,
       a_onmessage,
       a_onclick,
       a_oncontextmenu,
       a_ondblclick,
       a_ondrag,
       a_ondragend,
       a_ondragenter,
       a_ondragleave,
       a_ondragover,
       a_ondragstart,
       a_ondrop,
       a_onmousedown,
       a_onmouseup,
       a_onmouseover,
       a_onmousemove,
       a_onmouseout,
       a_ontouchstart,
       a_ontouchend,
       a_ontouchmove,
       a_ontouchcancel,
       a_onkeypress,
       a_onkeydown,
       a_onkeyup,
       a_allowfullscreen,
       a_allowpaymentrequest,
       a_autocomplete,
       a_async,
       a_autofocus,
       a_autoplay,
       a_muted,
       a_crossorigin,
       a_integrity,
       a_mediagroup,
       a_challenge,
       a_contenteditable,
       a_contextmenu,
       a_controls,
       a_dir,
       a_draggable,
       a_form,
       a_formaction,
       a_formenctype,
       a_formnovalidate,
       a_formtarget,
       a_hidden,
       a_high,
       a_icon,
       a_ismap,
       a_keytype,
       a_list,
       a_loop,
       a_low,
       a_max,
       a_input_max,
       a_min,
       a_input_min,
       a_inputmode,
       a_novalidate,
       a_open,
       a_optimum,
       a_pattern,
       a_placeholder,
       a_poster,
       a_preload,
       a_pubdate,
       a_radiogroup,
       a_referrerpolicy,
       a_required,
       a_reversed,
       a_sandbox,
       a_spellcheck,
       a_scoped,
       a_seamless,
       a_sizes,
       a_span,
       a_srclang,
       a_srcset,
       a_img_sizes,
       a_start,
       a_step,
       a_wrap,
       a_version,
       a_xmlns,
       a_manifest,
       a_cite,
       a_xml_space,
       a_accesskey,
       a_charset,
       a_accept_charset,
       a_accept,
       a_href,
       a_hreflang,
       a_download,
       a_rel,
       a_tabindex,
       a_mime_type,
       a_datetime,
       a_action,
       a_checked,
       a_cols,
       a_enctype,
       a_label_for,
       a_for,
       a_output_for,
       a_for_list,
       a_maxlength,
       a_minlength,
       a_method,
       a_formmethod,
       a_multiple,
       a_name,
       a_rows,
       a_selected,
       a_size,
       a_src,
       a_input_type,
       a_text_value,
       a_int_value,
       a_value,
       a_float_value,
       a_disabled,
       a_readonly,
       a_button_type,
       a_command_type,
       a_menu_type,
       a_label,
       a_align,
       a_axis,
       a_colspan,
       a_headers,
       a_rowspan,
       a_scope,
       a_summary,
       a_border,
       a_rules,
       a_char,
       a_alt,
       a_height,
       a_width,
       a_shape,
       a_coords,
       a_usemap,
       a_data,
       a_codetype,
       a_frameborder,
       a_marginheight,
       a_marginwidth,
       a_scrolling,
       a_target,
       a_content,
       a_http_equiv,
       a_defer,
       a_media,
       a_style,
       a_property,
       a_role,
       a_aria,
       txt,
       html,
       head,
       base,
       title,
       body,
       svg,
       footer,
       header,
       section,
       nav,
       h1,
       h2,
       h3,
       h4,
       h5,
       h6,
       hgroup,
       address,
       article,
       aside,
       main,
       p,
       pre,
       blockquote,
       div,
       dl,
       ol,
       ul,
       dd,
       dt,
       li,
       figcaption,
       figure,
       hr,
       b,
       i,
       u,
       small,
       sub,
       sup,
       mark,
       wbr,
       bdo,
       abbr,
       br,
       cite,
       code,
       dfn,
       em,
       kbd,
       q,
       samp,
       span,
       strong,
       time,
       var$0,
       a,
       del,
       ins,
       img,
       iframe,
       object,
       param,
       embed,
       audio,
       video,
       canvas,
       source,
       area,
       map,
       caption,
       table,
       tablex,
       colgroup,
       col,
       thead,
       tbody,
       tfoot,
       td,
       th,
       tr,
       form,
       fieldset,
       legend,
       label,
       input,
       button,
       select,
       datalist,
       optgroup,
       option,
       textarea,
       keygen,
       progress,
       meter,
       output_elt,
       entity,
       space,
       cdata,
       cdata_script,
       cdata_style,
       details,
       summary,
       command,
       menu,
       script,
       noscript,
       template,
       meta,
       style,
       link,
       rt,
       rp,
       ruby,
       pcdata,
       of_seq,
       tot,
       totl,
       toelt,
       toeltl,
       doc_toelt,
       to_xmlattribs,
       to_attrib,
       Unsafe,
       pp,
       pp_elt,
       Make_printer,
       pp$0,
       pp_elt$0];
   runtime.caml_register_global(4, Tyxml_html, "Tyxml_html");
   return;
  }
  (globalThis));

//# unitInfo: Provides: Tyxml
(function(globalThis){
   "use strict";
   var runtime = globalThis.jsoo_runtime, Tyxml = [0];
   runtime.caml_register_global(0, Tyxml, "Tyxml");
   return;
  }
  (globalThis));

//# sourceMappingURL=data:application/json;base64,
