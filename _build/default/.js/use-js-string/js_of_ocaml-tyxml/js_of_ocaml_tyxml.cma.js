// Generated by js_of_ocaml
//# buildInfo:effects=false, kind=cma, use-js-string=true, version=5.6.0

//# unitInfo: Provides: Js_of_ocaml_tyxml__
(function
  (globalThis){
   "use strict";
   var
    runtime = globalThis.jsoo_runtime,
    Js_of_ocaml_tyxml = [0],
    Js_of_ocaml_tyxml$0 = [0, Js_of_ocaml_tyxml];
   runtime.caml_register_global(0, Js_of_ocaml_tyxml$0, "Js_of_ocaml_tyxml__");
   return;
  }
  (globalThis));

//# unitInfo: Provides: Js_of_ocaml_tyxml__Import
//# unitInfo: Requires: Stdlib__Char, Stdlib__String
(function
  (globalThis){
   "use strict";
   var
    runtime = globalThis.jsoo_runtime,
    global_data = runtime.caml_get_global_data(),
    Stdlib_String = global_data.Stdlib__String,
    Stdlib_Char = global_data.Stdlib__Char,
    Poly = [0];
   function symbol(x, y){return x < y ? 1 : 0;}
   function symbol$0(x, y){return x <= y ? 1 : 0;}
   function symbol$1(x, y){return x !== y ? 1 : 0;}
   function symbol$2(x, y){return x === y ? 1 : 0;}
   function symbol$3(x, y){return y < x ? 1 : 0;}
   function symbol$4(x, y){return y <= x ? 1 : 0;}
   var compare = runtime.caml_int_compare;
   function equal(x, y){return x === y ? 1 : 0;}
   function max(x, y){return y <= x ? x : y;}
   function min(x, y){return x <= y ? x : y;}
   var
    Int_replace_polymorphic_compar =
      [0,
       symbol,
       symbol$0,
       symbol$1,
       symbol$2,
       symbol$3,
       symbol$4,
       compare,
       equal,
       max,
       min],
    make = Stdlib_String[1],
    init = Stdlib_String[2],
    empty = Stdlib_String[3],
    of_bytes = Stdlib_String[4],
    to_bytes = Stdlib_String[5],
    concat = Stdlib_String[6],
    cat = Stdlib_String[7],
    compare$0 = Stdlib_String[9],
    starts_with = Stdlib_String[10],
    ends_with = Stdlib_String[11],
    contains_from = Stdlib_String[12],
    rcontains_from = Stdlib_String[13],
    contains = Stdlib_String[14],
    sub = Stdlib_String[15],
    split_on_char = Stdlib_String[16],
    map = Stdlib_String[17],
    mapi = Stdlib_String[18],
    fold_left = Stdlib_String[19],
    fold_right = Stdlib_String[20],
    for_all = Stdlib_String[21],
    exists = Stdlib_String[22],
    trim = Stdlib_String[23],
    escaped = Stdlib_String[24],
    uppercase_ascii = Stdlib_String[25],
    lowercase_ascii = Stdlib_String[26],
    capitalize_ascii = Stdlib_String[27],
    uncapitalize_ascii = Stdlib_String[28],
    iter = Stdlib_String[29],
    iteri = Stdlib_String[30],
    index_from = Stdlib_String[31],
    index_from_opt = Stdlib_String[32],
    rindex_from = Stdlib_String[33],
    rindex_from_opt = Stdlib_String[34],
    index = Stdlib_String[35],
    index_opt = Stdlib_String[36],
    rindex = Stdlib_String[37],
    rindex_opt = Stdlib_String[38],
    to_seq = Stdlib_String[39],
    to_seqi = Stdlib_String[40],
    of_seq = Stdlib_String[41],
    get_utf_8_uchar = Stdlib_String[42],
    is_valid_utf_8 = Stdlib_String[43],
    get_utf_16be_uchar = Stdlib_String[44],
    is_valid_utf_16be = Stdlib_String[45],
    get_utf_16le_uchar = Stdlib_String[46],
    is_valid_utf_16le = Stdlib_String[47],
    blit = Stdlib_String[48],
    copy = Stdlib_String[49],
    fill = Stdlib_String[50],
    uppercase = Stdlib_String[51],
    lowercase = Stdlib_String[52],
    capitalize = Stdlib_String[53],
    uncapitalize = Stdlib_String[54],
    get_uint8 = Stdlib_String[55],
    get_int8 = Stdlib_String[56],
    get_uint16_ne = Stdlib_String[57],
    get_uint16_be = Stdlib_String[58],
    get_uint16_le = Stdlib_String[59],
    get_int16_ne = Stdlib_String[60],
    get_int16_be = Stdlib_String[61],
    get_int16_le = Stdlib_String[62],
    get_int32_ne = Stdlib_String[63],
    get_int32_be = Stdlib_String[64],
    get_int32_le = Stdlib_String[65],
    get_int64_ne = Stdlib_String[66],
    get_int64_be = Stdlib_String[67],
    get_int64_le = Stdlib_String[68],
    equal$0 = runtime.caml_string_equal,
    String =
      [0,
       make,
       init,
       empty,
       of_bytes,
       to_bytes,
       concat,
       cat,
       compare$0,
       starts_with,
       ends_with,
       contains_from,
       rcontains_from,
       contains,
       sub,
       split_on_char,
       map,
       mapi,
       fold_left,
       fold_right,
       for_all,
       exists,
       trim,
       escaped,
       uppercase_ascii,
       lowercase_ascii,
       capitalize_ascii,
       uncapitalize_ascii,
       iter,
       iteri,
       index_from,
       index_from_opt,
       rindex_from,
       rindex_from_opt,
       index,
       index_opt,
       rindex,
       rindex_opt,
       to_seq,
       to_seqi,
       of_seq,
       get_utf_8_uchar,
       is_valid_utf_8,
       get_utf_16be_uchar,
       is_valid_utf_16be,
       get_utf_16le_uchar,
       is_valid_utf_16le,
       blit,
       copy,
       fill,
       uppercase,
       lowercase,
       capitalize,
       uncapitalize,
       get_uint8,
       get_int8,
       get_uint16_ne,
       get_uint16_be,
       get_uint16_le,
       get_int16_ne,
       get_int16_be,
       get_int16_le,
       get_int32_ne,
       get_int32_be,
       get_int32_le,
       get_int64_ne,
       get_int64_be,
       get_int64_le,
       equal$0],
    chr = Stdlib_Char[1],
    escaped$0 = Stdlib_Char[2],
    lowercase$0 = Stdlib_Char[3],
    uppercase$0 = Stdlib_Char[4],
    lowercase_ascii$0 = Stdlib_Char[5],
    uppercase_ascii$0 = Stdlib_Char[6],
    compare$1 = Stdlib_Char[7];
   function equal$1(x, y){return x === y ? 1 : 0;}
   var
    Char =
      [0,
       chr,
       escaped$0,
       lowercase$0,
       uppercase$0,
       lowercase_ascii$0,
       uppercase_ascii$0,
       compare$1,
       equal$1],
    symbol$5 = Int_replace_polymorphic_compar[1],
    symbol$6 = Int_replace_polymorphic_compar[2],
    symbol$7 = Int_replace_polymorphic_compar[3],
    symbol$8 = Int_replace_polymorphic_compar[4],
    symbol$9 = Int_replace_polymorphic_compar[5],
    symbol$10 = Int_replace_polymorphic_compar[6],
    compare$2 = Int_replace_polymorphic_compar[7],
    equal$2 = Int_replace_polymorphic_compar[8],
    max$0 = Int_replace_polymorphic_compar[9],
    min$0 = Int_replace_polymorphic_compar[10],
    Js_of_ocaml_tyxml_Import =
      [0,
       Poly,
       Int_replace_polymorphic_compar,
       String,
       Char,
       symbol$5,
       symbol$6,
       symbol$7,
       symbol$8,
       symbol$9,
       symbol$10,
       compare$2,
       equal$2,
       max$0,
       min$0];
   runtime.caml_register_global
    (2, Js_of_ocaml_tyxml_Import, "Js_of_ocaml_tyxml__Import");
   return;
  }
  (globalThis));

//# unitInfo: Provides: Js_of_ocaml_tyxml__Tyxml_cast_sigs
(function
  (globalThis){
   "use strict";
   var
    runtime = globalThis.jsoo_runtime,
    Js_of_ocaml_tyxml_Tyxml_cast_s = [0];
   runtime.caml_register_global
    (0, Js_of_ocaml_tyxml_Tyxml_cast_s, "Js_of_ocaml_tyxml__Tyxml_cast_sigs");
   return;
  }
  (globalThis));

//# unitInfo: Provides: Js_of_ocaml_tyxml__Tyxml_cast
(function(globalThis){
   "use strict";
   var
    runtime = globalThis.jsoo_runtime,
    cst_of_area$1 = "of_area",
    cst_of_audio$1 = "of_audio",
    cst_of_base$1 = "of_base",
    cst_of_body$1 = "of_body",
    cst_of_br$1 = "of_br",
    cst_of_button$1 = "of_button",
    cst_of_canvas$1 = "of_canvas",
    cst_of_div$1 = "of_div",
    cst_of_element$1 = "of_element",
    cst_of_embed$1 = "of_embed",
    cst_of_form$1 = "of_form",
    cst_of_head$1 = "of_head",
    cst_of_heading$1 = "of_heading",
    cst_of_hr$1 = "of_hr",
    cst_of_html$1 = "of_html",
    cst_of_input$1 = "of_input",
    cst_of_label$1 = "of_label",
    cst_of_legend$1 = "of_legend",
    cst_of_li$1 = "of_li",
    cst_of_link$1 = "of_link",
    cst_of_map$1 = "of_map",
    cst_of_meta$1 = "of_meta",
    cst_of_object$1 = "of_object",
    cst_of_option$1 = "of_option",
    cst_of_param$1 = "of_param",
    cst_of_pre$1 = "of_pre",
    cst_of_script$1 = "of_script",
    cst_of_select$1 = "of_select",
    cst_of_style$1 = "of_style",
    cst_of_table$1 = "of_table",
    cst_of_title$1 = "of_title",
    cst_of_video$1 = "of_video";
   function caml_call1(f, a0){
    return (f.l >= 0 ? f.l : f.l = f.length) == 1
            ? f(a0)
            : runtime.caml_call_gen(f, [a0]);
   }
   var
    cst_of_video$0 = cst_of_video$1,
    cst_of_audio$0 = cst_of_audio$1,
    cst_of_iFrame = "of_iFrame",
    cst_of_canvas$0 = cst_of_canvas$1,
    cst_of_table$0 = cst_of_table$1,
    cst_of_tableCaption = "of_tableCaption",
    cst_of_tableSection = "of_tableSection",
    cst_of_tableCol = "of_tableCol",
    cst_of_tableRow = "of_tableRow",
    cst_of_tableCell = "of_tableCell",
    cst_of_embed$0 = cst_of_embed$1,
    cst_of_script$0 = cst_of_script$1,
    cst_of_map$0 = cst_of_map$1,
    cst_of_area$0 = cst_of_area$1,
    cst_of_param$0 = cst_of_param$1,
    cst_of_object$0 = cst_of_object$1,
    cst_of_image = "of_image",
    cst_of_anchor = "of_anchor",
    cst_of_mod = "of_mod",
    cst_of_hr$0 = cst_of_hr$1,
    cst_of_br$0 = cst_of_br$1,
    cst_of_pre$0 = cst_of_pre$1,
    cst_of_quote = "of_quote",
    cst_of_heading$0 = cst_of_heading$1,
    cst_of_paragraph = "of_paragraph",
    cst_of_div$0 = cst_of_div$1,
    cst_of_li$0 = cst_of_li$1,
    cst_of_dList = "of_dList",
    cst_of_oList = "of_oList",
    cst_of_uList = "of_uList",
    cst_of_legend$0 = cst_of_legend$1,
    cst_of_fieldSet = "of_fieldSet",
    cst_of_label$0 = cst_of_label$1,
    cst_of_button$0 = cst_of_button$1,
    cst_of_textArea = "of_textArea",
    cst_of_input$0 = cst_of_input$1,
    cst_of_select$0 = cst_of_select$1,
    cst_of_option$0 = cst_of_option$1,
    cst_of_optGroup = "of_optGroup",
    cst_of_form$0 = cst_of_form$1,
    cst_of_body$0 = cst_of_body$1,
    cst_of_style$0 = cst_of_style$1,
    cst_of_base$0 = cst_of_base$1,
    cst_of_meta$0 = cst_of_meta$1,
    cst_of_title$0 = cst_of_title$1,
    cst_of_link$0 = cst_of_link$1,
    cst_of_head$0 = cst_of_head$1,
    cst_of_html$0 = cst_of_html$1,
    cst_of_element$0 = cst_of_element$1,
    cst_of_wbr = "of_wbr",
    cst_of_var = "of_var",
    cst_of_u = "of_u",
    cst_of_time = "of_time",
    cst_of_th = "of_th",
    cst_of_sup = "of_sup",
    cst_of_summary = "of_summary",
    cst_of_sub = "of_sub",
    cst_of_strong = "of_strong",
    cst_of_span = "of_span",
    cst_of_source = "of_source",
    cst_of_small = "of_small",
    cst_of_section = "of_section",
    cst_of_samp = "of_samp",
    cst_of_ruby = "of_ruby",
    cst_of_rt = "of_rt",
    cst_of_rp = "of_rp",
    cst_of_q = "of_q",
    cst_of_progress = "of_progress",
    cst_of_output = "of_output",
    cst_of_noscript = "of_noscript",
    cst_of_nav = "of_nav",
    cst_of_meter = "of_meter",
    cst_of_menu = "of_menu",
    cst_of_mark = "of_mark",
    cst_of_main = "of_main",
    cst_of_keygen = "of_keygen",
    cst_of_kbd = "of_kbd",
    cst_of_i = "of_i",
    cst_of_hgroup = "of_hgroup",
    cst_of_header = "of_header",
    cst_of_footer = "of_footer",
    cst_of_figure = "of_figure",
    cst_of_figcaption = "of_figcaption",
    cst_of_embed = cst_of_embed$1,
    cst_of_em = "of_em",
    cst_of_dt = "of_dt",
    cst_of_dfn = "of_dfn",
    cst_of_details = "of_details",
    cst_of_dd = "of_dd",
    cst_of_datalist = "of_datalist",
    cst_of_command = "of_command",
    cst_of_colgroup = "of_colgroup",
    cst_of_code = "of_code",
    cst_of_cite = "of_cite",
    cst_of_bdo = "of_bdo",
    cst_of_b = "of_b",
    cst_of_aside = "of_aside",
    cst_of_article = "of_article",
    cst_of_address = "of_address",
    cst_of_abbr = "of_abbr",
    cst_of_h6 = "of_h6",
    cst_of_h5 = "of_h5",
    cst_of_h4 = "of_h4",
    cst_of_h3 = "of_h3",
    cst_of_h2 = "of_h2",
    cst_of_h1 = "of_h1",
    cst_of_video = cst_of_video$1,
    cst_of_audio = cst_of_audio$1,
    cst_of_iframe = "of_iframe",
    cst_of_canvas = cst_of_canvas$1,
    cst_of_table = cst_of_table$1,
    cst_of_caption = "of_caption",
    cst_of_tbody = "of_tbody",
    cst_of_thead = "of_thead",
    cst_of_tfoot = "of_tfoot",
    cst_of_col = "of_col",
    cst_of_tr = "of_tr",
    cst_of_td = "of_td",
    cst_of_script = cst_of_script$1,
    cst_of_map = cst_of_map$1,
    cst_of_area = cst_of_area$1,
    cst_of_param = cst_of_param$1,
    cst_of_object = cst_of_object$1,
    cst_of_img = "of_img",
    cst_of_a = "of_a",
    cst_of_del = "of_del",
    cst_of_ins = "of_ins",
    cst_of_hr = cst_of_hr$1,
    cst_of_br = cst_of_br$1,
    cst_of_pre = cst_of_pre$1,
    cst_of_blockquote = "of_blockquote",
    cst_of_heading = cst_of_heading$1,
    cst_of_p = "of_p",
    cst_of_div = cst_of_div$1,
    cst_of_li = cst_of_li$1,
    cst_of_dl = "of_dl",
    cst_of_ol = "of_ol",
    cst_of_ul = "of_ul",
    cst_of_legend = cst_of_legend$1,
    cst_of_fieldset = "of_fieldset",
    cst_of_label = cst_of_label$1,
    cst_of_button = cst_of_button$1,
    cst_of_textarea = "of_textarea",
    cst_of_input = cst_of_input$1,
    cst_of_select = cst_of_select$1,
    cst_of_option = cst_of_option$1,
    cst_of_optgroup = "of_optgroup",
    cst_of_form = cst_of_form$1,
    cst_of_body = cst_of_body$1,
    cst_of_style = cst_of_style$1,
    cst_of_base = cst_of_base$1,
    cst_of_meta = cst_of_meta$1,
    cst_of_title = cst_of_title$1,
    cst_of_link = cst_of_link$1,
    cst_of_head = cst_of_head$1,
    cst_of_html = cst_of_html$1,
    cst_of_pcdata = "of_pcdata",
    cst_of_node = "of_node",
    cst_of_element = cst_of_element$1;
   function MakeTo(C){
    function rebuild_node(param, x){return caml_call1(C[1], x);}
    function of_element(elt){return rebuild_node(cst_of_element, elt);}
    function of_node(elt){return rebuild_node(cst_of_node, elt);}
    function of_pcdata(elt){return rebuild_node(cst_of_pcdata, elt);}
    function of_html(elt){return rebuild_node(cst_of_html, elt);}
    function of_head(elt){return rebuild_node(cst_of_head, elt);}
    function of_link(elt){return rebuild_node(cst_of_link, elt);}
    function of_title(elt){return rebuild_node(cst_of_title, elt);}
    function of_meta(elt){return rebuild_node(cst_of_meta, elt);}
    function of_base(elt){return rebuild_node(cst_of_base, elt);}
    function of_style(elt){return rebuild_node(cst_of_style, elt);}
    function of_body(elt){return rebuild_node(cst_of_body, elt);}
    function of_form(elt){return rebuild_node(cst_of_form, elt);}
    function of_optgroup(elt){return rebuild_node(cst_of_optgroup, elt);}
    function of_option(elt){return rebuild_node(cst_of_option, elt);}
    function of_select(elt){return rebuild_node(cst_of_select, elt);}
    function of_input(elt){return rebuild_node(cst_of_input, elt);}
    function of_textarea(elt){return rebuild_node(cst_of_textarea, elt);}
    function of_button(elt){return rebuild_node(cst_of_button, elt);}
    function of_label(elt){return rebuild_node(cst_of_label, elt);}
    function of_fieldset(elt){return rebuild_node(cst_of_fieldset, elt);}
    function of_legend(elt){return rebuild_node(cst_of_legend, elt);}
    function of_ul(elt){return rebuild_node(cst_of_ul, elt);}
    function of_ol(elt){return rebuild_node(cst_of_ol, elt);}
    function of_dl(elt){return rebuild_node(cst_of_dl, elt);}
    function of_li(elt){return rebuild_node(cst_of_li, elt);}
    function of_div(elt){return rebuild_node(cst_of_div, elt);}
    function of_p(elt){return rebuild_node(cst_of_p, elt);}
    function of_heading(elt){return rebuild_node(cst_of_heading, elt);}
    function of_blockquote(elt){return rebuild_node(cst_of_blockquote, elt);}
    function of_pre(elt){return rebuild_node(cst_of_pre, elt);}
    function of_br(elt){return rebuild_node(cst_of_br, elt);}
    function of_hr(elt){return rebuild_node(cst_of_hr, elt);}
    function of_ins(elt){return rebuild_node(cst_of_ins, elt);}
    function of_del(elt){return rebuild_node(cst_of_del, elt);}
    function of_a(elt){return rebuild_node(cst_of_a, elt);}
    function of_img(elt){return rebuild_node(cst_of_img, elt);}
    function of_object(elt){return rebuild_node(cst_of_object, elt);}
    function of_param(elt){return rebuild_node(cst_of_param, elt);}
    function of_area(elt){return rebuild_node(cst_of_area, elt);}
    function of_map(elt){return rebuild_node(cst_of_map, elt);}
    function of_script(elt){return rebuild_node(cst_of_script, elt);}
    function of_td(elt){return rebuild_node(cst_of_td, elt);}
    function of_tr(elt){return rebuild_node(cst_of_tr, elt);}
    function of_col(elt){return rebuild_node(cst_of_col, elt);}
    function of_tfoot(elt){return rebuild_node(cst_of_tfoot, elt);}
    function of_thead(elt){return rebuild_node(cst_of_thead, elt);}
    function of_tbody(elt){return rebuild_node(cst_of_tbody, elt);}
    function of_caption(elt){return rebuild_node(cst_of_caption, elt);}
    function of_table(elt){return rebuild_node(cst_of_table, elt);}
    function of_canvas(elt){return rebuild_node(cst_of_canvas, elt);}
    function of_iframe(elt){return rebuild_node(cst_of_iframe, elt);}
    function of_audio(elt){return rebuild_node(cst_of_audio, elt);}
    function of_video(elt){return rebuild_node(cst_of_video, elt);}
    function of_h1(elt){return rebuild_node(cst_of_h1, elt);}
    function of_h2(elt){return rebuild_node(cst_of_h2, elt);}
    function of_h3(elt){return rebuild_node(cst_of_h3, elt);}
    function of_h4(elt){return rebuild_node(cst_of_h4, elt);}
    function of_h5(elt){return rebuild_node(cst_of_h5, elt);}
    function of_h6(elt){return rebuild_node(cst_of_h6, elt);}
    function of_abbr(elt){return rebuild_node(cst_of_abbr, elt);}
    function of_address(elt){return rebuild_node(cst_of_address, elt);}
    function of_article(elt){return rebuild_node(cst_of_article, elt);}
    function of_aside(elt){return rebuild_node(cst_of_aside, elt);}
    function of_b(elt){return rebuild_node(cst_of_b, elt);}
    function of_bdo(elt){return rebuild_node(cst_of_bdo, elt);}
    function of_cite(elt){return rebuild_node(cst_of_cite, elt);}
    function of_code(elt){return rebuild_node(cst_of_code, elt);}
    function of_colgroup(elt){return rebuild_node(cst_of_colgroup, elt);}
    function of_command(elt){return rebuild_node(cst_of_command, elt);}
    function of_datalist(elt){return rebuild_node(cst_of_datalist, elt);}
    function of_dd(elt){return rebuild_node(cst_of_dd, elt);}
    function of_details(elt){return rebuild_node(cst_of_details, elt);}
    function of_dfn(elt){return rebuild_node(cst_of_dfn, elt);}
    function of_dt(elt){return rebuild_node(cst_of_dt, elt);}
    function of_em(elt){return rebuild_node(cst_of_em, elt);}
    function of_embed(elt){return rebuild_node(cst_of_embed, elt);}
    function of_figcaption(elt){return rebuild_node(cst_of_figcaption, elt);}
    function of_figure(elt){return rebuild_node(cst_of_figure, elt);}
    function of_footer(elt){return rebuild_node(cst_of_footer, elt);}
    function of_header(elt){return rebuild_node(cst_of_header, elt);}
    function of_hgroup(elt){return rebuild_node(cst_of_hgroup, elt);}
    function of_i(elt){return rebuild_node(cst_of_i, elt);}
    function of_kbd(elt){return rebuild_node(cst_of_kbd, elt);}
    function of_keygen(elt){return rebuild_node(cst_of_keygen, elt);}
    function of_main(elt){return rebuild_node(cst_of_main, elt);}
    function of_mark(elt){return rebuild_node(cst_of_mark, elt);}
    function of_menu(elt){return rebuild_node(cst_of_menu, elt);}
    function of_meter(elt){return rebuild_node(cst_of_meter, elt);}
    function of_nav(elt){return rebuild_node(cst_of_nav, elt);}
    function of_noscript(elt){return rebuild_node(cst_of_noscript, elt);}
    function of_output(elt){return rebuild_node(cst_of_output, elt);}
    function of_progress(elt){return rebuild_node(cst_of_progress, elt);}
    function of_q(elt){return rebuild_node(cst_of_q, elt);}
    function of_rp(elt){return rebuild_node(cst_of_rp, elt);}
    function of_rt(elt){return rebuild_node(cst_of_rt, elt);}
    function of_ruby(elt){return rebuild_node(cst_of_ruby, elt);}
    function of_samp(elt){return rebuild_node(cst_of_samp, elt);}
    function of_section(elt){return rebuild_node(cst_of_section, elt);}
    function of_small(elt){return rebuild_node(cst_of_small, elt);}
    function of_source(elt){return rebuild_node(cst_of_source, elt);}
    function of_span(elt){return rebuild_node(cst_of_span, elt);}
    function of_strong(elt){return rebuild_node(cst_of_strong, elt);}
    function of_sub(elt){return rebuild_node(cst_of_sub, elt);}
    function of_summary(elt){return rebuild_node(cst_of_summary, elt);}
    function of_sup(elt){return rebuild_node(cst_of_sup, elt);}
    function of_th(elt){return rebuild_node(cst_of_th, elt);}
    function of_time(elt){return rebuild_node(cst_of_time, elt);}
    function of_u(elt){return rebuild_node(cst_of_u, elt);}
    function of_var(elt){return rebuild_node(cst_of_var, elt);}
    function of_wbr(elt){return rebuild_node(cst_of_wbr, elt);}
    return [0,
            of_element,
            of_node,
            of_pcdata,
            of_html,
            of_head,
            of_link,
            of_title,
            of_meta,
            of_base,
            of_style,
            of_body,
            of_form,
            of_optgroup,
            of_option,
            of_select,
            of_input,
            of_textarea,
            of_button,
            of_label,
            of_fieldset,
            of_legend,
            of_ul,
            of_ol,
            of_dl,
            of_li,
            of_div,
            of_p,
            of_heading,
            of_blockquote,
            of_pre,
            of_br,
            of_hr,
            of_del,
            of_ins,
            of_a,
            of_img,
            of_object,
            of_param,
            of_area,
            of_map,
            of_script,
            of_td,
            of_tr,
            of_col,
            of_tfoot,
            of_thead,
            of_tbody,
            of_caption,
            of_table,
            of_canvas,
            of_iframe,
            of_audio,
            of_video,
            of_h1,
            of_h2,
            of_h3,
            of_h4,
            of_h5,
            of_h6,
            of_abbr,
            of_address,
            of_article,
            of_aside,
            of_b,
            of_bdo,
            of_cite,
            of_code,
            of_colgroup,
            of_command,
            of_datalist,
            of_dd,
            of_details,
            of_dfn,
            of_dt,
            of_em,
            of_embed,
            of_figcaption,
            of_figure,
            of_footer,
            of_header,
            of_hgroup,
            of_i,
            of_kbd,
            of_keygen,
            of_main,
            of_mark,
            of_menu,
            of_meter,
            of_nav,
            of_noscript,
            of_output,
            of_progress,
            of_q,
            of_rp,
            of_rt,
            of_ruby,
            of_samp,
            of_section,
            of_small,
            of_source,
            of_span,
            of_strong,
            of_sub,
            of_summary,
            of_sup,
            of_th,
            of_time,
            of_u,
            of_var,
            of_wbr];
   }
   function MakeOf(C){
    function rebuild_node(param, x){return caml_call1(C[1], x);}
    function of_element(elt){return rebuild_node(cst_of_element$0, elt);}
    function of_html(elt){return rebuild_node(cst_of_html$0, elt);}
    function of_head(elt){return rebuild_node(cst_of_head$0, elt);}
    function of_link(elt){return rebuild_node(cst_of_link$0, elt);}
    function of_title(elt){return rebuild_node(cst_of_title$0, elt);}
    function of_meta(elt){return rebuild_node(cst_of_meta$0, elt);}
    function of_base(elt){return rebuild_node(cst_of_base$0, elt);}
    function of_style(elt){return rebuild_node(cst_of_style$0, elt);}
    function of_body(elt){return rebuild_node(cst_of_body$0, elt);}
    function of_form(elt){return rebuild_node(cst_of_form$0, elt);}
    function of_optGroup(elt){return rebuild_node(cst_of_optGroup, elt);}
    function of_option(elt){return rebuild_node(cst_of_option$0, elt);}
    function of_select(elt){return rebuild_node(cst_of_select$0, elt);}
    function of_input(elt){return rebuild_node(cst_of_input$0, elt);}
    function of_textArea(elt){return rebuild_node(cst_of_textArea, elt);}
    function of_button(elt){return rebuild_node(cst_of_button$0, elt);}
    function of_label(elt){return rebuild_node(cst_of_label$0, elt);}
    function of_fieldSet(elt){return rebuild_node(cst_of_fieldSet, elt);}
    function of_legend(elt){return rebuild_node(cst_of_legend$0, elt);}
    function of_uList(elt){return rebuild_node(cst_of_uList, elt);}
    function of_oList(elt){return rebuild_node(cst_of_oList, elt);}
    function of_dList(elt){return rebuild_node(cst_of_dList, elt);}
    function of_li(elt){return rebuild_node(cst_of_li$0, elt);}
    function of_div(elt){return rebuild_node(cst_of_div$0, elt);}
    function of_paragraph(elt){return rebuild_node(cst_of_paragraph, elt);}
    function of_heading(elt){return rebuild_node(cst_of_heading$0, elt);}
    function of_quote(elt){return rebuild_node(cst_of_quote, elt);}
    function of_pre(elt){return rebuild_node(cst_of_pre$0, elt);}
    function of_br(elt){return rebuild_node(cst_of_br$0, elt);}
    function of_hr(elt){return rebuild_node(cst_of_hr$0, elt);}
    function of_mod(elt){return rebuild_node(cst_of_mod, elt);}
    function of_anchor(elt){return rebuild_node(cst_of_anchor, elt);}
    function of_image(elt){return rebuild_node(cst_of_image, elt);}
    function of_object(elt){return rebuild_node(cst_of_object$0, elt);}
    function of_param(elt){return rebuild_node(cst_of_param$0, elt);}
    function of_area(elt){return rebuild_node(cst_of_area$0, elt);}
    function of_map(elt){return rebuild_node(cst_of_map$0, elt);}
    function of_script(elt){return rebuild_node(cst_of_script$0, elt);}
    function of_embed(elt){return rebuild_node(cst_of_embed$0, elt);}
    function of_tableCell(elt){return rebuild_node(cst_of_tableCell, elt);}
    function of_tableRow(elt){return rebuild_node(cst_of_tableRow, elt);}
    function of_tableCol(elt){return rebuild_node(cst_of_tableCol, elt);}
    function of_tableSection(elt){
     return rebuild_node(cst_of_tableSection, elt);
    }
    function of_tableCaption(elt){
     return rebuild_node(cst_of_tableCaption, elt);
    }
    function of_table(elt){return rebuild_node(cst_of_table$0, elt);}
    function of_canvas(elt){return rebuild_node(cst_of_canvas$0, elt);}
    function of_iFrame(elt){return rebuild_node(cst_of_iFrame, elt);}
    function of_audio(elt){return rebuild_node(cst_of_audio$0, elt);}
    function of_video(elt){return rebuild_node(cst_of_video$0, elt);}
    return [0,
            of_element,
            of_html,
            of_head,
            of_link,
            of_title,
            of_meta,
            of_base,
            of_style,
            of_body,
            of_form,
            of_optGroup,
            of_option,
            of_select,
            of_input,
            of_textArea,
            of_button,
            of_label,
            of_fieldSet,
            of_legend,
            of_uList,
            of_oList,
            of_dList,
            of_li,
            of_div,
            of_paragraph,
            of_heading,
            of_quote,
            of_pre,
            of_br,
            of_hr,
            of_mod,
            of_anchor,
            of_image,
            of_object,
            of_param,
            of_area,
            of_map,
            of_script,
            of_embed,
            of_tableCell,
            of_tableRow,
            of_tableCol,
            of_tableSection,
            of_tableCaption,
            of_table,
            of_canvas,
            of_iFrame,
            of_audio,
            of_video];
   }
   var Js_of_ocaml_tyxml_Tyxml_cast = [0, MakeTo, MakeOf];
   runtime.caml_register_global
    (159, Js_of_ocaml_tyxml_Tyxml_cast, "Js_of_ocaml_tyxml__Tyxml_cast");
   return;
  }
  (globalThis));

//# unitInfo: Provides: Js_of_ocaml_tyxml__Tyxml_js
//# unitInfo: Requires: Assert_failure, Html_f, Js_of_ocaml__Dom, Js_of_ocaml__Dom_html, Js_of_ocaml__Dom_svg, Js_of_ocaml__Js, Js_of_ocaml_tyxml__Import, Js_of_ocaml_tyxml__Tyxml_cast, React, ReactiveData, Stdlib, Stdlib__List, Stdlib__Printf, Svg_f, Xml_wrap
(function
  (globalThis){
   "use strict";
   var
    runtime = globalThis.jsoo_runtime,
    cst$10 = "",
    cst$7 = " ",
    cst$9 = "&",
    cst$8 = ",",
    cst_lib_tyxml_tyxml_js_ml = "lib/tyxml/tyxml_js.ml",
    cst_style = "style",
    caml_js_wrap_callback = runtime.caml_js_wrap_callback,
    caml_jsstring_of_string = runtime.caml_jsstring_of_string,
    caml_maybe_attach_backtrace = runtime.caml_maybe_attach_backtrace,
    caml_ml_string_length = runtime.caml_ml_string_length,
    caml_string_get = runtime.caml_string_get,
    caml_string_notequal = runtime.caml_string_notequal;
   function caml_call1(f, a0){
    return (f.l >= 0 ? f.l : f.l = f.length) == 1
            ? f(a0)
            : runtime.caml_call_gen(f, [a0]);
   }
   function caml_call2(f, a0, a1){
    return (f.l >= 0 ? f.l : f.l = f.length) == 2
            ? f(a0, a1)
            : runtime.caml_call_gen(f, [a0, a1]);
   }
   function caml_call3(f, a0, a1, a2){
    return (f.l >= 0 ? f.l : f.l = f.length) == 3
            ? f(a0, a1, a2)
            : runtime.caml_call_gen(f, [a0, a1, a2]);
   }
   function caml_call4(f, a0, a1, a2, a3){
    return (f.l >= 0 ? f.l : f.l = f.length) == 4
            ? f(a0, a1, a2, a3)
            : runtime.caml_call_gen(f, [a0, a1, a2, a3]);
   }
   var
    undef = undefined,
    global_data = runtime.caml_get_global_data(),
    cst$6 = cst$7,
    cst$5 = cst$8,
    cst$4 = cst$7,
    cst$2 = ";",
    cst$3 = cst$9,
    cst$1 = cst$7,
    cst$0 = cst$8,
    cst = cst$7,
    Js_of_ocaml_Dom_svg = global_data.Js_of_ocaml__Dom_svg,
    Js_of_ocaml_Dom_html = global_data.Js_of_ocaml__Dom_html,
    React = global_data.React,
    Js_of_ocaml_tyxml_Import = global_data.Js_of_ocaml_tyxml__Import,
    Stdlib = global_data.Stdlib,
    Js_of_ocaml_Js = global_data.Js_of_ocaml__Js,
    ReactiveData = global_data.ReactiveData,
    Stdlib_List = global_data.Stdlib__List,
    Js_of_ocaml_Dom = global_data.Js_of_ocaml__Dom,
    Assert_failure = global_data.Assert_failure,
    Stdlib_Printf = global_data.Stdlib__Printf,
    Xml_wrap = global_data.Xml_wrap,
    Svg_f = global_data.Svg_f,
    Html_f = global_data.Html_f,
    Js_of_ocaml_tyxml_Tyxml_cast = global_data.Js_of_ocaml_tyxml__Tyxml_cast,
    t2 = Js_of_ocaml_Js[52][1],
    weakMap = t2.WeakMap,
    map = new weakMap,
    cst_filter_attrib_not_implemen =
      "filter_attrib not implemented for event handler",
    _d_ = [0, cst_lib_tyxml_tyxml_js_ml, 347, 8],
    _e_ = [0, cst_lib_tyxml_tyxml_js_ml, 353, 15],
    _f_ = [0, cst_lib_tyxml_tyxml_js_ml, 361, 17],
    _c_ = [0, cst_lib_tyxml_tyxml_js_ml, 334, 4],
    _a_ = [0, [11, "Invalid entity ", [3, 0, 0]], "Invalid entity %S"];
   function retain(node, keepme){
    function _Q_(x){return x;}
    function _R_(param){return new Js_of_ocaml_Js[18];}
    var
     _S_ = map.get(node),
     prev = caml_call3(Js_of_ocaml_Js[6][7], _S_, _R_, _Q_);
    prev.push(keepme);
    return map.set(node, prev);
   }
   function uri_of_string(s){return s;}
   function string_of_uri(s){return s;}
   function attr(name, v){
    return [0, name, [4, caml_call1(React[2][1], [0, v])]];
   }
   function float_attrib(name, value){return attr(name, value.toString());}
   function int_attrib(name, value){return attr(name, value.toString());}
   function string_attrib(name, value){
    return attr(name, caml_jsstring_of_string(value));
   }
   function space_sep_attrib(name, values){
    return attr
            (name,
             caml_jsstring_of_string
              (caml_call2(Js_of_ocaml_tyxml_Import[3][6], cst, values)));
   }
   function comma_sep_attrib(name, values){
    return attr
            (name,
             caml_jsstring_of_string
              (caml_call2(Js_of_ocaml_tyxml_Import[3][6], cst$0, values)));
   }
   function event_handler_attrib(name, value){return [0, name, [0, value]];}
   function mouse_event_handler_attrib(name, value){return [0, name, [1, value]];
   }
   function keyboard_event_handler_attrib(name, value){return [0, name, [2, value]];
   }
   function touch_event_handler_attrib(name, value){return [0, name, [3, value]];
   }
   function uri_attrib(name, value){
    return attr(name, caml_jsstring_of_string(value));
   }
   function uris_attrib(name, values){
    return attr
            (name,
             caml_jsstring_of_string
              (caml_call2(Js_of_ocaml_tyxml_Import[3][6], cst$1, values)));
   }
   function empty(param){
    return Js_of_ocaml_Dom_html[2].createDocumentFragment();
   }
   function comment(c){
    return Js_of_ocaml_Dom_html[2].createComment(caml_jsstring_of_string(c));
   }
   function pcdata(s){
    return Js_of_ocaml_Dom_html[2].createTextNode(caml_jsstring_of_string(s));
   }
   function encodedpcdata(s){
    return Js_of_ocaml_Dom_html[2].createTextNode(caml_jsstring_of_string(s));
   }
   function string_fold(s, pos, init, f){
    var r = [0, init], _O_ = caml_ml_string_length(s) - 1 | 0;
    if(_O_ >= pos){
     var i = pos;
     for(;;){
      var c = caml_string_get(s, i);
      r[1] = caml_call2(f, r[1], c);
      var _P_ = i + 1 | 0;
      if(_O_ === i) break;
      var i = _P_;
     }
    }
    return r[1];
   }
   function invalid_entity(e){
    var _N_ = caml_call2(Stdlib_Printf[4], _a_, e);
    return caml_call1(Stdlib[2], _N_);
   }
   function parse_int(pos, base, e){
    return string_fold
            (e,
             pos,
             0,
             function(acc, x){
              a:
              {
               if(65 <= x){
                if(97 <= x){
                 if(103 > x){var match = [0, (x - 97 | 0) + 10 | 0]; break a;}
                }
                else if(71 > x){
                 var match = [0, (x - 65 | 0) + 10 | 0];
                 break a;
                }
               }
               else if(9 >= x - 48 >>> 0){
                var match = [0, x - 48 | 0];
                break a;
               }
               var match = 0;
              }
              if(match){
               var d = match[1];
               if(caml_call2(Js_of_ocaml_tyxml_Import[5], d, base))
                return runtime.caml_mul(acc, base) + d | 0;
              }
              return invalid_entity(e);
             });
   }
   function entity(e){
    var len = caml_ml_string_length(e);
    a:
    {
     if(caml_call2(Js_of_ocaml_tyxml_Import[10], len, 1)){
      var _H_ = caml_string_get(e, 0);
      if(caml_call2(Js_of_ocaml_tyxml_Import[4][8], _H_, 35)){
       b:
       {
        c:
        if(caml_call2(Js_of_ocaml_tyxml_Import[10], len, 2)){
         var _I_ = caml_string_get(e, 1);
         if(! caml_call2(Js_of_ocaml_tyxml_Import[4][8], _I_, 120)){
          var _J_ = caml_string_get(e, 1);
          if(! caml_call2(Js_of_ocaml_tyxml_Import[4][8], _J_, 88)) break c;
         }
         var i = parse_int(2, 16, e);
         break b;
        }
        var i = parse_int(1, 10, e);
       }
       var str = Js_of_ocaml_Js[13].fromCharCode(i);
       break a;
      }
     }
     if
      (string_fold
        (e,
         0,
         1,
         function(acc, x){
          if(! acc) return acc;
          var _M_ = x - 48 | 0;
          a:
          {
           if(42 < _M_ >>> 0){
            if(25 < _M_ - 49 >>> 0) break a;
           }
           else if(6 >= _M_ - 10 >>> 0) break a;
           return 1;
          }
          return 0;
         })
       && caml_string_notequal(e, cst$10))
      if(caml_string_notequal(e, "amp"))
       if(caml_string_notequal(e, "apos"))
        if(caml_string_notequal(e, "gt"))
         if(caml_string_notequal(e, "lt"))
          if(caml_string_notequal(e, "quot"))
           var
            _K_ = caml_call2(Stdlib[28], e, cst$2),
            _L_ = caml_jsstring_of_string(caml_call2(Stdlib[28], cst$3, _K_)),
            str = caml_call1(Js_of_ocaml_Dom_html[122], _L_);
          else
           var str = '"';
         else
          var str = "<";
        else
         var str = ">";
       else
        var str = "'";
      else
       var str = cst$9;
     else
      var str = invalid_entity(e);
    }
    return Js_of_ocaml_Dom_html[2].createTextNode(str);
   }
   function iter_prop_protected(node, name, f){
    var
     _E_ = node[name],
     match = caml_call1(Js_of_ocaml_Js[6][5], _E_) ? [0, name] : 0;
    if(! match) return 0;
    var n = match[1];
    try{var _F_ = caml_call1(f, n); return _F_;}catch(_G_){return 0;}
   }
   function attach_attribs(node, l){
    function _C_(param){
     var att = param[2], n = param[1], n$0 = caml_jsstring_of_string(n);
     switch(att[0]){
       case 0:
        var h = att[1];
        return node[n$0] =
                caml_js_wrap_callback
                 (function(ev){return ! ! caml_call1(h, ev);});
       case 1:
        var h$0 = att[1];
        return node[n$0] =
                caml_js_wrap_callback
                 (function(ev){return ! ! caml_call1(h$0, ev);});
       case 2:
        var h$1 = att[1];
        return node[n$0] =
                caml_js_wrap_callback
                 (function(ev){return ! ! caml_call1(h$1, ev);});
       case 3:
        var h$2 = att[1];
        return node[n$0] =
                caml_js_wrap_callback
                 (function(ev){return ! ! caml_call1(h$2, ev);});
       default:
        var
         a = att[1],
         _D_ =
           function(param){
            if(param){
             var t27 = param[1];
             node.setAttribute(n$0, t27);
             if(caml_string_notequal(n, cst_style))
              return iter_prop_protected
                      (node, n$0, function(name){return node[name] = t27;});
             var t28 = node.style;
             return t28.cssText = t27;
            }
            node.removeAttribute(n$0);
            if(caml_string_notequal(n, cst_style))
             return iter_prop_protected
                     (node,
                      n$0,
                      function(name){return node[name] = Js_of_ocaml_Js[1];});
            var t33 = node.style;
            return t33.cssText = cst$10;
           },
         keepme = caml_call3(React[2][11], 0, _D_, a);
        return retain(node, keepme);
     }
    }
    return caml_call2(Stdlib_List[17], _C_, l);
   }
   function leaf(opt, name){
    if(opt) var sth = opt[1], a = sth; else var a = 0;
    var
     e = Js_of_ocaml_Dom_html[2].createElement(caml_jsstring_of_string(name));
    attach_attribs(e, a);
    return e;
   }
   function node(opt, name, children){
    if(opt) var sth = opt[1], a = sth; else var a = 0;
    var
     e = Js_of_ocaml_Dom_html[2].createElement(caml_jsstring_of_string(name));
    attach_attribs(e, a);
    function _B_(c){e.appendChild(c); return 0;}
    caml_call2(Stdlib_List[17], _B_, children);
    return e;
   }
   function cdata(s){return pcdata(s);}
   function cdata_script(s){return cdata(s);}
   function cdata_style(s){return cdata(s);}
   function leaf$0(opt, name){
    if(opt) var sth = opt[1], a = sth; else var a = 0;
    var
     e =
       Js_of_ocaml_Dom_html[2].createElementNS
        (Js_of_ocaml_Dom_svg[1], caml_jsstring_of_string(name));
    attach_attribs(e, a);
    return e;
   }
   function node$0(opt, name, children){
    if(opt) var sth = opt[1], a = sth; else var a = 0;
    var
     e =
       Js_of_ocaml_Dom_html[2].createElementNS
        (Js_of_ocaml_Dom_svg[1], caml_jsstring_of_string(name));
    attach_attribs(e, a);
    function _A_(c){e.appendChild(c); return 0;}
    caml_call2(Stdlib_List[17], _A_, children);
    return e;
   }
   var
    Svg =
      caml_call1
       (Svg_f[1],
        [0,
         Xml_wrap[1],
         string_of_uri,
         uri_of_string,
         float_attrib,
         int_attrib,
         string_attrib,
         space_sep_attrib,
         comma_sep_attrib,
         event_handler_attrib,
         mouse_event_handler_attrib,
         keyboard_event_handler_attrib,
         touch_event_handler_attrib,
         uri_attrib,
         uris_attrib,
         empty,
         comment,
         pcdata,
         encodedpcdata,
         entity,
         leaf$0,
         node$0,
         cdata,
         cdata_script,
         cdata_style]),
    _b_ =
      [0,
       Svg[2],
       Svg[3],
       Svg[4],
       Svg[5],
       Svg[6],
       Svg[7],
       Svg[8],
       Svg[9],
       Svg[10],
       Svg[11],
       Svg[12],
       Svg[13],
       Svg[14],
       Svg[15],
       Svg[16],
       Svg[17],
       Svg[18],
       Svg[19],
       Svg[20],
       Svg[21],
       Svg[22],
       Svg[23],
       Svg[24],
       Svg[25],
       Svg[26],
       Svg[27],
       Svg[28],
       Svg[29],
       Svg[30],
       Svg[31],
       Svg[32],
       Svg[33],
       Svg[34],
       Svg[35],
       Svg[36],
       Svg[37],
       Svg[38],
       Svg[39],
       Svg[40],
       Svg[41],
       Svg[42],
       Svg[43],
       Svg[44],
       Svg[45],
       Svg[46],
       Svg[47],
       Svg[48],
       Svg[49],
       Svg[50],
       Svg[51],
       Svg[52],
       Svg[53],
       Svg[54],
       Svg[55],
       Svg[56],
       Svg[57],
       Svg[58],
       Svg[59],
       Svg[60],
       Svg[61],
       Svg[62],
       Svg[63],
       Svg[64],
       Svg[65],
       Svg[66],
       Svg[67],
       Svg[68],
       Svg[69],
       Svg[70],
       Svg[71],
       Svg[72],
       Svg[73],
       Svg[74],
       Svg[75],
       Svg[76],
       Svg[77],
       Svg[78],
       Svg[79],
       Svg[80],
       Svg[81],
       Svg[82],
       Svg[83],
       Svg[84],
       Svg[85],
       Svg[86],
       Svg[87],
       Svg[88],
       Svg[89],
       Svg[90],
       Svg[91],
       Svg[92],
       Svg[93],
       Svg[94],
       Svg[95],
       Svg[96],
       Svg[97],
       Svg[98],
       Svg[99],
       Svg[100],
       Svg[101],
       Svg[102],
       Svg[103],
       Svg[104],
       Svg[105],
       Svg[106],
       Svg[107],
       Svg[108],
       Svg[109],
       Svg[110],
       Svg[111],
       Svg[112],
       Svg[113],
       Svg[114],
       Svg[115],
       Svg[116],
       Svg[117],
       Svg[118],
       Svg[119],
       Svg[120],
       Svg[121],
       Svg[122],
       Svg[123],
       Svg[124],
       Svg[125],
       Svg[126],
       Svg[127],
       Svg[128],
       Svg[129],
       Svg[130],
       Svg[131],
       Svg[132],
       Svg[133],
       Svg[134],
       Svg[135],
       Svg[136],
       Svg[137],
       Svg[138],
       Svg[139],
       Svg[140],
       Svg[141],
       Svg[142],
       Svg[143],
       Svg[144],
       Svg[145],
       Svg[146],
       Svg[147],
       Svg[148],
       Svg[149],
       Svg[150],
       Svg[151],
       Svg[152],
       Svg[153],
       Svg[154],
       Svg[155],
       Svg[156],
       Svg[157],
       Svg[158],
       Svg[159],
       Svg[160],
       Svg[161],
       Svg[162],
       Svg[163],
       Svg[164],
       Svg[165],
       Svg[166],
       Svg[167],
       Svg[168],
       Svg[169],
       Svg[170],
       Svg[171],
       Svg[172],
       Svg[173],
       Svg[174],
       Svg[175],
       Svg[176],
       Svg[177],
       Svg[178],
       Svg[179],
       Svg[180],
       Svg[181],
       Svg[182],
       Svg[183],
       Svg[184],
       Svg[185],
       Svg[186],
       Svg[187],
       Svg[188],
       Svg[189],
       Svg[190],
       Svg[191],
       Svg[192],
       Svg[193],
       Svg[194],
       Svg[195],
       Svg[196],
       Svg[197],
       Svg[198],
       Svg[199],
       Svg[200],
       Svg[201],
       Svg[202],
       Svg[203],
       Svg[204],
       Svg[205],
       Svg[206],
       Svg[207],
       Svg[208],
       Svg[209],
       Svg[210],
       Svg[211],
       Svg[212],
       Svg[213],
       Svg[214],
       Svg[215],
       Svg[216],
       Svg[217],
       Svg[218],
       Svg[219],
       Svg[220],
       Svg[221],
       Svg[222],
       Svg[223],
       Svg[224],
       Svg[225],
       Svg[226],
       Svg[227],
       Svg[228],
       Svg[229],
       Svg[230],
       Svg[231],
       Svg[232],
       Svg[233],
       Svg[234],
       Svg[235],
       Svg[236],
       Svg[237],
       Svg[238],
       Svg[239],
       Svg[240],
       Svg[241],
       Svg[242],
       Svg[243],
       Svg[244],
       Svg[245],
       Svg[246],
       Svg[247],
       Svg[248],
       Svg[249],
       Svg[250],
       Svg[251],
       Svg[252],
       Svg[253],
       Svg[254],
       Svg[255],
       Svg[256],
       Svg[257],
       Svg[258],
       Svg[259],
       Svg[260],
       Svg[261],
       Svg[262],
       Svg[263],
       Svg[264],
       Svg[265],
       Svg[266],
       Svg[267],
       Svg[268],
       Svg[269],
       Svg[270],
       Svg[271],
       Svg[272],
       Svg[273],
       Svg[274],
       Svg[275],
       Svg[276],
       Svg[277],
       Svg[278],
       Svg[279],
       Svg[280],
       Svg[281],
       Svg[282],
       Svg[283],
       Svg[284],
       Svg[285],
       Svg[286],
       Svg[287],
       Svg[288],
       Svg[289],
       Svg[290],
       Svg[291],
       Svg[292],
       Svg[293],
       Svg[294],
       Svg[295],
       Svg[296],
       Svg[297],
       Svg[298],
       Svg[299],
       Svg[300],
       Svg[301],
       Svg[302],
       Svg[303],
       Svg[304],
       Svg[305],
       Svg[306],
       Svg[307],
       Svg[308],
       Svg[309],
       Svg[310],
       Svg[311],
       Svg[312],
       Svg[313],
       Svg[314],
       Svg[315],
       Svg[316],
       Svg[317],
       Svg[318],
       Svg[319],
       Svg[320],
       Svg[321],
       Svg[322],
       Svg[323],
       Svg[324],
       Svg[325],
       Svg[326],
       Svg[327],
       Svg[328],
       Svg[329],
       Svg[330]],
    Html =
      caml_call1
       (caml_call1
         (Html_f[1],
          [0,
           Xml_wrap[1],
           string_of_uri,
           uri_of_string,
           float_attrib,
           int_attrib,
           string_attrib,
           space_sep_attrib,
           comma_sep_attrib,
           event_handler_attrib,
           mouse_event_handler_attrib,
           keyboard_event_handler_attrib,
           touch_event_handler_attrib,
           uri_attrib,
           uris_attrib,
           empty,
           comment,
           pcdata,
           encodedpcdata,
           entity,
           leaf,
           node,
           cdata,
           cdata_script,
           cdata_style]),
        _b_),
    elt = Html[337],
    To_dom = caml_call1(Js_of_ocaml_tyxml_Tyxml_cast[1], [0, elt]),
    elt$0 = Html[335],
    Of_dom = caml_call1(Js_of_ocaml_tyxml_Tyxml_cast[2], [0, elt$0]);
   function add_to(opt, node, content){
    if(opt) var sth = opt[1], keep = sth; else var keep = 1;
    if(1 - keep){
     var t49 = node.childNodes, _u_ = t49.length - 1 | 0, _t_ = 0;
     if(_u_ >= 0){
      var i = _t_;
      for(;;){
       var
        _v_ = function(x){node.removeChild(x); return 0;},
        _w_ = t49.item(i);
       caml_call2(Js_of_ocaml_Js[5][6], _w_, _v_);
       var _x_ = i + 1 | 0;
       if(_u_ === i) break;
       var i = _x_;
      }
     }
    }
    function _y_(x){
     var _z_ = caml_call1(To_dom[1], x);
     return caml_call2(Js_of_ocaml_Dom[5], node, _z_);
    }
    return caml_call2(Stdlib_List[17], _y_, content);
   }
   function id(keep, id, content){
    var node = caml_call1(Js_of_ocaml_Dom_html[6], id);
    return add_to(keep, node, content);
   }
   function body(keep, content){
    var t54 = Js_of_ocaml_Dom_html[2];
    return add_to(keep, t54.body, content);
   }
   function head(keep, content){
    var t55 = Js_of_ocaml_Dom_html[2];
    return add_to(keep, t55.head, content);
   }
   function html(head, body){
    if(head){
     var
      h = head[1],
      t56 = caml_call1(To_dom[5], h),
      t57 = Js_of_ocaml_Dom_html[2];
     t57.head = t56;
    }
    var t58 = caml_call1(To_dom[11], body), t59 = Js_of_ocaml_Dom_html[2];
    t59.body = t58;
    return 0;
   }
   var return$0 = React[2][1];
   function fmap(f){return caml_call2(React[2][11], 0, f);}
   function nil(param){return ReactiveData[1][1];}
   var singleton = ReactiveData[1][24];
   function cons(x, xs){
    var _s_ = caml_call1(singleton, x);
    return caml_call2(ReactiveData[1][25], _s_, xs);
   }
   function map$0(f){return caml_call1(ReactiveData[1][9], f);}
   function append(x, y){return caml_call2(ReactiveData[1][25], x, y);}
   function insertAt(dom, i, x){
    var nodes = dom.childNodes;
    if(caml_call2(Js_of_ocaml_tyxml_Import[6], i, nodes.length))
     return caml_call2(Js_of_ocaml_tyxml_Import[8], i, nodes.length)
             ? (dom.appendChild(x), 0)
             : (dom.insertBefore(x, nodes.item(i)), 0);
    throw caml_maybe_attach_backtrace([0, Assert_failure, _c_], 1);
   }
   function removeChildren(dom){
    for(;;){
     var match = caml_call1(Js_of_ocaml_Js[5][10], dom.lastChild);
     if(! match) return;
     var c = match[1];
     dom.removeChild(c);
    }
   }
   function update_children(dom, nodes){
    removeChildren(dom);
    var _j_ = 0;
    function _k_(param, msg){
     if(0 === msg[0]){
      var
       p = msg[1],
       _l_ =
         function(p){
          switch(p[0]){
            case 0:
             var x = p[2], i = p[1];
             if(caml_call2(Js_of_ocaml_tyxml_Import[5], i, 0))
              var t71 = dom.childNodes, i$0 = (t71.length + 1 | 0) + i | 0;
             else
              var i$0 = i;
             return insertAt(dom, i$0, x);
            case 1:
             var i$1 = p[1];
             if(caml_call2(Js_of_ocaml_tyxml_Import[5], i$1, 0))
              var t73 = dom.childNodes, i$2 = t73.length + i$1 | 0;
             else
              var i$2 = i$1;
             var nodes = dom.childNodes;
             if
              (caml_call2(Js_of_ocaml_tyxml_Import[10], i$2, 0)
               && caml_call2(Js_of_ocaml_tyxml_Import[5], i$2, nodes.length)){
              var
               _n_ =
                 function(n){return caml_call2(Js_of_ocaml_Dom[4], dom, n);},
               _o_ = nodes.item(i$2);
              return caml_call2(Js_of_ocaml_Js[5][6], _o_, _n_);
             }
             throw caml_maybe_attach_backtrace([0, Assert_failure, _d_], 1);
            case 2:
             var x$0 = p[2], i$3 = p[1];
             if(caml_call2(Js_of_ocaml_tyxml_Import[5], i$3, 0))
              var t79 = dom.childNodes, i$4 = t79.length + i$3 | 0;
             else
              var i$4 = i$3;
             var
              _p_ = dom.childNodes.item(i$4),
              match = caml_call1(Js_of_ocaml_Js[5][10], _p_);
             if(! match)
              throw caml_maybe_attach_backtrace([0, Assert_failure, _e_], 1);
             var old = match[1];
             dom.replaceChild(x$0, old);
             return 0;
            default:
             var move = p[2], i$5 = p[1];
             if(caml_call2(Js_of_ocaml_tyxml_Import[5], i$5, 0))
              var t87 = dom.childNodes, i$6 = t87.length + i$5 | 0;
             else
              var i$6 = i$5;
             if(caml_call2(Js_of_ocaml_tyxml_Import[8], move, 0)) return 0;
             var
              _q_ = dom.childNodes.item(i$6),
              match$0 = caml_call1(Js_of_ocaml_Js[5][10], _q_);
             if(! match$0)
              throw caml_maybe_attach_backtrace([0, Assert_failure, _f_], 1);
             var
              i$7 = match$0[1],
              _r_ =
                caml_call2(Js_of_ocaml_tyxml_Import[9], move, 0)
                 ? move + 1 | 0
                 : move;
             return insertAt(dom, i$6 + _r_ | 0, i$7);
          }
         };
      return caml_call2(Stdlib_List[17], _l_, p);
     }
     var l = msg[1];
     removeChildren(dom);
     function _m_(l){dom.appendChild(l); return 0;}
     return caml_call2(Stdlib_List[17], _m_, l);
    }
    var keepme = caml_call3(ReactiveData[1][11], _k_, nodes, _j_);
    retain(dom, keepme);
    return 0;
   }
   function filter_attrib(param, on){
    var a = param[2], name = param[1];
    if(4 !== a[0])
     throw caml_maybe_attach_backtrace
            ([0, Stdlib[6], cst_filter_attrib_not_implemen], 1);
    var a$0 = a[1];
    function _i_(on, a){return on ? a : 0;}
    return [0, name, [4, caml_call4(React[2][27], 0, _i_, on, a$0)]];
   }
   function attr$0(name, f, s){
    var a = caml_call1(fmap(f), s);
    return [0, name, [4, a]];
   }
   function float_attrib$0(name, s){
    return attr$0(name, function(f){return [0, f.toString()];}, s);
   }
   function int_attrib$0(name, s){
    return attr$0(name, function(f){return [0, f.toString()];}, s);
   }
   function string_attrib$0(name, s){
    return attr$0
            (name, function(f){return [0, caml_jsstring_of_string(f)];}, s);
   }
   function space_sep_attrib$0(name, s){
    return attr$0
            (name,
             function(f){
              return [0,
                      caml_jsstring_of_string
                       (caml_call2(Js_of_ocaml_tyxml_Import[3][6], cst$4, f))];
             },
             s);
   }
   function comma_sep_attrib$0(name, s){
    return attr$0
            (name,
             function(f){
              return [0,
                      caml_jsstring_of_string
                       (caml_call2(Js_of_ocaml_tyxml_Import[3][6], cst$5, f))];
             },
             s);
   }
   function event_handler_attrib$0(name, s){return event_handler_attrib(name, s);
   }
   function mouse_event_handler_attrib$0(name, s){return mouse_event_handler_attrib(name, s);
   }
   function keyboard_event_handler_attrib$0(name, s){return keyboard_event_handler_attrib(name, s);
   }
   function touch_event_handler_attrib$0(name, s){return touch_event_handler_attrib(name, s);
   }
   function uri_attrib$0(name, s){
    return attr$0
            (name, function(f){return [0, caml_jsstring_of_string(f)];}, s);
   }
   function uris_attrib$0(name, s){
    return attr$0
            (name,
             function(f){
              return [0,
                      caml_jsstring_of_string
                       (caml_call2(Js_of_ocaml_tyxml_Import[3][6], cst$6, f))];
             },
             s);
   }
   function pcdata$0(s){
    var t99 = Js_of_ocaml_Dom_html[2].createTextNode(cst$10);
    function _h_(s){
     var t98 = caml_jsstring_of_string(s);
     return t99.data = t98;
    }
    var keepme = caml_call3(React[2][11], 0, _h_, s);
    retain(t99, keepme);
    return t99;
   }
   function encodedpcdata$0(s){return pcdata$0(s);}
   function entity$0(s){return entity(s);}
   function node$1(opt, name, l){
    if(opt) var sth = opt[1], a = sth; else var a = 0;
    var
     e = Js_of_ocaml_Dom_html[2].createElement(caml_jsstring_of_string(name));
    attach_attribs(e, a);
    update_children(e, l);
    return e;
   }
   function node$2(opt, name, l){
    if(opt) var sth = opt[1], a = sth; else var a = 0;
    var
     e =
       Js_of_ocaml_Dom_html[2].createElementNS
        (Js_of_ocaml_Dom_svg[1], caml_jsstring_of_string(name));
    attach_attribs(e, a);
    update_children(e, l);
    return e;
   }
   var
    Svg$0 =
      caml_call1
       (Svg_f[1],
        [0,
         [0, return$0, fmap, nil, singleton, cons, append, map$0],
         string_of_uri,
         uri_of_string,
         float_attrib$0,
         int_attrib$0,
         string_attrib$0,
         space_sep_attrib$0,
         comma_sep_attrib$0,
         event_handler_attrib$0,
         mouse_event_handler_attrib$0,
         keyboard_event_handler_attrib$0,
         touch_event_handler_attrib$0,
         uri_attrib$0,
         uris_attrib$0,
         empty,
         comment,
         pcdata$0,
         encodedpcdata$0,
         entity$0,
         leaf$0,
         node$2,
         cdata,
         cdata_script,
         cdata_style]),
    _g_ =
      [0,
       Svg$0[2],
       Svg$0[3],
       Svg$0[4],
       Svg$0[5],
       Svg$0[6],
       Svg$0[7],
       Svg$0[8],
       Svg$0[9],
       Svg$0[10],
       Svg$0[11],
       Svg$0[12],
       Svg$0[13],
       Svg$0[14],
       Svg$0[15],
       Svg$0[16],
       Svg$0[17],
       Svg$0[18],
       Svg$0[19],
       Svg$0[20],
       Svg$0[21],
       Svg$0[22],
       Svg$0[23],
       Svg$0[24],
       Svg$0[25],
       Svg$0[26],
       Svg$0[27],
       Svg$0[28],
       Svg$0[29],
       Svg$0[30],
       Svg$0[31],
       Svg$0[32],
       Svg$0[33],
       Svg$0[34],
       Svg$0[35],
       Svg$0[36],
       Svg$0[37],
       Svg$0[38],
       Svg$0[39],
       Svg$0[40],
       Svg$0[41],
       Svg$0[42],
       Svg$0[43],
       Svg$0[44],
       Svg$0[45],
       Svg$0[46],
       Svg$0[47],
       Svg$0[48],
       Svg$0[49],
       Svg$0[50],
       Svg$0[51],
       Svg$0[52],
       Svg$0[53],
       Svg$0[54],
       Svg$0[55],
       Svg$0[56],
       Svg$0[57],
       Svg$0[58],
       Svg$0[59],
       Svg$0[60],
       Svg$0[61],
       Svg$0[62],
       Svg$0[63],
       Svg$0[64],
       Svg$0[65],
       Svg$0[66],
       Svg$0[67],
       Svg$0[68],
       Svg$0[69],
       Svg$0[70],
       Svg$0[71],
       Svg$0[72],
       Svg$0[73],
       Svg$0[74],
       Svg$0[75],
       Svg$0[76],
       Svg$0[77],
       Svg$0[78],
       Svg$0[79],
       Svg$0[80],
       Svg$0[81],
       Svg$0[82],
       Svg$0[83],
       Svg$0[84],
       Svg$0[85],
       Svg$0[86],
       Svg$0[87],
       Svg$0[88],
       Svg$0[89],
       Svg$0[90],
       Svg$0[91],
       Svg$0[92],
       Svg$0[93],
       Svg$0[94],
       Svg$0[95],
       Svg$0[96],
       Svg$0[97],
       Svg$0[98],
       Svg$0[99],
       Svg$0[100],
       Svg$0[101],
       Svg$0[102],
       Svg$0[103],
       Svg$0[104],
       Svg$0[105],
       Svg$0[106],
       Svg$0[107],
       Svg$0[108],
       Svg$0[109],
       Svg$0[110],
       Svg$0[111],
       Svg$0[112],
       Svg$0[113],
       Svg$0[114],
       Svg$0[115],
       Svg$0[116],
       Svg$0[117],
       Svg$0[118],
       Svg$0[119],
       Svg$0[120],
       Svg$0[121],
       Svg$0[122],
       Svg$0[123],
       Svg$0[124],
       Svg$0[125],
       Svg$0[126],
       Svg$0[127],
       Svg$0[128],
       Svg$0[129],
       Svg$0[130],
       Svg$0[131],
       Svg$0[132],
       Svg$0[133],
       Svg$0[134],
       Svg$0[135],
       Svg$0[136],
       Svg$0[137],
       Svg$0[138],
       Svg$0[139],
       Svg$0[140],
       Svg$0[141],
       Svg$0[142],
       Svg$0[143],
       Svg$0[144],
       Svg$0[145],
       Svg$0[146],
       Svg$0[147],
       Svg$0[148],
       Svg$0[149],
       Svg$0[150],
       Svg$0[151],
       Svg$0[152],
       Svg$0[153],
       Svg$0[154],
       Svg$0[155],
       Svg$0[156],
       Svg$0[157],
       Svg$0[158],
       Svg$0[159],
       Svg$0[160],
       Svg$0[161],
       Svg$0[162],
       Svg$0[163],
       Svg$0[164],
       Svg$0[165],
       Svg$0[166],
       Svg$0[167],
       Svg$0[168],
       Svg$0[169],
       Svg$0[170],
       Svg$0[171],
       Svg$0[172],
       Svg$0[173],
       Svg$0[174],
       Svg$0[175],
       Svg$0[176],
       Svg$0[177],
       Svg$0[178],
       Svg$0[179],
       Svg$0[180],
       Svg$0[181],
       Svg$0[182],
       Svg$0[183],
       Svg$0[184],
       Svg$0[185],
       Svg$0[186],
       Svg$0[187],
       Svg$0[188],
       Svg$0[189],
       Svg$0[190],
       Svg$0[191],
       Svg$0[192],
       Svg$0[193],
       Svg$0[194],
       Svg$0[195],
       Svg$0[196],
       Svg$0[197],
       Svg$0[198],
       Svg$0[199],
       Svg$0[200],
       Svg$0[201],
       Svg$0[202],
       Svg$0[203],
       Svg$0[204],
       Svg$0[205],
       Svg$0[206],
       Svg$0[207],
       Svg$0[208],
       Svg$0[209],
       Svg$0[210],
       Svg$0[211],
       Svg$0[212],
       Svg$0[213],
       Svg$0[214],
       Svg$0[215],
       Svg$0[216],
       Svg$0[217],
       Svg$0[218],
       Svg$0[219],
       Svg$0[220],
       Svg$0[221],
       Svg$0[222],
       Svg$0[223],
       Svg$0[224],
       Svg$0[225],
       Svg$0[226],
       Svg$0[227],
       Svg$0[228],
       Svg$0[229],
       Svg$0[230],
       Svg$0[231],
       Svg$0[232],
       Svg$0[233],
       Svg$0[234],
       Svg$0[235],
       Svg$0[236],
       Svg$0[237],
       Svg$0[238],
       Svg$0[239],
       Svg$0[240],
       Svg$0[241],
       Svg$0[242],
       Svg$0[243],
       Svg$0[244],
       Svg$0[245],
       Svg$0[246],
       Svg$0[247],
       Svg$0[248],
       Svg$0[249],
       Svg$0[250],
       Svg$0[251],
       Svg$0[252],
       Svg$0[253],
       Svg$0[254],
       Svg$0[255],
       Svg$0[256],
       Svg$0[257],
       Svg$0[258],
       Svg$0[259],
       Svg$0[260],
       Svg$0[261],
       Svg$0[262],
       Svg$0[263],
       Svg$0[264],
       Svg$0[265],
       Svg$0[266],
       Svg$0[267],
       Svg$0[268],
       Svg$0[269],
       Svg$0[270],
       Svg$0[271],
       Svg$0[272],
       Svg$0[273],
       Svg$0[274],
       Svg$0[275],
       Svg$0[276],
       Svg$0[277],
       Svg$0[278],
       Svg$0[279],
       Svg$0[280],
       Svg$0[281],
       Svg$0[282],
       Svg$0[283],
       Svg$0[284],
       Svg$0[285],
       Svg$0[286],
       Svg$0[287],
       Svg$0[288],
       Svg$0[289],
       Svg$0[290],
       Svg$0[291],
       Svg$0[292],
       Svg$0[293],
       Svg$0[294],
       Svg$0[295],
       Svg$0[296],
       Svg$0[297],
       Svg$0[298],
       Svg$0[299],
       Svg$0[300],
       Svg$0[301],
       Svg$0[302],
       Svg$0[303],
       Svg$0[304],
       Svg$0[305],
       Svg$0[306],
       Svg$0[307],
       Svg$0[308],
       Svg$0[309],
       Svg$0[310],
       Svg$0[311],
       Svg$0[312],
       Svg$0[313],
       Svg$0[314],
       Svg$0[315],
       Svg$0[316],
       Svg$0[317],
       Svg$0[318],
       Svg$0[319],
       Svg$0[320],
       Svg$0[321],
       Svg$0[322],
       Svg$0[323],
       Svg$0[324],
       Svg$0[325],
       Svg$0[326],
       Svg$0[327],
       Svg$0[328],
       Svg$0[329],
       Svg$0[330]],
    Html$0 =
      caml_call1
       (caml_call1
         (Html_f[1],
          [0,
           [0, return$0, fmap, nil, singleton, cons, append, map$0],
           string_of_uri,
           uri_of_string,
           float_attrib$0,
           int_attrib$0,
           string_attrib$0,
           space_sep_attrib$0,
           comma_sep_attrib$0,
           event_handler_attrib$0,
           mouse_event_handler_attrib$0,
           keyboard_event_handler_attrib$0,
           touch_event_handler_attrib$0,
           uri_attrib$0,
           uris_attrib$0,
           empty,
           comment,
           pcdata$0,
           encodedpcdata$0,
           entity$0,
           leaf,
           node$1,
           cdata,
           cdata_script,
           cdata_style]),
        _g_),
    Js_of_ocaml_tyxml_Tyxml_js =
      [0,
       [0,
        Xml_wrap[1],
        string_of_uri,
        uri_of_string,
        float_attrib,
        int_attrib,
        string_attrib,
        space_sep_attrib,
        comma_sep_attrib,
        event_handler_attrib,
        mouse_event_handler_attrib,
        keyboard_event_handler_attrib,
        touch_event_handler_attrib,
        uri_attrib,
        uris_attrib,
        empty,
        comment,
        pcdata,
        encodedpcdata,
        entity,
        leaf,
        node,
        cdata,
        cdata_script,
        cdata_style],
       Svg,
       Html,
       Html,
       [0, html, body, head, id],
       [0, return$0, fmap, nil, singleton, cons, append, map$0],
       [0, update_children],
       [0,
        [0,
         [0, return$0, fmap, nil, singleton, cons, append, map$0],
         string_of_uri,
         uri_of_string,
         float_attrib$0,
         int_attrib$0,
         string_attrib$0,
         space_sep_attrib$0,
         comma_sep_attrib$0,
         event_handler_attrib$0,
         mouse_event_handler_attrib$0,
         keyboard_event_handler_attrib$0,
         touch_event_handler_attrib$0,
         uri_attrib$0,
         uris_attrib$0,
         empty,
         comment,
         pcdata$0,
         encodedpcdata$0,
         entity$0,
         leaf,
         node$1,
         cdata,
         cdata_script,
         cdata_style],
        Svg$0,
        Html$0,
        filter_attrib,
        Html$0],
       To_dom,
       Of_dom];
   runtime.caml_register_global
    (105, Js_of_ocaml_tyxml_Tyxml_js, "Js_of_ocaml_tyxml__Tyxml_js");
   return;
  }
  (globalThis));

//# unitInfo: Provides: Js_of_ocaml_tyxml
(function(globalThis){
   "use strict";
   var runtime = globalThis.jsoo_runtime, Js_of_ocaml_tyxml = [0];
   runtime.caml_register_global(0, Js_of_ocaml_tyxml, "Js_of_ocaml_tyxml");
   return;
  }
  (globalThis));

//# sourceMappingURL=data:application/json;base64,
