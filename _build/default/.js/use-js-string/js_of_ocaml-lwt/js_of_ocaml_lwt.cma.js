// Generated by js_of_ocaml
//# buildInfo:effects=false, kind=cma, use-js-string=true, version=5.6.0

//# unitInfo: Provides: Js_of_ocaml_lwt__
(function
  (globalThis){
   "use strict";
   var
    runtime = globalThis.jsoo_runtime,
    Js_of_ocaml_lwt = [0],
    Js_of_ocaml_lwt$0 = [0, Js_of_ocaml_lwt];
   runtime.caml_register_global(0, Js_of_ocaml_lwt$0, "Js_of_ocaml_lwt__");
   return;
  }
  (globalThis));

//# unitInfo: Provides: Js_of_ocaml_lwt__Import
//# unitInfo: Requires: Stdlib__Char, Stdlib__String
(function
  (globalThis){
   "use strict";
   var
    runtime = globalThis.jsoo_runtime,
    global_data = runtime.caml_get_global_data(),
    Stdlib_String = global_data.Stdlib__String,
    Stdlib_Char = global_data.Stdlib__Char,
    Poly = [0];
   function symbol(x, y){return x < y ? 1 : 0;}
   function symbol$0(x, y){return x <= y ? 1 : 0;}
   function symbol$1(x, y){return x !== y ? 1 : 0;}
   function symbol$2(x, y){return x === y ? 1 : 0;}
   function symbol$3(x, y){return y < x ? 1 : 0;}
   function symbol$4(x, y){return y <= x ? 1 : 0;}
   var compare = runtime.caml_int_compare;
   function equal(x, y){return x === y ? 1 : 0;}
   function max(x, y){return y <= x ? x : y;}
   function min(x, y){return x <= y ? x : y;}
   var
    Int_replace_polymorphic_compar =
      [0,
       symbol,
       symbol$0,
       symbol$1,
       symbol$2,
       symbol$3,
       symbol$4,
       compare,
       equal,
       max,
       min],
    make = Stdlib_String[1],
    init = Stdlib_String[2],
    empty = Stdlib_String[3],
    of_bytes = Stdlib_String[4],
    to_bytes = Stdlib_String[5],
    concat = Stdlib_String[6],
    cat = Stdlib_String[7],
    compare$0 = Stdlib_String[9],
    starts_with = Stdlib_String[10],
    ends_with = Stdlib_String[11],
    contains_from = Stdlib_String[12],
    rcontains_from = Stdlib_String[13],
    contains = Stdlib_String[14],
    sub = Stdlib_String[15],
    split_on_char = Stdlib_String[16],
    map = Stdlib_String[17],
    mapi = Stdlib_String[18],
    fold_left = Stdlib_String[19],
    fold_right = Stdlib_String[20],
    for_all = Stdlib_String[21],
    exists = Stdlib_String[22],
    trim = Stdlib_String[23],
    escaped = Stdlib_String[24],
    uppercase_ascii = Stdlib_String[25],
    lowercase_ascii = Stdlib_String[26],
    capitalize_ascii = Stdlib_String[27],
    uncapitalize_ascii = Stdlib_String[28],
    iter = Stdlib_String[29],
    iteri = Stdlib_String[30],
    index_from = Stdlib_String[31],
    index_from_opt = Stdlib_String[32],
    rindex_from = Stdlib_String[33],
    rindex_from_opt = Stdlib_String[34],
    index = Stdlib_String[35],
    index_opt = Stdlib_String[36],
    rindex = Stdlib_String[37],
    rindex_opt = Stdlib_String[38],
    to_seq = Stdlib_String[39],
    to_seqi = Stdlib_String[40],
    of_seq = Stdlib_String[41],
    get_utf_8_uchar = Stdlib_String[42],
    is_valid_utf_8 = Stdlib_String[43],
    get_utf_16be_uchar = Stdlib_String[44],
    is_valid_utf_16be = Stdlib_String[45],
    get_utf_16le_uchar = Stdlib_String[46],
    is_valid_utf_16le = Stdlib_String[47],
    blit = Stdlib_String[48],
    copy = Stdlib_String[49],
    fill = Stdlib_String[50],
    uppercase = Stdlib_String[51],
    lowercase = Stdlib_String[52],
    capitalize = Stdlib_String[53],
    uncapitalize = Stdlib_String[54],
    get_uint8 = Stdlib_String[55],
    get_int8 = Stdlib_String[56],
    get_uint16_ne = Stdlib_String[57],
    get_uint16_be = Stdlib_String[58],
    get_uint16_le = Stdlib_String[59],
    get_int16_ne = Stdlib_String[60],
    get_int16_be = Stdlib_String[61],
    get_int16_le = Stdlib_String[62],
    get_int32_ne = Stdlib_String[63],
    get_int32_be = Stdlib_String[64],
    get_int32_le = Stdlib_String[65],
    get_int64_ne = Stdlib_String[66],
    get_int64_be = Stdlib_String[67],
    get_int64_le = Stdlib_String[68],
    equal$0 = runtime.caml_string_equal,
    String =
      [0,
       make,
       init,
       empty,
       of_bytes,
       to_bytes,
       concat,
       cat,
       compare$0,
       starts_with,
       ends_with,
       contains_from,
       rcontains_from,
       contains,
       sub,
       split_on_char,
       map,
       mapi,
       fold_left,
       fold_right,
       for_all,
       exists,
       trim,
       escaped,
       uppercase_ascii,
       lowercase_ascii,
       capitalize_ascii,
       uncapitalize_ascii,
       iter,
       iteri,
       index_from,
       index_from_opt,
       rindex_from,
       rindex_from_opt,
       index,
       index_opt,
       rindex,
       rindex_opt,
       to_seq,
       to_seqi,
       of_seq,
       get_utf_8_uchar,
       is_valid_utf_8,
       get_utf_16be_uchar,
       is_valid_utf_16be,
       get_utf_16le_uchar,
       is_valid_utf_16le,
       blit,
       copy,
       fill,
       uppercase,
       lowercase,
       capitalize,
       uncapitalize,
       get_uint8,
       get_int8,
       get_uint16_ne,
       get_uint16_be,
       get_uint16_le,
       get_int16_ne,
       get_int16_be,
       get_int16_le,
       get_int32_ne,
       get_int32_be,
       get_int32_le,
       get_int64_ne,
       get_int64_be,
       get_int64_le,
       equal$0],
    chr = Stdlib_Char[1],
    escaped$0 = Stdlib_Char[2],
    lowercase$0 = Stdlib_Char[3],
    uppercase$0 = Stdlib_Char[4],
    lowercase_ascii$0 = Stdlib_Char[5],
    uppercase_ascii$0 = Stdlib_Char[6],
    compare$1 = Stdlib_Char[7];
   function equal$1(x, y){return x === y ? 1 : 0;}
   var
    Char =
      [0,
       chr,
       escaped$0,
       lowercase$0,
       uppercase$0,
       lowercase_ascii$0,
       uppercase_ascii$0,
       compare$1,
       equal$1],
    symbol$5 = Int_replace_polymorphic_compar[1],
    symbol$6 = Int_replace_polymorphic_compar[2],
    symbol$7 = Int_replace_polymorphic_compar[3],
    symbol$8 = Int_replace_polymorphic_compar[4],
    symbol$9 = Int_replace_polymorphic_compar[5],
    symbol$10 = Int_replace_polymorphic_compar[6],
    compare$2 = Int_replace_polymorphic_compar[7],
    equal$2 = Int_replace_polymorphic_compar[8],
    max$0 = Int_replace_polymorphic_compar[9],
    min$0 = Int_replace_polymorphic_compar[10],
    Js_of_ocaml_lwt_Import =
      [0,
       Poly,
       Int_replace_polymorphic_compar,
       String,
       Char,
       symbol$5,
       symbol$6,
       symbol$7,
       symbol$8,
       symbol$9,
       symbol$10,
       compare$2,
       equal$2,
       max$0,
       min$0];
   runtime.caml_register_global
    (2, Js_of_ocaml_lwt_Import, "Js_of_ocaml_lwt__Import");
   return;
  }
  (globalThis));

//# unitInfo: Provides: Js_of_ocaml_lwt__Lwt_xmlHttpRequest
//# unitInfo: Requires: Assert_failure, Js_of_ocaml__Dom, Js_of_ocaml__Dom_html, Js_of_ocaml__File, Js_of_ocaml__Form, Js_of_ocaml__Js, Js_of_ocaml__Url, Js_of_ocaml__XmlHttpRequest, Js_of_ocaml_lwt__Import, Lwt, Stdlib, Stdlib__List
(function
  (globalThis){
   "use strict";
   var
    runtime = globalThis.jsoo_runtime,
    cst$6 = "",
    cst$5 = "&",
    cst$7 = "=",
    cst_GET$1 = "GET",
    cst_POST$3 = "POST",
    cst_lib_lwt_lwt_xmlHttpRequest = "lib/lwt/lwt_xmlHttpRequest.ml",
    caml_jsstring_of_string = runtime.caml_jsstring_of_string,
    caml_maybe_attach_backtrace = runtime.caml_maybe_attach_backtrace,
    caml_string_of_jsstring = runtime.caml_string_of_jsstring,
    caml_wrap_exception = runtime.caml_wrap_exception;
   function caml_call1(f, a0){
    return (f.l >= 0 ? f.l : f.l = f.length) == 1
            ? f(a0)
            : runtime.caml_call_gen(f, [a0]);
   }
   function caml_call2(f, a0, a1){
    return (f.l >= 0 ? f.l : f.l = f.length) == 2
            ? f(a0, a1)
            : runtime.caml_call_gen(f, [a0, a1]);
   }
   function caml_call3(f, a0, a1, a2){
    return (f.l >= 0 ? f.l : f.l = f.length) == 3
            ? f(a0, a1, a2)
            : runtime.caml_call_gen(f, [a0, a1, a2]);
   }
   var
    global_data = runtime.caml_get_global_data(),
    c = "application/x-www-form-urlencoded",
    cst$3 = cst$5,
    cst$4 = "?",
    cst$2 = cst$6,
    cst = cst$7,
    cst$0 = cst$7,
    cst$1 = cst$5,
    Js_of_ocaml_Url = global_data.Js_of_ocaml__Url,
    Js_of_ocaml_Js = global_data.Js_of_ocaml__Js,
    Js_of_ocaml_Dom = global_data.Js_of_ocaml__Dom,
    Js_of_ocaml_Dom_html = global_data.Js_of_ocaml__Dom_html,
    Lwt = global_data.Lwt,
    Js_of_ocaml_Form = global_data.Js_of_ocaml__Form,
    Stdlib_List = global_data.Stdlib__List,
    Stdlib = global_data.Stdlib,
    Js_of_ocaml_XmlHttpRequest = global_data.Js_of_ocaml__XmlHttpRequest,
    Js_of_ocaml_lwt_Import = global_data.Js_of_ocaml_lwt__Import,
    Assert_failure = global_data.Assert_failure,
    Js_of_ocaml_File = global_data.Js_of_ocaml__File,
    Wrong_headers =
      [248,
       "Js_of_ocaml_lwt__Lwt_xmlHttpRequest.Wrong_headers",
       runtime.caml_fresh_oo_id(0)],
    cst_PATCH = "PATCH",
    cst_POST = cst_POST$3,
    cst_HEAD = "HEAD",
    cst_DELETE = "DELETE",
    cst_PUT = "PUT",
    cst_OPTIONS = "OPTIONS",
    cst_GET = cst_GET$1,
    cst_POST$2 = cst_POST$3,
    cst_POST$0 = cst_POST$3,
    cst_POST$1 = cst_POST$3,
    cst_GET$0 = cst_GET$1,
    _e_ = [0, cst_lib_lwt_lwt_xmlHttpRequest, 98, 29],
    _d_ = [0, cst_lib_lwt_lwt_xmlHttpRequest, 90, 29],
    _c_ = [0, cst_lib_lwt_lwt_xmlHttpRequest, 82, 29],
    _b_ = [0, cst_lib_lwt_lwt_xmlHttpRequest, 74, 29],
    _a_ = [0, cst_lib_lwt_lwt_xmlHttpRequest, 66, 29];
   function perform_raw
   (opt,
    content_type,
    _j_,
    _i_,
    progress,
    upload_progress,
    contents,
    override_mime_type,
    override_method,
    with_credentials,
    response_type){
    if(opt) var sth = opt[1], headers = sth; else var headers = 0;
    if(_j_) var sth$0 = _j_[1], get_args = sth$0; else var get_args = 0;
    if(_i_)
     var sth$1 = _i_[1], check_headers = sth$1;
    else
     var check_headers = function(param, ___){return 1;};
    return function(url){
     if(contents){
      var c$0 = contents[1], _o_ = c$0[1];
      if(440620227 === _o_){
       var
        args = c$0[2],
        _p_ =
          function(x){
           var _Z_ = x[2];
           if(typeof _Z_ !== "number" && -976970511 === _Z_[1]) return 1;
           return 0;
          },
        only_strings = caml_call2(Stdlib_List[32], _p_, args),
        form_contents =
          only_strings
           ? [0, 891486873, [0, 0]]
           : caml_call1(Js_of_ocaml_Form[6], 0),
        _q_ =
          function(param){
           var value = param[2], name = param[1];
           return caml_call2
                   (Js_of_ocaml_Form[3], form_contents, [0, name, value]);
          };
       caml_call2(Stdlib_List[17], _q_, args);
       var _r_ = [0, -836918635, form_contents];
      }
      else if(737307005 <= _o_)
       var b = c$0[2], _r_ = [0, 737307005, b];
      else
       var _r_ = c$0;
      var contents$0 = [0, _r_];
     }
     else
      var contents$0 = 0;
     function override_method$0(m){
      if(! override_method) return m;
      var v = override_method[1];
      return 492530731 <= v
              ? 891112544
                <= v
                ? 994393768 <= v ? cst_PATCH : cst_POST
                : 801894688 <= v ? cst_HEAD : cst_DELETE
              : 3546230 === v ? cst_GET : 3997359 <= v ? cst_PUT : cst_OPTIONS;
     }
     if(contents$0){
      var match = contents$0[1];
      if(-836918635 === match[1]){
       var form = match[2];
       if(891486873 <= form[1])
        var
         content_type$0 = content_type || [0, c],
         content_type$1 = content_type$0,
         method = override_method$0(cst_POST$0);
       else
        var
         content_type$1 = content_type,
         method = override_method$0(cst_POST$1);
      }
      else
       var
        content_type$1 = content_type,
        method = override_method$0(cst_POST$2);
     }
     else
      var
       method$0 = override_method$0(cst_GET$0),
       content_type$1 = content_type,
       method = method$0;
     if(0 === get_args)
      var url$0 = url;
     else{
      var _y_ = caml_call1(Js_of_ocaml_Url[6], get_args);
      try{
       caml_call2(Js_of_ocaml_lwt_Import[3][34], url, 63);
       var _n_ = 1, _z_ = _n_;
      }
      catch(_Y_){
       var _m_ = caml_wrap_exception(_Y_);
       if(_m_ !== Stdlib[8]) throw caml_maybe_attach_backtrace(_m_, 0);
       var _z_ = 0;
      }
      var
       _A_ = _z_ ? cst$3 : cst$4,
       _B_ = caml_call2(Stdlib[28], _A_, _y_),
       url$0 = caml_call2(Stdlib[28], url, _B_);
     }
     var
      match$0 = caml_call1(Lwt[22], 0),
      w = match$0[2],
      res = match$0[1],
      req = caml_call1(Js_of_ocaml_XmlHttpRequest[1], 0);
     req.open
      (caml_jsstring_of_string(method),
       caml_jsstring_of_string(url$0),
       Js_of_ocaml_Js[7]);
     if(override_mime_type){
      var mime_type = override_mime_type[1];
      req.overrideMimeType(caml_jsstring_of_string(mime_type));
     }
     switch(response_type){
       case 0:
        req.responseType = "arraybuffer"; break;
       case 1:
        req.responseType = "blob"; break;
       case 2:
        req.responseType = "document"; break;
       case 3:
        req.responseType = "json"; break;
       case 4:
        req.responseType = "text"; break;
       default: req.responseType = cst$6;
     }
     if(with_credentials){
      var c$1 = with_credentials[1], t27 = ! ! c$1;
      req.withCredentials = t27;
     }
     if(content_type$1){
      var content_type$2 = content_type$1[1];
      req.setRequestHeader
       ("Content-type", caml_jsstring_of_string(content_type$2));
     }
     function _s_(param){
      var v = param[2], n = param[1];
      return req.setRequestHeader
              (caml_jsstring_of_string(n), caml_jsstring_of_string(v));
     }
     caml_call2(Stdlib_List[17], _s_, headers);
     function headers$0(s){
      function _V_(v){return [0, caml_string_of_jsstring(v)];}
      function _W_(param){return 0;}
      var _X_ = req.getResponseHeader(runtime.caml_jsbytes_of_string(s));
      return caml_call3(Js_of_ocaml_Js[5][7], _X_, _W_, _V_);
     }
     var st = [0, 382334108];
     function do_check_headers(param){
      if(382334108 === st[1])
       if(caml_call2(check_headers, req.status, headers$0))
        st[1] = 583419792;
       else{
        caml_call2(Lwt[53], w, [0, Wrong_headers, [0, req.status, headers$0]]);
        st[1] = 479410653;
        req.abort();
       }
      return 479410653 !== st[1] ? 1 : 0;
     }
     var
      t47 =
        runtime.caml_js_wrap_callback
         (function(param){
           switch(req.readyState){
             case 2:
              if(! Js_of_ocaml_Dom_html[123]){do_check_headers(0); return 0;}
              break;
             case 3:
              if(Js_of_ocaml_Dom_html[123]){do_check_headers(0); return 0;}
              break;
             case 4:
              var _T_ = do_check_headers(0);
              if(! _T_) return _T_;
              switch(response_type){
                case 0:
                 var
                  code = req.status,
                  _S_ =
                    function(param){
                     throw caml_maybe_attach_backtrace
                            ([0, Assert_failure, _e_], 1);
                    },
                  response =
                    [0,
                     url$0,
                     code,
                     headers$0,
                     caml_call1(Js_of_ocaml_File[3][5], req.response),
                     _S_];
                 break;
                case 1:
                 var
                  code$0 = req.status,
                  _R_ =
                    function(param){
                     throw caml_maybe_attach_backtrace
                            ([0, Assert_failure, _d_], 1);
                    },
                  response =
                    [0,
                     url$0,
                     code$0,
                     headers$0,
                     caml_call1(Js_of_ocaml_File[3][2], req.response),
                     _R_];
                 break;
                case 2:
                 var
                  code$1 = req.status,
                  _P_ =
                    function(param){
                     throw caml_maybe_attach_backtrace
                            ([0, Assert_failure, _b_], 1);
                    },
                  response =
                    [0,
                     url$0,
                     code$1,
                     headers$0,
                     caml_call1(Js_of_ocaml_File[3][1], req.response),
                     _P_];
                 break;
                case 3:
                 var
                  code$2 = req.status,
                  _Q_ =
                    function(param){
                     throw caml_maybe_attach_backtrace
                            ([0, Assert_failure, _c_], 1);
                    },
                  response =
                    [0,
                     url$0,
                     code$2,
                     headers$0,
                     caml_call1(Js_of_ocaml_File[3][3], req.response),
                     _Q_];
                 break;
                case 4:
                 var
                  code$3 = req.status,
                  _M_ =
                    function(param){
                     throw caml_maybe_attach_backtrace
                            ([0, Assert_failure, _a_], 1);
                    },
                  _N_ = function(x){return x;},
                  _O_ = function(param){return cst$6;},
                  response =
                    [0,
                     url$0,
                     code$3,
                     headers$0,
                     caml_call3(Js_of_ocaml_Js[5][7], req.responseText, _O_, _N_),
                     _M_];
                 break;
                default:
                 var
                  code$4 = req.status,
                  _J_ =
                    function(param){
                     var
                      match = caml_call1(Js_of_ocaml_Js[5][10], req.responseXML);
                     if(! match) return 0;
                     var doc = match[1], _U_ = Js_of_ocaml_Js[1];
                     return caml_call1(Js_of_ocaml_Js[2], doc.documentElement)
                             === _U_
                             ? 0
                             : [0, doc];
                    },
                  _K_ = caml_string_of_jsstring,
                  _L_ = function(param){return cst$2;},
                  response =
                    [0,
                     url$0,
                     code$4,
                     headers$0,
                     caml_call3(Js_of_ocaml_Js[5][7], req.responseText, _L_, _K_),
                     _J_];
              }
              return caml_call2(Lwt[52], w, response);
           }
           return 0;
          });
     req.onreadystatechange = t47;
     if(progress){
      var
       progress$0 = progress[1],
       _t_ =
         function(t50){
          caml_call2(progress$0, t50.loaded, t50.total);
          return Js_of_ocaml_Js[7];
         },
       t51 = caml_call1(Js_of_ocaml_Dom[10], _t_);
      req.onprogress = t51;
     }
     function _u_(upload){
      if(! upload_progress) return 0;
      var upload_progress$0 = upload_progress[1];
      function _I_(t55){
       caml_call2(upload_progress$0, t55.loaded, t55.total);
       return Js_of_ocaml_Js[7];
      }
      var t56 = caml_call1(Js_of_ocaml_Dom[10], _I_);
      return upload.onprogress = t56;
     }
     caml_call2(Js_of_ocaml_Js[6][6], req.upload, _u_);
     if(contents$0){
      var match$1 = contents$0[1], _v_ = match$1[1];
      if(-836918635 === _v_){
       var match$2 = match$1[2];
       if(891486873 <= match$2[1]){
        var
         l = match$2[2],
         l$0 = l[1],
         _k_ =
           function(param){
            var match = param[2], name = param[1];
            if(781515420 <= match[1]){
             var
              t0 = match[2],
              _C_ =
                caml_call2
                 (Js_of_ocaml_Url[2], 0, caml_string_of_jsstring(t0.name)),
              _D_ = caml_call2(Stdlib[28], cst, _C_),
              _E_ = caml_call2(Js_of_ocaml_Url[2], 0, name);
             return caml_call2(Stdlib[28], _E_, _D_);
            }
            var
             s = match[2],
             _F_ =
               caml_call2(Js_of_ocaml_Url[2], 0, caml_string_of_jsstring(s)),
             _G_ = caml_call2(Stdlib[28], cst$0, _F_),
             _H_ = caml_call2(Js_of_ocaml_Url[2], 0, name);
            return caml_call2(Stdlib[28], _H_, _G_);
           },
         _l_ = caml_call2(Stdlib_List[19], _k_, l$0),
         _w_ =
           caml_jsstring_of_string
            (caml_call2(Js_of_ocaml_lwt_Import[3][6], cst$1, _l_));
        req.send(caml_call1(Js_of_ocaml_Js[2], _w_));
       }
       else{var f = match$2[2]; req.send(f);}
      }
      else if(737307005 <= _v_){
       var b$0 = match$1[2];
       req.send(b$0);
      }
      else{
       var s = match$1[2];
       req.send(caml_call1(Js_of_ocaml_Js[2], caml_jsstring_of_string(s)));
      }
     }
     else
      req.send(Js_of_ocaml_Js[1]);
     function _x_(param){return req.abort();}
     caml_call2(Lwt[24], res, _x_);
     return res;};
   }
   function perform_raw_url
   (opt,
    content_type,
    _h_,
    check_headers,
    progress,
    upload_progress,
    contents,
    override_mime_type,
    override_method,
    with_credentials,
    url){
    if(opt) var sth = opt[1], headers = sth; else var headers = 0;
    if(_h_) var sth$0 = _h_[1], get_args = sth$0; else var get_args = 0;
    return perform_raw
             ([0, headers],
              content_type,
              [0, get_args],
              check_headers,
              progress,
              upload_progress,
              contents,
              override_mime_type,
              override_method,
              with_credentials,
              5)
            (url);
   }
   function perform
   (opt,
    content_type,
    _f_,
    check_headers,
    progress,
    upload_progress,
    contents,
    override_mime_type,
    override_method,
    with_credentials,
    url){
    if(opt) var sth = opt[1], headers = sth; else var headers = 0;
    if(_f_) var sth$0 = _f_[1], get_args = sth$0; else var get_args = 0;
    var _g_ = caml_call1(Js_of_ocaml_Url[9], url);
    return perform_raw
             ([0, headers],
              content_type,
              [0, get_args],
              check_headers,
              progress,
              upload_progress,
              contents,
              override_mime_type,
              override_method,
              with_credentials,
              5)
            (_g_);
   }
   function get(s){return perform_raw_url(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, s);}
   var
    Js_of_ocaml_lwt_Lwt_xmlHttpReq =
      [0, Wrong_headers, perform_raw, perform_raw_url, perform, get];
   runtime.caml_register_global
    (89,
     Js_of_ocaml_lwt_Lwt_xmlHttpReq,
     "Js_of_ocaml_lwt__Lwt_xmlHttpRequest");
   return;
  }
  (globalThis));

//# unitInfo: Provides: Js_of_ocaml_lwt__Lwt_js
//# unitInfo: Requires: Js_of_ocaml__Dom_html, Js_of_ocaml__Firebug, Js_of_ocaml__Js, Lwt, Stdlib, Stdlib__Printexc
(function
  (globalThis){
   "use strict";
   var runtime = globalThis.jsoo_runtime;
   function caml_call1(f, a0){
    return (f.l >= 0 ? f.l : f.l = f.length) == 1
            ? f(a0)
            : runtime.caml_call_gen(f, [a0]);
   }
   function caml_call2(f, a0, a1){
    return (f.l >= 0 ? f.l : f.l = f.length) == 2
            ? f(a0, a1)
            : runtime.caml_call_gen(f, [a0, a1]);
   }
   var
    undef = undefined,
    global_data = runtime.caml_get_global_data(),
    Stdlib_Printexc = global_data.Stdlib__Printexc,
    Stdlib = global_data.Stdlib,
    Js_of_ocaml_Firebug = global_data.Js_of_ocaml__Firebug,
    Lwt = global_data.Lwt,
    Js_of_ocaml_Dom_html = global_data.Js_of_ocaml__Dom_html,
    cst_Exception_during_Lwt_async = "Exception during Lwt.async: ";
   function sleep(d){
    var
     match = caml_call1(Lwt[22], 0),
     w = match[2],
     t = match[1],
     _b_ = caml_call1(Lwt[52], w),
     id = caml_call2(Js_of_ocaml_Dom_html[118], _b_, d * 1000.);
    function _c_(param){return caml_call1(Js_of_ocaml_Dom_html[119], id);}
    caml_call2(Lwt[24], t, _c_);
    return t;
   }
   function yield$0(param){return sleep(0.);}
   function wakeup(param){
    return 1 === param
            ? (Js_of_ocaml_Dom_html
                [8].setTimeout
               (runtime.caml_js_wrap_callback(Lwt[58]), 0.),
              0)
            : 0;
   }
   caml_call1(Lwt[60], wakeup);
   function prerr_string(s){
    Js_of_ocaml_Firebug[1].log(runtime.caml_jsstring_of_string(s));
    return;
   }
   function _a_(exn){
    prerr_string(cst_Exception_during_Lwt_async);
    prerr_string(caml_call1(Stdlib_Printexc[1], exn));
    return caml_call1(Stdlib_Printexc[5], Stdlib[40]);
   }
   Lwt[12][1] = _a_;
   var Js_of_ocaml_lwt_Lwt_js = [0, sleep, yield$0];
   runtime.caml_register_global
    (11, Js_of_ocaml_lwt_Lwt_js, "Js_of_ocaml_lwt__Lwt_js");
   return;
  }
  (globalThis));

//# unitInfo: Provides: Js_of_ocaml_lwt__Lwt_jsonp
//# unitInfo: Requires: Js_of_ocaml__Dom, Js_of_ocaml__Dom_html, Js_of_ocaml__Firebug, Js_of_ocaml__Js, Js_of_ocaml__Url, Js_of_ocaml_lwt__Import, Js_of_ocaml_lwt__Lwt_js, Lwt, Stdlib, Stdlib__Buffer, Stdlib__List, Stdlib__Random
(function
  (globalThis){
   "use strict";
   var
    runtime = globalThis.jsoo_runtime,
    cst$1 = "",
    caml_jsstring_of_string = runtime.caml_jsstring_of_string;
   function caml_call1(f, a0){
    return (f.l >= 0 ? f.l : f.l = f.length) == 1
            ? f(a0)
            : runtime.caml_call_gen(f, [a0]);
   }
   function caml_call2(f, a0, a1){
    return (f.l >= 0 ? f.l : f.l = f.length) == 2
            ? f(a0, a1)
            : runtime.caml_call_gen(f, [a0, a1]);
   }
   var
    global_data = runtime.caml_get_global_data(),
    cst$0 = cst$1,
    cst = cst$1,
    Stdlib_Buffer = global_data.Stdlib__Buffer,
    Stdlib_Random = global_data.Stdlib__Random,
    Js_of_ocaml_lwt_Import = global_data.Js_of_ocaml_lwt__Import,
    Js_of_ocaml_Dom_html = global_data.Js_of_ocaml__Dom_html,
    Js_of_ocaml_Js = global_data.Js_of_ocaml__Js,
    Js_of_ocaml_Url = global_data.Js_of_ocaml__Url,
    Stdlib = global_data.Stdlib,
    Stdlib_List = global_data.Stdlib__List,
    Lwt = global_data.Lwt,
    Js_of_ocaml_lwt_Lwt_js = global_data.Js_of_ocaml_lwt__Lwt_js,
    Js_of_ocaml_Dom = global_data.Js_of_ocaml__Dom,
    Js_of_ocaml_Firebug = global_data.Js_of_ocaml__Firebug,
    cst_Jsonp_call_Cannot_parse_ur = "Jsonp.call: Cannot parse url",
    cst_callback = "callback";
   function call_custom_url(timeout, opt, make_uri){
    if(opt) var sth = opt[1], prefix = sth; else var prefix = cst;
    var
     match = caml_call1(Lwt[22], 0),
     w = match[2],
     t = match[1],
     user_cb = caml_call1(Lwt[52], w);
    function error_cb(param){return caml_call1(Lwt[23], t);}
    var size = 10;
    for(;;){
     var b = caml_call1(Stdlib_Buffer[1], size), i = 0;
     for(;;){
      var
       _j_ = 97 + caml_call1(Stdlib_Random[5], 26) | 0,
       _k_ = caml_call1(Js_of_ocaml_lwt_Import[4][1], _j_);
      caml_call2(Stdlib_Buffer[12], b, _k_);
      var _l_ = i + 1 | 0;
      if(9 === i) break;
      var i = _l_;
     }
     var
      s = caml_call1(Stdlib_Buffer[2], b),
      _i_ = Js_of_ocaml_Dom_html[8][caml_jsstring_of_string(s)];
     if(! caml_call1(Js_of_ocaml_Js[6][5], _i_)) break;
    }
    var
     name = caml_call2(Stdlib[28], prefix, s),
     uri = caml_call1(make_uri, name),
     script = caml_call1(Js_of_ocaml_Dom_html[72], Js_of_ocaml_Dom_html[2]);
    function finalize(param){
     delete Js_of_ocaml_Dom_html[8][caml_jsstring_of_string(name)];
     function _s_(parent){
      return caml_call2(Js_of_ocaml_Dom[4], parent, script);
     }
     return caml_call2(Js_of_ocaml_Js[5][6], script.parentNode, _s_);
    }
    var
     executed = [0, 0],
     _m_ =
       runtime.caml_js_wrap_callback
        (function(x){
          executed[1] = 1;
          finalize(0);
          return caml_call1(user_cb, x);
         });
    Js_of_ocaml_Dom_html[8][caml_jsstring_of_string(name)] = _m_;
    var t1 = caml_jsstring_of_string(uri);
    script.src = t1;
    script.type = "text/javascript";
    var t5 = Js_of_ocaml_Js[7];
    script.async = t5;
    function t7(x){finalize(0); return error_cb(x);}
    script.onerror = t7;
    function t11(x){
     function _p_(param){
      function _q_(param){
       return executed[1]
               ? Lwt[36]
               : (Js_of_ocaml_Firebug
                   [1].warn
                  ("Jsonp: script loaded but callback not executed"),
                 finalize(0),
                 error_cb(x),
                 Lwt[36]);
      }
      var _r_ = caml_call1(Js_of_ocaml_lwt_Lwt_js[1], 1.);
      return caml_call2(Lwt[6], _r_, _q_);
     }
     return caml_call1(Lwt[11], _p_);
    }
    script.onload = t11;
    caml_call2(Lwt[24], t, finalize);
    if(timeout)
     var
      delay = timeout[1],
      _n_ = function(param){caml_call1(Lwt[23], t); return t;},
      _o_ = caml_call1(Js_of_ocaml_lwt_Lwt_js[1], delay),
      wait = caml_call2(Lwt[6], _o_, _n_),
      new_t = caml_call1(Lwt[17], [0, wait, [0, t, 0]]);
    else
     var new_t = t;
    var t13 = Js_of_ocaml_Dom_html[2];
    caml_call2(Js_of_ocaml_Dom[5], t13.body, script);
    return new_t;
   }
   function add_param(name, value, l){
    function _h_(param){
     var x = param[1];
     return 1 - caml_call2(Js_of_ocaml_lwt_Import[3][68], x, name);
    }
    var l$0 = caml_call2(Stdlib_List[41], _h_, l);
    return [0, [0, name, value], l$0];
   }
   function call(timeout, opt, _a_, url){
    if(opt) var sth = opt[1], param = sth; else var param = cst_callback;
    if(_a_) var sth$0 = _a_[1], prefix = sth$0; else var prefix = cst$0;
    function make_uri(cbname){
     var match = caml_call1(Js_of_ocaml_Url[8], url);
     if(! match) return caml_call1(Stdlib[2], cst_Jsonp_call_Cannot_parse_ur);
     var url$0 = match[1];
     switch(url$0[0]){
       case 0:
        var
         http = url$0[1],
         _b_ = http[6],
         _c_ = add_param(param, cbname, http[5]),
         new_url = [0, [0, http[1], http[2], http[3], http[4], _c_, _b_]];
        break;
       case 1:
        var
         http$0 = url$0[1],
         _d_ = http$0[6],
         _e_ = add_param(param, cbname, http$0[5]),
         new_url =
           [1, [0, http$0[1], http$0[2], http$0[3], http$0[4], _e_, _d_]];
        break;
       default:
        var
         file = url$0[1],
         _f_ = file[4],
         _g_ = add_param(param, cbname, file[3]),
         new_url = [2, [0, file[1], file[2], _g_, _f_]];
     }
     return caml_call1(Js_of_ocaml_Url[9], new_url);
    }
    return call_custom_url(timeout, [0, prefix], make_uri);
   }
   var Js_of_ocaml_lwt_Lwt_jsonp = [0, call, call_custom_url];
   runtime.caml_register_global
    (27, Js_of_ocaml_lwt_Lwt_jsonp, "Js_of_ocaml_lwt__Lwt_jsonp");
   return;
  }
  (globalThis));

//# unitInfo: Provides: Js_of_ocaml_lwt__Lwt_js_events
//# unitInfo: Requires: Js_of_ocaml__Dom, Js_of_ocaml__Dom_html, Js_of_ocaml__Firebug, Js_of_ocaml__Js, Js_of_ocaml_lwt__Import, Js_of_ocaml_lwt__Lwt_js, Lwt, Lwt_condition, Stdlib, Stdlib__Printexc
(function
  (globalThis){
   "use strict";
   var
    runtime = globalThis.jsoo_runtime,
    cst_Lwt_js_event$2 = "Lwt_js_event",
    cst_complete = "complete",
    caml_js_from_bool = runtime.caml_js_from_bool;
   function caml_call1(f, a0){
    return (f.l >= 0 ? f.l : f.l = f.length) == 1
            ? f(a0)
            : runtime.caml_call_gen(f, [a0]);
   }
   function caml_call2(f, a0, a1){
    return (f.l >= 0 ? f.l : f.l = f.length) == 2
            ? f(a0, a1)
            : runtime.caml_call_gen(f, [a0, a1]);
   }
   function caml_call3(f, a0, a1, a2){
    return (f.l >= 0 ? f.l : f.l = f.length) == 3
            ? f(a0, a1, a2)
            : runtime.caml_call_gen(f, [a0, a1, a2]);
   }
   function caml_call5(f, a0, a1, a2, a3, a4){
    return (f.l >= 0 ? f.l : f.l = f.length) == 5
            ? f(a0, a1, a2, a3, a4)
            : runtime.caml_call_gen(f, [a0, a1, a2, a3, a4]);
   }
   function caml_call6(f, a0, a1, a2, a3, a4, a5){
    return (f.l >= 0 ? f.l : f.l = f.length) == 6
            ? f(a0, a1, a2, a3, a4, a5)
            : runtime.caml_call_gen(f, [a0, a1, a2, a3, a4, a5]);
   }
   var
    global_data = runtime.caml_get_global_data(),
    Lwt = global_data.Lwt,
    Js_of_ocaml_Dom_html = global_data.Js_of_ocaml__Dom_html,
    Js_of_ocaml_Dom = global_data.Js_of_ocaml__Dom,
    Js_of_ocaml_Firebug = global_data.Js_of_ocaml__Firebug,
    Js_of_ocaml_Js = global_data.Js_of_ocaml__Js,
    Js_of_ocaml_lwt_Lwt_js = global_data.Js_of_ocaml_lwt__Lwt_js,
    Js_of_ocaml_lwt_Import = global_data.Js_of_ocaml_lwt__Import,
    Lwt_condition = global_data.Lwt_condition,
    Stdlib = global_data.Stdlib,
    Stdlib_Printexc = global_data.Stdlib__Printexc,
    symbol_bind = Lwt[6],
    cst_readystatechange = "readystatechange",
    cst_Lwt_js_event$1 = cst_Lwt_js_event$2,
    cst_Lwt_js_event$0 = cst_Lwt_js_event$2,
    cst_Lwt_js_event = cst_Lwt_js_event$2;
   function async(f){
    function _bW_(param){
     return caml_call2
             (symbol_bind, caml_call1(Js_of_ocaml_lwt_Lwt_js[2], 0), f);
    }
    return caml_call1(Lwt[11], _bW_);
   }
   function opt_map(f, param){
    if(! param) return 0;
    var x = param[1];
    return [0, caml_call1(f, x)];
   }
   function make_event(event_kind, use_capture, passive, target){
    var
     el = [0, Js_of_ocaml_Js[1]],
     match = caml_call1(Lwt[22], 0),
     w = match[2],
     t = match[1];
    function cancel(param){
     return caml_call2(Js_of_ocaml_Js[5][6], el[1], Js_of_ocaml_Dom_html[18]);
    }
    caml_call2(Lwt[24], t, cancel);
    function _bR_(ev){cancel(0); caml_call2(Lwt[52], w, ev); return ! ! 1;}
    var
     _bS_ = caml_call1(Js_of_ocaml_Dom_html[10], _bR_),
     _bT_ = opt_map(caml_js_from_bool, passive),
     _bU_ = opt_map(caml_js_from_bool, use_capture),
     _bV_ =
       caml_call6
        (Js_of_ocaml_Dom[15], target, event_kind, _bU_, 0, _bT_, _bS_);
    el[1] = caml_call1(Js_of_ocaml_Js[2], _bV_);
    return t;
   }
   function catch_cancel(f, x){
    function _bP_(e){
     return e === Lwt[21] ? caml_call1(Lwt[4], 0) : caml_call1(Lwt[5], e);
    }
    function _bQ_(param){return caml_call1(f, x);}
    return caml_call2(Lwt[7], _bQ_, _bP_);
   }
   function with_error_log(f, x){
    function _bM_(e){
     var
      _bO_ =
        runtime.caml_jsstring_of_string(caml_call1(Stdlib_Printexc[1], e));
     Js_of_ocaml_Firebug[1].log(_bO_);
     return caml_call1(Lwt[4], 0);
    }
    function _bN_(param){return caml_call1(f, x);}
    return caml_call2(Lwt[7], _bN_, _bM_);
   }
   function seq_loop(evh, opt, use_capture, passive, target, handler){
    if(opt)
     var sth = opt[1], cancel_handler = sth;
    else
     var cancel_handler = 0;
    var
     cancelled = [0, 0],
     cur = [0, caml_call1(Lwt[5], [0, Stdlib[7], cst_Lwt_js_event])],
     cur_handler = [0, caml_call1(Lwt[4], 0)],
     lt = caml_call1(Lwt[22], 0)[1];
    function _bJ_(param){
     caml_call1(Lwt[23], cur[1]);
     if(cancel_handler) caml_call1(Lwt[23], cur_handler[1]);
     cancelled[1] = 1;
     return 0;
    }
    caml_call2(Lwt[24], lt, _bJ_);
    function aux(param){
     if(cancelled[1]) return caml_call1(Lwt[4], 0);
     var t = caml_call3(evh, use_capture, passive, target);
     cur[1] = t;
     return caml_call2
             (symbol_bind,
              t,
              function(e){
               cur_handler[1] = with_error_log(caml_call1(handler, e), lt);
               return caml_call2(symbol_bind, cur_handler[1], aux);
              });
    }
    function _bK_(_bL_){return catch_cancel(aux, _bL_);}
    caml_call1(Lwt[11], _bK_);
    return lt;
   }
   function async_loop(evh, use_capture, passive, target, handler){
    var
     cancelled = [0, 0],
     cur = [0, caml_call1(Lwt[5], [0, Stdlib[7], cst_Lwt_js_event$0])],
     lt = caml_call1(Lwt[22], 0)[1];
    function _bF_(param){
     caml_call1(Lwt[23], cur[1]);
     cancelled[1] = 1;
     return 0;
    }
    caml_call2(Lwt[24], lt, _bF_);
    function aux(param){
     if(cancelled[1]) return caml_call1(Lwt[4], 0);
     var t = caml_call3(evh, use_capture, passive, target);
     cur[1] = t;
     return caml_call2
             (symbol_bind,
              t,
              function(e){
               function _bI_(param){
                return with_error_log(caml_call1(handler, e), lt);
               }
               caml_call1(Lwt[11], _bI_);
               return aux(0);
              });
    }
    function _bG_(_bH_){return catch_cancel(aux, _bH_);}
    caml_call1(Lwt[11], _bG_);
    return lt;
   }
   function buffered_loop
   (evh, opt, _bB_, use_capture, passive, target, handler){
    if(opt)
     var sth = opt[1], cancel_handler = sth;
    else
     var cancel_handler = 0;
    if(_bB_)
     var sth$0 = _bB_[1], cancel_queue = sth$0;
    else
     var cancel_queue = 1;
    var
     cancelled = [0, 0],
     queue = [0, 0],
     cur = [0, caml_call1(Lwt[5], [0, Stdlib[7], cst_Lwt_js_event$1])],
     cur_handler = [0, caml_call1(Lwt[4], 0)],
     lt = caml_call1(Lwt[22], 0)[1],
     spawn = caml_call1(Lwt_condition[1], 0);
    function _bC_(param){
     caml_call1(Lwt[23], cur[1]);
     if(cancel_handler) caml_call1(Lwt[23], cur_handler[1]);
     if(cancel_queue) queue[1] = 0;
     cancelled[1] = 1;
     return 0;
    }
    caml_call2(Lwt[24], lt, _bC_);
    function spawner(param){
     if(cancelled[1]) return caml_call1(Lwt[4], 0);
     var t = caml_call3(evh, use_capture, passive, target);
     cur[1] = t;
     return caml_call2
             (symbol_bind,
              t,
              function(e){
               queue[1] = [0, e, queue[1]];
               caml_call2(Lwt_condition[3], spawn, 0);
               return spawner(0);
              });
    }
    function runner(param){
     cur_handler[1] = caml_call1(Lwt[4], 0);
     if(cancelled[1]) return caml_call1(Lwt[4], 0);
     var match = queue[1];
     if(! match)
      return caml_call2
              (symbol_bind, caml_call2(Lwt_condition[2], 0, spawn), runner);
     var tl = match[2], e = match[1];
     queue[1] = tl;
     cur_handler[1] = with_error_log(caml_call1(handler, e), lt);
     return caml_call2(symbol_bind, cur_handler[1], runner);
    }
    function _bD_(_bE_){return catch_cancel(spawner, _bE_);}
    caml_call1(Lwt[11], _bD_);
    caml_call1(Lwt[11], runner);
    return lt;
   }
   function func_limited_loop
   (event, limited_func, use_capture, passive, target, handler){
    var count = [0, 0];
    return async_loop
            (event,
             use_capture,
             passive,
             target,
             function(ev, lt){
              count[1]++;
              var nb = count[1];
              function _bA_(param){
               return caml_call2(Js_of_ocaml_lwt_Import[8], count[1], nb)
                       ? caml_call2(handler, ev, lt)
                       : caml_call1(Lwt[4], 0);
              }
              return caml_call2
                      (symbol_bind, caml_call1(limited_func, 0), _bA_);
             });
   }
   function limited_loop(event, opt){
    if(opt) var sth = opt[1], elapsed_time = sth; else var elapsed_time = 0.1;
    function _bv_(param){
     return caml_call1(Js_of_ocaml_lwt_Lwt_js[1], elapsed_time);
    }
    return function(_bw_, _bx_, _by_, _bz_){
     return func_limited_loop(event, _bv_, _bw_, _bx_, _by_, _bz_);};
   }
   function click(use_capture, passive, target){
    return make_event
            (Js_of_ocaml_Dom_html[15][1], use_capture, passive, target);
   }
   function copy(use_capture, passive, target){
    return make_event
            (Js_of_ocaml_Dom_html[15][2], use_capture, passive, target);
   }
   function cut(use_capture, passive, target){
    return make_event
            (Js_of_ocaml_Dom_html[15][3], use_capture, passive, target);
   }
   function paste(use_capture, passive, target){
    return make_event
            (Js_of_ocaml_Dom_html[15][4], use_capture, passive, target);
   }
   function dblclick(use_capture, passive, target){
    return make_event
            (Js_of_ocaml_Dom_html[15][5], use_capture, passive, target);
   }
   function mousedown(use_capture, passive, target){
    return make_event
            (Js_of_ocaml_Dom_html[15][6], use_capture, passive, target);
   }
   function mouseup(use_capture, passive, target){
    return make_event
            (Js_of_ocaml_Dom_html[15][7], use_capture, passive, target);
   }
   function mouseover(use_capture, passive, target){
    return make_event
            (Js_of_ocaml_Dom_html[15][8], use_capture, passive, target);
   }
   function mousemove(use_capture, passive, target){
    return make_event
            (Js_of_ocaml_Dom_html[15][9], use_capture, passive, target);
   }
   function mouseout(use_capture, passive, target){
    return make_event
            (Js_of_ocaml_Dom_html[15][10], use_capture, passive, target);
   }
   function keypress(use_capture, passive, target){
    return make_event
            (Js_of_ocaml_Dom_html[15][11], use_capture, passive, target);
   }
   function keydown(use_capture, passive, target){
    return make_event
            (Js_of_ocaml_Dom_html[15][12], use_capture, passive, target);
   }
   function keyup(use_capture, passive, target){
    return make_event
            (Js_of_ocaml_Dom_html[15][13], use_capture, passive, target);
   }
   function change(use_capture, passive, target){
    return make_event
            (Js_of_ocaml_Dom_html[15][29], use_capture, passive, target);
   }
   function input(use_capture, passive, target){
    return make_event
            (Js_of_ocaml_Dom_html[15][30], use_capture, passive, target);
   }
   function timeupdate(use_capture, passive, target){
    return make_event
            (Js_of_ocaml_Dom_html[15][31], use_capture, passive, target);
   }
   function dragstart(use_capture, passive, target){
    return make_event
            (Js_of_ocaml_Dom_html[15][21], use_capture, passive, target);
   }
   function dragend(use_capture, passive, target){
    return make_event
            (Js_of_ocaml_Dom_html[15][22], use_capture, passive, target);
   }
   function dragenter(use_capture, passive, target){
    return make_event
            (Js_of_ocaml_Dom_html[15][23], use_capture, passive, target);
   }
   function dragover(use_capture, passive, target){
    return make_event
            (Js_of_ocaml_Dom_html[15][24], use_capture, passive, target);
   }
   function dragleave(use_capture, passive, target){
    return make_event
            (Js_of_ocaml_Dom_html[15][25], use_capture, passive, target);
   }
   function drag(use_capture, passive, target){
    return make_event
            (Js_of_ocaml_Dom_html[15][26], use_capture, passive, target);
   }
   function drop(use_capture, passive, target){
    return make_event
            (Js_of_ocaml_Dom_html[15][27], use_capture, passive, target);
   }
   function focus(use_capture, passive, target){
    return make_event
            (Js_of_ocaml_Dom_html[15][34], use_capture, passive, target);
   }
   function blur(use_capture, passive, target){
    return make_event
            (Js_of_ocaml_Dom_html[15][35], use_capture, passive, target);
   }
   function scroll(use_capture, passive, target){
    return make_event
            (Js_of_ocaml_Dom_html[15][33], use_capture, passive, target);
   }
   function submit(use_capture, passive, target){
    return make_event
            (Js_of_ocaml_Dom_html[15][32], use_capture, passive, target);
   }
   function select(use_capture, passive, target){
    return make_event
            (Js_of_ocaml_Dom_html[15][44], use_capture, passive, target);
   }
   function abort(use_capture, passive, target){
    return make_event
            (Js_of_ocaml_Dom_html[15][43], use_capture, passive, target);
   }
   function error(use_capture, passive, target){
    return make_event
            (Js_of_ocaml_Dom_html[15][42], use_capture, passive, target);
   }
   function load(use_capture, passive, target){
    return make_event
            (Js_of_ocaml_Dom_html[15][36], use_capture, passive, target);
   }
   function canplay(use_capture, passive, target){
    return make_event
            (Js_of_ocaml_Dom_html[15][63], use_capture, passive, target);
   }
   function canplaythrough(use_capture, passive, target){
    return make_event
            (Js_of_ocaml_Dom_html[15][64], use_capture, passive, target);
   }
   function durationchange(use_capture, passive, target){
    return make_event
            (Js_of_ocaml_Dom_html[15][65], use_capture, passive, target);
   }
   function emptied(use_capture, passive, target){
    return make_event
            (Js_of_ocaml_Dom_html[15][66], use_capture, passive, target);
   }
   function ended(use_capture, passive, target){
    return make_event
            (Js_of_ocaml_Dom_html[15][67], use_capture, passive, target);
   }
   function loadeddata(use_capture, passive, target){
    return make_event
            (Js_of_ocaml_Dom_html[15][69], use_capture, passive, target);
   }
   function loadedmetadata(use_capture, passive, target){
    return make_event
            (Js_of_ocaml_Dom_html[15][70], use_capture, passive, target);
   }
   function loadstart(use_capture, passive, target){
    return make_event
            (Js_of_ocaml_Dom_html[15][71], use_capture, passive, target);
   }
   function pause(use_capture, passive, target){
    return make_event
            (Js_of_ocaml_Dom_html[15][74], use_capture, passive, target);
   }
   function play(use_capture, passive, target){
    return make_event
            (Js_of_ocaml_Dom_html[15][75], use_capture, passive, target);
   }
   function playing(use_capture, passive, target){
    return make_event
            (Js_of_ocaml_Dom_html[15][76], use_capture, passive, target);
   }
   function ratechange(use_capture, passive, target){
    return make_event
            (Js_of_ocaml_Dom_html[15][85], use_capture, passive, target);
   }
   function seeked(use_capture, passive, target){
    return make_event
            (Js_of_ocaml_Dom_html[15][86], use_capture, passive, target);
   }
   function seeking(use_capture, passive, target){
    return make_event
            (Js_of_ocaml_Dom_html[15][87], use_capture, passive, target);
   }
   function stalled(use_capture, passive, target){
    return make_event
            (Js_of_ocaml_Dom_html[15][88], use_capture, passive, target);
   }
   function suspend(use_capture, passive, target){
    return make_event
            (Js_of_ocaml_Dom_html[15][89], use_capture, passive, target);
   }
   function volumechange(use_capture, passive, target){
    return make_event
            (Js_of_ocaml_Dom_html[15][90], use_capture, passive, target);
   }
   function waiting(use_capture, passive, target){
    return make_event
            (Js_of_ocaml_Dom_html[15][91], use_capture, passive, target);
   }
   function mousewheel(use_capture, passive, target){
    var
     el = [0, Js_of_ocaml_Js[1]],
     match = caml_call1(Lwt[22], 0),
     w = match[2],
     t = match[1];
    function cancel(param){
     return caml_call2(Js_of_ocaml_Js[5][6], el[1], Js_of_ocaml_Dom_html[18]);
    }
    caml_call2(Lwt[24], t, cancel);
    function _br_(ev, dx, dy){
     Js_of_ocaml_Firebug[1].log(ev);
     cancel(0);
     caml_call2(Lwt[52], w, [0, ev, [0, dx, dy]]);
     return ! ! 1;
    }
    var
     _bs_ = opt_map(caml_js_from_bool, passive),
     _bt_ = opt_map(caml_js_from_bool, use_capture),
     _bu_ = caml_call5(Js_of_ocaml_Dom_html[19], target, _bt_, 0, _bs_, _br_);
    el[1] = caml_call1(Js_of_ocaml_Js[2], _bu_);
    return t;
   }
   function wheel(use_capture, passive, target){
    return make_event
            (Js_of_ocaml_Dom_html[15][16], use_capture, passive, target);
   }
   function touchstart(use_capture, passive, target){
    return make_event
            (Js_of_ocaml_Dom_html[15][17], use_capture, passive, target);
   }
   function touchmove(use_capture, passive, target){
    return make_event
            (Js_of_ocaml_Dom_html[15][18], use_capture, passive, target);
   }
   function touchend(use_capture, passive, target){
    return make_event
            (Js_of_ocaml_Dom_html[15][19], use_capture, passive, target);
   }
   function touchcancel(use_capture, passive, target){
    return make_event
            (Js_of_ocaml_Dom_html[15][20], use_capture, passive, target);
   }
   function lostpointercapture(use_capture, passive, target){
    return make_event
            (Js_of_ocaml_Dom_html[15][72], use_capture, passive, target);
   }
   function gotpointercapture(use_capture, passive, target){
    return make_event
            (Js_of_ocaml_Dom_html[15][68], use_capture, passive, target);
   }
   function pointerenter(use_capture, passive, target){
    return make_event
            (Js_of_ocaml_Dom_html[15][77], use_capture, passive, target);
   }
   function pointercancel(use_capture, passive, target){
    return make_event
            (Js_of_ocaml_Dom_html[15][78], use_capture, passive, target);
   }
   function pointerdown(use_capture, passive, target){
    return make_event
            (Js_of_ocaml_Dom_html[15][79], use_capture, passive, target);
   }
   function pointerleave(use_capture, passive, target){
    return make_event
            (Js_of_ocaml_Dom_html[15][80], use_capture, passive, target);
   }
   function pointermove(use_capture, passive, target){
    return make_event
            (Js_of_ocaml_Dom_html[15][81], use_capture, passive, target);
   }
   function pointerout(use_capture, passive, target){
    return make_event
            (Js_of_ocaml_Dom_html[15][82], use_capture, passive, target);
   }
   function pointerover(use_capture, passive, target){
    return make_event
            (Js_of_ocaml_Dom_html[15][83], use_capture, passive, target);
   }
   function pointerup(use_capture, passive, target){
    return make_event
            (Js_of_ocaml_Dom_html[15][84], use_capture, passive, target);
   }
   function transitionend(use_capture, passive, elt){
    return make_event(Js_of_ocaml_Dom_html[15][61], use_capture, passive, elt);
   }
   function transitionstart(use_capture, passive, elt){
    return make_event(Js_of_ocaml_Dom_html[15][60], use_capture, passive, elt);
   }
   function transitionrun(use_capture, passive, elt){
    return make_event(Js_of_ocaml_Dom_html[15][59], use_capture, passive, elt);
   }
   function transitioncancel(use_capture, passive, elt){
    return make_event(Js_of_ocaml_Dom_html[15][62], use_capture, passive, elt);
   }
   function clicks(cancel_handler, use_capture, passive, t){
    return function(_bq_){
     return seq_loop(click, cancel_handler, use_capture, passive, t, _bq_);};
   }
   function copies(cancel_handler, use_capture, passive, t){
    return function(_bp_){
     return seq_loop(copy, cancel_handler, use_capture, passive, t, _bp_);};
   }
   function cuts(cancel_handler, use_capture, passive, t){
    return function(_bo_){
     return seq_loop(cut, cancel_handler, use_capture, passive, t, _bo_);};
   }
   function pastes(cancel_handler, use_capture, passive, t){
    return function(_bn_){
     return seq_loop(paste, cancel_handler, use_capture, passive, t, _bn_);};
   }
   function dblclicks(cancel_handler, use_capture, passive, t){
    return function(_bm_){
     return seq_loop(dblclick, cancel_handler, use_capture, passive, t, _bm_);};
   }
   function mousedowns(cancel_handler, use_capture, passive, t){
    return function(_bl_){
     return seq_loop(mousedown, cancel_handler, use_capture, passive, t, _bl_);};
   }
   function mouseups(cancel_handler, use_capture, passive, t){
    return function(_bk_){
     return seq_loop(mouseup, cancel_handler, use_capture, passive, t, _bk_);};
   }
   function mouseovers(cancel_handler, use_capture, passive, t){
    return function(_bj_){
     return seq_loop(mouseover, cancel_handler, use_capture, passive, t, _bj_);};
   }
   function mousemoves(cancel_handler, use_capture, passive, t){
    return function(_bi_){
     return seq_loop(mousemove, cancel_handler, use_capture, passive, t, _bi_);};
   }
   function mouseouts(cancel_handler, use_capture, passive, t){
    return function(_bh_){
     return seq_loop(mouseout, cancel_handler, use_capture, passive, t, _bh_);};
   }
   function keypresses(cancel_handler, use_capture, passive, t){
    return function(_bg_){
     return seq_loop(keypress, cancel_handler, use_capture, passive, t, _bg_);};
   }
   function keydowns(cancel_handler, use_capture, passive, t){
    return function(_bf_){
     return seq_loop(keydown, cancel_handler, use_capture, passive, t, _bf_);};
   }
   function keyups(cancel_handler, use_capture, passive, t){
    return function(_be_){
     return seq_loop(keyup, cancel_handler, use_capture, passive, t, _be_);};
   }
   function changes(cancel_handler, use_capture, passive, t){
    return function(_bd_){
     return seq_loop(change, cancel_handler, use_capture, passive, t, _bd_);};
   }
   function inputs(cancel_handler, use_capture, passive, t){
    return function(_bc_){
     return seq_loop(input, cancel_handler, use_capture, passive, t, _bc_);};
   }
   function timeupdates(cancel_handler, use_capture, passive, t){
    return function(_bb_){
     return seq_loop
             (timeupdate, cancel_handler, use_capture, passive, t, _bb_);};
   }
   function dragstarts(cancel_handler, use_capture, passive, t){
    return function(_ba_){
     return seq_loop(dragstart, cancel_handler, use_capture, passive, t, _ba_);};
   }
   function dragends(cancel_handler, use_capture, passive, t){
    return function(_a$_){
     return seq_loop(dragend, cancel_handler, use_capture, passive, t, _a$_);};
   }
   function dragenters(cancel_handler, use_capture, passive, t){
    return function(_a__){
     return seq_loop(dragenter, cancel_handler, use_capture, passive, t, _a__);};
   }
   function dragovers(cancel_handler, use_capture, passive, t){
    return function(_a9_){
     return seq_loop(dragover, cancel_handler, use_capture, passive, t, _a9_);};
   }
   function dragleaves(cancel_handler, use_capture, passive, t){
    return function(_a8_){
     return seq_loop(dragleave, cancel_handler, use_capture, passive, t, _a8_);};
   }
   function drags(cancel_handler, use_capture, passive, t){
    return function(_a7_){
     return seq_loop(drag, cancel_handler, use_capture, passive, t, _a7_);};
   }
   function drops(cancel_handler, use_capture, passive, t){
    return function(_a6_){
     return seq_loop(drop, cancel_handler, use_capture, passive, t, _a6_);};
   }
   function mousewheels(cancel_handler, use_capture, passive, t){
    return function(_a5_){
     return seq_loop
             (mousewheel, cancel_handler, use_capture, passive, t, _a5_);};
   }
   function wheels(cancel_handler, use_capture, passive, t){
    return function(_a4_){
     return seq_loop(wheel, cancel_handler, use_capture, passive, t, _a4_);};
   }
   function touchstarts(cancel_handler, use_capture, passive, t){
    return function(_a3_){
     return seq_loop
             (touchstart, cancel_handler, use_capture, passive, t, _a3_);};
   }
   function touchmoves(cancel_handler, use_capture, passive, t){
    return function(_a2_){
     return seq_loop(touchmove, cancel_handler, use_capture, passive, t, _a2_);};
   }
   function touchends(cancel_handler, use_capture, passive, t){
    return function(_a1_){
     return seq_loop(touchend, cancel_handler, use_capture, passive, t, _a1_);};
   }
   function touchcancels(cancel_handler, use_capture, passive, t){
    return function(_a0_){
     return seq_loop
             (touchcancel, cancel_handler, use_capture, passive, t, _a0_);};
   }
   function focuses(cancel_handler, use_capture, passive, t){
    return function(_aZ_){
     return seq_loop(focus, cancel_handler, use_capture, passive, t, _aZ_);};
   }
   function blurs(cancel_handler, use_capture, passive, t){
    return function(_aY_){
     return seq_loop(blur, cancel_handler, use_capture, passive, t, _aY_);};
   }
   function scrolls(cancel_handler, use_capture, passive, t){
    return function(_aX_){
     return seq_loop(scroll, cancel_handler, use_capture, passive, t, _aX_);};
   }
   function submits(cancel_handler, use_capture, passive, t){
    return function(_aW_){
     return seq_loop(submit, cancel_handler, use_capture, passive, t, _aW_);};
   }
   function selects(cancel_handler, use_capture, passive, t){
    return function(_aV_){
     return seq_loop(select, cancel_handler, use_capture, passive, t, _aV_);};
   }
   function aborts(cancel_handler, use_capture, passive, t){
    return function(_aU_){
     return seq_loop(abort, cancel_handler, use_capture, passive, t, _aU_);};
   }
   function errors(cancel_handler, use_capture, passive, t){
    return function(_aT_){
     return seq_loop(error, cancel_handler, use_capture, passive, t, _aT_);};
   }
   function loads(cancel_handler, use_capture, passive, t){
    return function(_aS_){
     return seq_loop(load, cancel_handler, use_capture, passive, t, _aS_);};
   }
   function canplays(cancel_handler, use_capture, passive, t){
    return function(_aR_){
     return seq_loop(canplay, cancel_handler, use_capture, passive, t, _aR_);};
   }
   function canplaythroughs(cancel_handler, use_capture, passive, t){
    return function(_aQ_){
     return seq_loop
             (canplaythrough, cancel_handler, use_capture, passive, t, _aQ_);};
   }
   function durationchanges(cancel_handler, use_capture, passive, t){
    return function(_aP_){
     return seq_loop
             (durationchange, cancel_handler, use_capture, passive, t, _aP_);};
   }
   function emptieds(cancel_handler, use_capture, passive, t){
    return function(_aO_){
     return seq_loop(emptied, cancel_handler, use_capture, passive, t, _aO_);};
   }
   function endeds(cancel_handler, use_capture, passive, t){
    return function(_aN_){
     return seq_loop(ended, cancel_handler, use_capture, passive, t, _aN_);};
   }
   function loadeddatas(cancel_handler, use_capture, passive, t){
    return function(_aM_){
     return seq_loop
             (loadeddata, cancel_handler, use_capture, passive, t, _aM_);};
   }
   function loadedmetadatas(cancel_handler, use_capture, passive, t){
    return function(_aL_){
     return seq_loop
             (loadedmetadata, cancel_handler, use_capture, passive, t, _aL_);};
   }
   function loadstarts(cancel_handler, use_capture, passive, t){
    return function(_aK_){
     return seq_loop(loadstart, cancel_handler, use_capture, passive, t, _aK_);};
   }
   function pauses(cancel_handler, use_capture, passive, t){
    return function(_aJ_){
     return seq_loop(pause, cancel_handler, use_capture, passive, t, _aJ_);};
   }
   function plays(cancel_handler, use_capture, passive, t){
    return function(_aI_){
     return seq_loop(play, cancel_handler, use_capture, passive, t, _aI_);};
   }
   function playings(cancel_handler, use_capture, passive, t){
    return function(_aH_){
     return seq_loop(playing, cancel_handler, use_capture, passive, t, _aH_);};
   }
   function ratechanges(cancel_handler, use_capture, passive, t){
    return function(_aG_){
     return seq_loop
             (ratechange, cancel_handler, use_capture, passive, t, _aG_);};
   }
   function seekeds(cancel_handler, use_capture, passive, t){
    return function(_aF_){
     return seq_loop(seeked, cancel_handler, use_capture, passive, t, _aF_);};
   }
   function seekings(cancel_handler, use_capture, passive, t){
    return function(_aE_){
     return seq_loop(seeking, cancel_handler, use_capture, passive, t, _aE_);};
   }
   function stalleds(cancel_handler, use_capture, passive, t){
    return function(_aD_){
     return seq_loop(stalled, cancel_handler, use_capture, passive, t, _aD_);};
   }
   function suspends(cancel_handler, use_capture, passive, t){
    return function(_aC_){
     return seq_loop(suspend, cancel_handler, use_capture, passive, t, _aC_);};
   }
   function volumechanges(cancel_handler, use_capture, passive, t){
    return function(_aB_){
     return seq_loop
             (volumechange, cancel_handler, use_capture, passive, t, _aB_);};
   }
   function waitings(cancel_handler, use_capture, passive, t){
    return function(_aA_){
     return seq_loop(waiting, cancel_handler, use_capture, passive, t, _aA_);};
   }
   function lostpointercaptures(cancel_handler, use_capture, passive, t){
    return function(_az_){
     return seq_loop
             (lostpointercapture,
              cancel_handler,
              use_capture,
              passive,
              t,
              _az_);};
   }
   function gotpointercaptures(cancel_handler, use_capture, passive, t){
    return function(_ay_){
     return seq_loop
             (gotpointercapture,
              cancel_handler,
              use_capture,
              passive,
              t,
              _ay_);};
   }
   function pointerenters(cancel_handler, use_capture, passive, t){
    return function(_ax_){
     return seq_loop
             (pointerenter, cancel_handler, use_capture, passive, t, _ax_);};
   }
   function pointercancels(cancel_handler, use_capture, passive, t){
    return function(_aw_){
     return seq_loop
             (pointercancel, cancel_handler, use_capture, passive, t, _aw_);};
   }
   function pointerdowns(cancel_handler, use_capture, passive, t){
    return function(_av_){
     return seq_loop
             (pointerdown, cancel_handler, use_capture, passive, t, _av_);};
   }
   function pointerleaves(cancel_handler, use_capture, passive, t){
    return function(_au_){
     return seq_loop
             (pointerleave, cancel_handler, use_capture, passive, t, _au_);};
   }
   function pointermoves(cancel_handler, use_capture, passive, t){
    return function(_at_){
     return seq_loop
             (pointermove, cancel_handler, use_capture, passive, t, _at_);};
   }
   function pointerouts(cancel_handler, use_capture, passive, t){
    return function(_as_){
     return seq_loop
             (pointerout, cancel_handler, use_capture, passive, t, _as_);};
   }
   function pointerovers(cancel_handler, use_capture, passive, t){
    return function(_ar_){
     return seq_loop
             (pointerover, cancel_handler, use_capture, passive, t, _ar_);};
   }
   function pointerups(cancel_handler, use_capture, passive, t){
    return function(_aq_){
     return seq_loop(pointerup, cancel_handler, use_capture, passive, t, _aq_);};
   }
   function transitionends(cancel_handler, use_capture, passive, t){
    return function(_ap_){
     return seq_loop
             (transitionend, cancel_handler, use_capture, passive, t, _ap_);};
   }
   function transitionstarts(cancel_handler, use_capture, passive, t){
    return function(_ao_){
     return seq_loop
             (transitionstart, cancel_handler, use_capture, passive, t, _ao_);};
   }
   function transitionruns(cancel_handler, use_capture, passive, t){
    return function(_an_){
     return seq_loop
             (transitionrun, cancel_handler, use_capture, passive, t, _an_);};
   }
   function transitioncancels(cancel_handler, use_capture, passive, t){
    return function(_am_){
     return seq_loop
             (transitioncancel, cancel_handler, use_capture, passive, t, _am_);};
   }
   function request_animation_frame(param){
    var
     match = caml_call1(Lwt[1], 0),
     s = match[2],
     t = match[1],
     _al_ =
       runtime.caml_js_wrap_callback
        (function(param){return caml_call2(Lwt[52], s, 0);});
    Js_of_ocaml_Dom_html[8].requestAnimationFrame(_al_);
    return t;
   }
   function onload(param){
    return make_event
            (Js_of_ocaml_Dom_html[15][36], 0, 0, Js_of_ocaml_Dom_html[8]);
   }
   var t6 = Js_of_ocaml_Dom_html[8], doc = t6.document;
   function domContentLoaded(param){
    if(doc.readyState === cst_complete) return Lwt[36];
    var match = caml_call1(Lwt[22], 0), w = match[2], t = match[1];
    function wakeup(w, param){
     var _ak_ = caml_call1(Lwt[76], t);
     return _ak_ ? caml_call2(Lwt[52], w, 0) : _ak_;
    }
    function wakeup_exn(w, e){
     var _aj_ = caml_call1(Lwt[76], t);
     return _aj_ ? caml_call2(Lwt[53], w, e) : _aj_;
    }
    var regular = make_event(Js_of_ocaml_Dom_html[15][54], 0, 0, doc);
    function _V_(_ai_){return wakeup_exn(w, _ai_);}
    function _W_(_ah_){return wakeup(w, _ah_);}
    caml_call3(Lwt[32], regular, _W_, _V_);
    function _X_(e, param){
     if(doc.readyState === cst_complete) wakeup(w, e);
     return Lwt[36];
    }
    var
     _Y_ = 0,
     _Z_ = 0,
     ___ = caml_call1(Js_of_ocaml_Dom[14][1], cst_readystatechange),
     readystatechange =
       async_loop
        (function(_ae_, _af_, _ag_){return make_event(___, _ae_, _af_, _ag_);},
         _Z_,
         _Y_,
         doc,
         _X_),
     init =
       make_event(Js_of_ocaml_Dom_html[15][36], 0, 0, Js_of_ocaml_Dom_html[8]);
    function _$_(_ad_){return wakeup_exn(w, _ad_);}
    function _aa_(_ac_){return wakeup(w, _ac_);}
    caml_call3(Lwt[32], init, _aa_, _$_);
    function _ab_(e){
     caml_call1(Lwt[23], regular);
     caml_call1(Lwt[23], readystatechange);
     caml_call1(Lwt[23], init);
     return Lwt[36];
    }
    return caml_call2(Lwt[6], t, _ab_);
   }
   function onunload(param){
    return make_event
            (Js_of_ocaml_Dom_html[15][37], 0, 0, Js_of_ocaml_Dom_html[8]);
   }
   function onbeforeunload(param){
    return make_event
            (Js_of_ocaml_Dom_html[15][38], 0, 0, Js_of_ocaml_Dom_html[8]);
   }
   function onresize(param){
    return make_event
            (Js_of_ocaml_Dom_html[15][39], 0, 0, Js_of_ocaml_Dom_html[8]);
   }
   function onorientationchange(param){
    return make_event
            (Js_of_ocaml_Dom_html[15][40], 0, 0, Js_of_ocaml_Dom_html[8]);
   }
   function onpopstate(param){
    return make_event
            (Js_of_ocaml_Dom_html[15][41], 0, 0, Js_of_ocaml_Dom_html[8]);
   }
   function onhashchange(param){
    return make_event
            (Js_of_ocaml_Dom_html[15][28], 0, 0, Js_of_ocaml_Dom_html[8]);
   }
   function onorientationchange_or_onresiz(param){
    var _T_ = [0, onorientationchange(0), 0], _U_ = [0, onresize(0), _T_];
    return caml_call1(Lwt[16], _U_);
   }
   function onresizes(t){
    var _N_ = 0, _O_ = 0, _P_ = 0, _Q_ = 0;
    return seq_loop
            (function(param, _S_, _R_){return onresize(0);},
             _Q_,
             _P_,
             _O_,
             _N_,
             t);
   }
   function onorientationchanges(t){
    var _H_ = 0, _I_ = 0, _J_ = 0, _K_ = 0;
    return seq_loop
            (function(param, _M_, _L_){return onorientationchange(0);},
             _K_,
             _J_,
             _I_,
             _H_,
             t);
   }
   function onpopstates(t){
    var _B_ = 0, _C_ = 0, _D_ = 0, _E_ = 0;
    return seq_loop
            (function(param, _G_, _F_){return onpopstate(0);},
             _E_,
             _D_,
             _C_,
             _B_,
             t);
   }
   function onhashchanges(t){
    var _v_ = 0, _w_ = 0, _x_ = 0, _y_ = 0;
    return seq_loop
            (function(param, _A_, _z_){return onhashchange(0);},
             _y_,
             _x_,
             _w_,
             _v_,
             t);
   }
   function onorientationchanges_or_onresi(t){
    var _p_ = 0, _q_ = 0, _r_ = 0, _s_ = 0;
    return seq_loop
            (function(param, _u_, _t_){
              return onorientationchange_or_onresiz(0);
             },
             _s_,
             _r_,
             _q_,
             _p_,
             t);
   }
   function limited_onresizes(elapsed_time, t){
    var _k_ = 0, _l_ = 0, _m_ = 0;
    return limited_loop
             (function(param, _o_, _n_){return onresize(0);}, elapsed_time)
            (_m_, _l_, _k_, t);
   }
   function limited_onorientationchanges(elapsed_time, t){
    var _f_ = 0, _g_ = 0, _h_ = 0;
    return limited_loop
             (function(param, _j_, _i_){return onorientationchange(0);},
              elapsed_time)
            (_h_, _g_, _f_, t);
   }
   function limited_onorientationchanges_o(elapsed_time, t){
    var _a_ = 0, _b_ = 0, _c_ = 0;
    return limited_loop
             (function(param, _e_, _d_){
               return onorientationchange_or_onresiz(0);
              },
              elapsed_time)
            (_c_, _b_, _a_, t);
   }
   var
    Js_of_ocaml_lwt_Lwt_js_events =
      [0,
       make_event,
       seq_loop,
       async_loop,
       buffered_loop,
       async,
       func_limited_loop,
       limited_loop,
       click,
       copy,
       cut,
       paste,
       dblclick,
       mousedown,
       mouseup,
       mouseover,
       mousemove,
       mouseout,
       keypress,
       keydown,
       keyup,
       input,
       timeupdate,
       change,
       dragstart,
       dragend,
       dragenter,
       dragover,
       dragleave,
       drag,
       drop,
       focus,
       blur,
       scroll,
       submit,
       select,
       mousewheel,
       wheel,
       touchstart,
       touchmove,
       touchend,
       touchcancel,
       lostpointercapture,
       gotpointercapture,
       pointerenter,
       pointercancel,
       pointerdown,
       pointerleave,
       pointermove,
       pointerout,
       pointerover,
       pointerup,
       transitionend,
       transitionstart,
       transitionrun,
       transitioncancel,
       load,
       error,
       abort,
       canplay,
       canplaythrough,
       durationchange,
       emptied,
       ended,
       loadeddata,
       loadedmetadata,
       loadstart,
       pause,
       play,
       playing,
       ratechange,
       seeked,
       seeking,
       stalled,
       suspend,
       volumechange,
       waiting,
       clicks,
       copies,
       cuts,
       pastes,
       dblclicks,
       mousedowns,
       mouseups,
       mouseovers,
       mousemoves,
       mouseouts,
       keypresses,
       keydowns,
       keyups,
       inputs,
       timeupdates,
       changes,
       dragstarts,
       dragends,
       dragenters,
       dragovers,
       dragleaves,
       drags,
       drops,
       mousewheels,
       wheels,
       touchstarts,
       touchmoves,
       touchends,
       touchcancels,
       focuses,
       blurs,
       scrolls,
       submits,
       selects,
       loads,
       errors,
       aborts,
       canplays,
       canplaythroughs,
       durationchanges,
       emptieds,
       endeds,
       loadeddatas,
       loadedmetadatas,
       loadstarts,
       pauses,
       plays,
       playings,
       ratechanges,
       seekeds,
       seekings,
       stalleds,
       suspends,
       volumechanges,
       waitings,
       lostpointercaptures,
       gotpointercaptures,
       pointerenters,
       pointercancels,
       pointerdowns,
       pointerleaves,
       pointermoves,
       pointerouts,
       pointerovers,
       pointerups,
       transitionends,
       transitionstarts,
       transitionruns,
       transitioncancels,
       request_animation_frame,
       onload,
       domContentLoaded,
       onunload,
       onbeforeunload,
       onresize,
       onorientationchange,
       onpopstate,
       onhashchange,
       onorientationchange_or_onresiz,
       onresizes,
       onorientationchanges,
       onpopstates,
       onhashchanges,
       onorientationchanges_or_onresi,
       limited_onresizes,
       limited_onorientationchanges,
       limited_onorientationchanges_o];
   runtime.caml_register_global
    (22, Js_of_ocaml_lwt_Lwt_js_events, "Js_of_ocaml_lwt__Lwt_js_events");
   return;
  }
  (globalThis));

//# unitInfo: Provides: Js_of_ocaml_lwt__Lwt_file
//# unitInfo: Requires: Assert_failure, Js_of_ocaml__Dom, Js_of_ocaml__File, Js_of_ocaml__Js, Lwt
(function
  (globalThis){
   "use strict";
   var
    runtime = globalThis.jsoo_runtime,
    caml_maybe_attach_backtrace = runtime.caml_maybe_attach_backtrace;
   function caml_call1(f, a0){
    return (f.l >= 0 ? f.l : f.l = f.length) == 1
            ? f(a0)
            : runtime.caml_call_gen(f, [a0]);
   }
   function caml_call2(f, a0, a1){
    return (f.l >= 0 ? f.l : f.l = f.length) == 2
            ? f(a0, a1)
            : runtime.caml_call_gen(f, [a0, a1]);
   }
   var
    global_data = runtime.caml_get_global_data(),
    Js_of_ocaml_File = global_data.Js_of_ocaml__File,
    Js_of_ocaml_Js = global_data.Js_of_ocaml__Js,
    Assert_failure = global_data.Assert_failure,
    Lwt = global_data.Lwt,
    Js_of_ocaml_Dom = global_data.Js_of_ocaml__Dom,
    _a_ = [0, "lib/lwt/lwt_file.ml", 37, 22];
   function reader(kind, file){
    var
     fileReader = Js_of_ocaml_File[6],
     reader = new fileReader,
     match = caml_call1(Lwt[22], 0),
     w = match[2],
     res = match[1];
    function _b_(param){
     if(2 === reader.readyState){
      var
       _d_ = caml_call1(Js_of_ocaml_File[3][4], reader.result),
       match = caml_call1(Js_of_ocaml_Js[5][10], _d_);
      if(! match)
       throw caml_maybe_attach_backtrace([0, Assert_failure, _a_], 1);
      var s = match[1];
      caml_call2(Lwt[52], w, s);
     }
     return Js_of_ocaml_Js[8];
    }
    var t3 = caml_call1(Js_of_ocaml_Dom[10], _b_);
    reader.onloadend = t3;
    function _c_(param){return reader.abort();}
    caml_call2(Lwt[24], res, _c_);
    if(typeof kind === "number")
     if(-550809787 === kind)
      reader.readAsDataURL(file);
     else if(936573133 <= kind)
      reader.readAsText(file);
     else
      reader.readAsBinaryString(file);
    else{var e = kind[2]; reader.readAsText(file, e);}
    return res;
   }
   function readAsBinaryString(file){return reader(-1041425454, file);}
   function readAsText(file){return reader(936573133, file);}
   function readAsText_withEncoding(file, e){return reader([0, -973237525, e], file);
   }
   function readAsDataURL(file){return reader(-550809787, file);}
   var
    Js_of_ocaml_lwt_Lwt_file =
      [0,
       readAsBinaryString,
       readAsText,
       readAsText_withEncoding,
       readAsDataURL];
   runtime.caml_register_global
    (14, Js_of_ocaml_lwt_Lwt_file, "Js_of_ocaml_lwt__Lwt_file");
   return;
  }
  (globalThis));

//# unitInfo: Provides: Js_of_ocaml_lwt
//# unitInfo: Requires: Js_of_ocaml__File, Js_of_ocaml__XmlHttpRequest, Js_of_ocaml_lwt__Lwt_file, Js_of_ocaml_lwt__Lwt_xmlHttpRequest
(function
  (globalThis){
   "use strict";
   var
    runtime = globalThis.jsoo_runtime,
    global_data = runtime.caml_get_global_data(),
    Js_of_ocaml_XmlHttpRequest = global_data.Js_of_ocaml__XmlHttpRequest,
    Js_of_ocaml_lwt_Lwt_xmlHttpReq =
      global_data.Js_of_ocaml_lwt__Lwt_xmlHttpRequest,
    Js_of_ocaml_File = global_data.Js_of_ocaml__File,
    Js_of_ocaml_lwt_Lwt_file = global_data.Js_of_ocaml_lwt__Lwt_file,
    create = Js_of_ocaml_XmlHttpRequest[1],
    Event = Js_of_ocaml_XmlHttpRequest[2],
    Wrong_headers = Js_of_ocaml_lwt_Lwt_xmlHttpReq[1],
    perform_raw = Js_of_ocaml_lwt_Lwt_xmlHttpReq[2],
    perform_raw_url = Js_of_ocaml_lwt_Lwt_xmlHttpReq[3],
    perform = Js_of_ocaml_lwt_Lwt_xmlHttpReq[4],
    get = Js_of_ocaml_lwt_Lwt_xmlHttpReq[5],
    XmlHttpRequest =
      [0,
       create,
       Event,
       Wrong_headers,
       perform_raw,
       perform_raw_url,
       perform,
       get],
    blob_from_string = Js_of_ocaml_File[1],
    blob_from_any = Js_of_ocaml_File[2],
    CoerceTo = Js_of_ocaml_File[3],
    ReaderEvent = Js_of_ocaml_File[4],
    filename = Js_of_ocaml_File[5],
    fileReader = Js_of_ocaml_File[6],
    addEventListener = Js_of_ocaml_File[7],
    readAsBinaryString = Js_of_ocaml_lwt_Lwt_file[1],
    readAsText = Js_of_ocaml_lwt_Lwt_file[2],
    readAsText_withEncoding = Js_of_ocaml_lwt_Lwt_file[3],
    readAsDataURL = Js_of_ocaml_lwt_Lwt_file[4],
    File =
      [0,
       blob_from_string,
       blob_from_any,
       CoerceTo,
       ReaderEvent,
       filename,
       fileReader,
       addEventListener,
       readAsBinaryString,
       readAsText,
       readAsText_withEncoding,
       readAsDataURL],
    Js_of_ocaml_lwt = [0, XmlHttpRequest, File];
   runtime.caml_register_global(4, Js_of_ocaml_lwt, "Js_of_ocaml_lwt");
   return;
  }
  (globalThis));

//# sourceMappingURL=data:application/json;base64,
